


                              IC Compiler II (TM)

             Version P-2019.03-SP1 for linux64 - Apr 25, 2019 -SLE

                    Copyright (c) 1988 - 2019 Synopsys, Inc.
   This software and the associated documentation are proprietary to Synopsys,
 Inc. This software may only be used in accordance with the terms and conditions
 of a written license agreement with Synopsys, Inc. All other use, reproduction,
            or distribution of this software is strictly prohibited.

##########################################################################################
# Tool: IC Compiler II
# Script: place_opt.tcl
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
source -echo ./rm_setup/icc2_pnr_setup.tcl 
puts "RM-info : Running script [info script]\n"
RM-info : Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_setup/icc2_pnr_setup.tcl

##########################################################################################
# Tool: IC Compiler II
# Script: icc2_pnr_setup.tcl
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
source -echo ./rm_setup/icc2_common_setup.tcl 
# source -echo -verbose /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/dcrm/rm_setup/common_setup.tcl
source -echo -verbose ../dcrm/rm_setup/common_setup.tcl
puts "RM-Info: Running script [info script]\n"
RM-Info: Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/dcrm/rm_setup/common_setup.tcl

set TECH_HOME "/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech"
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech
set STDCELL_HOME "${TECH_HOME}/nangate/NanGate_15nm_OCL_v0.1_2014_06.A"
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/nangate/NanGate_15nm_OCL_v0.1_2014_06.A
##########################################################################################
# Variables common to all reference methodology scripts
# Script: common_setup.tcl
# Version: P-2019.03-SP2 
# Copyright (C) 2007-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
set DESIGN_NAME                   "xbar"  ;#  The name of the top-level design
xbar
set DESIGN_REF_DATA_PATH          "./src/rtl"  ;#  Absolute path prefix variable for library/design data.
./src/rtl
#  Use this variable to prefix the common absolute path  
#  to the common variables defined below.
#  Absolute paths are mandatory for hierarchical 
#  reference methodology flow.
##########################################################################################
# Hierarchical Flow Design Variables
##########################################################################################
set HIERARCHICAL_DESIGNS           "" ;# List of hierarchical block design names "DesignA DesignB" ...
set HIERARCHICAL_CELLS             "" ;# List of hierarchical block cell instance names "u_DesignA u_DesignB" ...
##########################################################################################
# Library Setup Variables
##########################################################################################
# For the following variables, use a blank space to separate multiple entries.
# Example: set TARGET_LIBRARY_FILES "lib1.db lib2.db lib3.db"
set ADDITIONAL_SEARCH_PATH        "./src/rtl"  ;#  Additional search path to be added to the default search path
./src/rtl
set TARGET_LIBRARY_FILES          ""  ;#  Target technology logical libraries
append TARGET_LIBRARY_FILES "   ${STDCELL_HOME}/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_fast_conditional_ccs.db   ${STDCELL_HOME}/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_low_temp_conditional_ccs.db   ${STDCELL_HOME}/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_slow_conditional_ccs.db   ${STDCELL_HOME}/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_worst_low_conditional_ccs.db "
   /afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/nangate/NanGate_15nm_OCL_v0.1_2014_06.A/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_fast_conditional_ccs.db   /afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/nangate/NanGate_15nm_OCL_v0.1_2014_06.A/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_low_temp_conditional_ccs.db   /afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/nangate/NanGate_15nm_OCL_v0.1_2014_06.A/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_slow_conditional_ccs.db   /afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/nangate/NanGate_15nm_OCL_v0.1_2014_06.A/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_worst_low_conditional_ccs.db 
set ADDITIONAL_LINK_LIB_FILES     ""  ;#  Extra link logical libraries not included in TARGET_LIBRARY_FILES
set MIN_LIBRARY_FILES             ""  ;#  List of max min library pairs "max1 min1 max2 min2 max3 min3"...
set MW_REFERENCE_LIB_DIRS         "${TECH_HOME}/ece720/Nangate_15nm_OCL_Milkyway_v2014_06/Nangate_15nm_OCL_v2014_06"  ;#  Milkyway reference libraries (include IC Compiler ILMs here)
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/ece720/Nangate_15nm_OCL_Milkyway_v2014_06/Nangate_15nm_OCL_v2014_06
set MW_REFERENCE_CONTROL_FILE     ""  ;#  Reference Control file to define the Milkyway reference libs
set TECH_FILE                     "${TECH_HOME}/ece720/Nangate_15nm_OCL_Milkyway_v2014_06/FreePDK15.tf"  ;#  Milkyway technology file
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/ece720/Nangate_15nm_OCL_Milkyway_v2014_06/FreePDK15.tf
set MAP_FILE                      "${TECH_HOME}/ece720/FreePDK15_star_rcxt/layer.map"  ;#  Mapping file for TLUplus
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/ece720/FreePDK15_star_rcxt/layer.map
set TLUPLUS_MAX_FILE              "${TECH_HOME}/ece720/FreePDK15_star_rcxt/FreePDK15_RCmax.tluplus"  ;#  Max TLUplus file
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/ece720/FreePDK15_star_rcxt/FreePDK15_RCmax.tluplus
set TLUPLUS_MIN_FILE              "${TECH_HOME}/ece720/FreePDK15_star_rcxt/FreePDK15_Cmin.tluplus"  ;#  Min TLUplus file
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/ece720/FreePDK15_star_rcxt/FreePDK15_Cmin.tluplus
set MIN_ROUTING_LAYER            "M1"   ;# Min routing layer
M1
set MAX_ROUTING_LAYER            "MINT3"   ;# Max routing layer
MINT3
set LIBRARY_DONT_USE_FILE        ""   ;# Tcl file with library modifications for dont_use
set LIBRARY_DONT_USE_PRE_COMPILE_LIST ""; #Tcl file for customized don't use list before first compile
set LIBRARY_DONT_USE_PRE_INCR_COMPILE_LIST "";# Tcl file with library modifications for dont_use before incr compile
##########################################################################################
# Multivoltage Common Variables
#
# Define the following multivoltage common variables for the reference methodology scripts 
# for multivoltage flows. 
# Use as few or as many of the following definitions as needed by your design.
##########################################################################################
set PD1                          ""           ;# Name of power domain/voltage area  1
set VA1_COORDINATES              {}           ;# Coordinates for voltage area 1
set MW_POWER_NET1                "VDD1"       ;# Power net for voltage area 1
VDD1
set PD2                          ""           ;# Name of power domain/voltage area  2
set VA2_COORDINATES              {}           ;# Coordinates for voltage area 2
set MW_POWER_NET2                "VDD2"       ;# Power net for voltage area 2
VDD2
set PD3                          ""           ;# Name of power domain/voltage area  3
set VA3_COORDINATES              {}           ;# Coordinates for voltage area 3
set MW_POWER_NET3                "VDD3"       ;# Power net for voltage area 3
VDD3
set PD4                          ""           ;# Name of power domain/voltage area  4
set VA4_COORDINATES              {}           ;# Coordinates for voltage area 4
set MW_POWER_NET4                "VDD4"       ;# Power net for voltage area 4
VDD4
puts "RM-Info: Completed script [info script]\n"
RM-Info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/dcrm/rm_setup/common_setup.tcl

puts "RM-info : Running script [info script]\n"
RM-info : Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_setup/icc2_common_setup.tcl

set TECH_HOME "/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech"
set DCRM_RESULTS_DIR "../dcrm/results"
##########################################################################################
# Tool: IC Compiler II
# Script: icc2_common_setup.tcl
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
##########################################################################################
## Required variables
## These variables must be correctly filled in for the flow to run properly
##########################################################################################
set DESIGN_NAME 		"xbar" ;# Required; name of the design to be worked on; also used as the block name when scripts save or copy a block
set LIBRARY_SUFFIX		"" ;# Suffix for the design library name ; default is unspecified   
set DESIGN_LIBRARY 		"${DESIGN_NAME}${LIBRARY_SUFFIX}" ;# Name of the design library; default is ${DESIGN_NAME}${LIBRARY_SUFFIX}
set REFERENCE_LIBRARY 		"${TECH_HOME}/ece720/Nangate_15nm_OCL_ICC2_LibPrep_v2014_06/icc2_cell_lib/NanGate_15nm_OCL.ndm"	;# Required; a list of reference libraries for the design library.
;#	for library configuration flow (LIBRARY_CONFIGURATION_FLOW set to true below): 
;#		- specify the list of physical source files to be used for library configuration during create_lib
;# 	for hierarchical designs using bottom-up flows: include subblock design libraries in the list;
;# 	for hierarchical designs using ETMs: include the ETM library in the list.
;# 		- If unpack_rm_dirs.pl is used to create dir structures for hierarchical designs, 
;#		  in order to transition between hierarchical DP and hierarchical PNR flows properly, 
;#		  absolute paths are a requirement.
set COMPRESS_LIBS               "false" ;# Save libs as compressed NDM; only used in DP.
set VERILOG_NETLIST_FILES	"${DCRM_RESULTS_DIR}/xbar.mapped.v"	;# Verilog netlist files;
;# 	for DP: required
;# 	for PNR: required if INIT_DESIGN_INPUT is ASCII in icc2_pnr_setup.tcl; not required for DC_ASCII or DP_RM_NDM
set UPF_FILE 			""	;# A UPF file
;# 	for DP: required
;# 	for PNR: required if INIT_DESIGN_INPUT is ASCII in icc2_pnr_setup.tcl; not required for DC_ASCII or DP_RM_NDM
;#          for hierarchical designs using ETMs, load the block upf file
;#          for each sub-block linked to ETM, include the following line in the UPF_FILE 
;#              load_upf block.upf -scope block_instance_name
set UPF_SUPPLEMENTAL_FILE	""      ;# The supplemental UPF file. Only needed if you are running golden UPF flow, in which case, you need both UPF_FILE and this.
;# 	for DP: required
;# 	for PNR: required if INIT_DESIGN_INPUT is ASCII in icc2_pnr_setup.tcl; not required for DC_ASCII or DP_RM_NDM
;#	    If UPF_SUPPLEMENTAL_FILE is specified, scripts assume golden UPF flow. load_upf and save_upf commands will be different.	
set TCL_PARASITIC_SETUP_FILE	""	;# Specify a Tcl script to read in your TLU+ files by using the read_parasitic_tech command;
;# refer to the example in templates/init_design.read_parasitic_tech_example.tcl 
set TCL_MCMM_SETUP_FILE		"${DCRM_RESULTS_DIR}/ICC2_files/xbar.MCMM/top.tcl"	;# Specify a Tcl script to create your corners, modes, scenarios and load respective constraints;
;# two examples are provided in templates/: 
;# init_design.mcmm_example.explicit.tcl: provide mode, corner, and scenario constraints; create modes, corners, 
;# and scenarios; source mode, corner, and scenario constraints, respectively 
;# init_design.mcmm_example.auto_expanded.tcl: provide constraints for the scenarios; create modes, corners, 
;# and scenarios; source scenario constraints which are then expanded to associated modes and corners
;# 	for DP: required
;# 	for PNR: required if INIT_DESIGN_INPUT is ASCII in icc2_pnr_setup.tcl; not required for DC_ASCII or DP_RM_NDM
set TECH_FILE 			"${TECH_HOME}/ece720/Nangate_15nm_OCL_Milkyway_v2014_06/FreePDK15.tf" 	;# A technology file; TECH_FILE and TECH_LIB are mutually exclusive ways to specify technology information; 
;# TECH_FILE is recommended, although TECH_LIB is also supported in ICC2 RM. 
set TECH_LIB			""	;# Specify the reference library to be used as a dedicated technology library;
;# as a best practice, please list it as the first library in the REFERENCE_LIBRARY list 
set TECH_LIB_INCLUDES_TECH_SETUP_INFO true 
;# Indicate whether TECH_LIB contains technology setup information such as routing layer direction, offset, 
;# site default, and site symmetry, etc. TECH_LIB may contain this information if loaded during library prep.
;# true|false; this variable is associated with TECH_LIB. 
set TCL_TECH_SETUP_FILE		"init_design.tech_setup.tcl"
;# Specify a TCL script for setting routing layer direction, offset, site default, and site symmetry list, etc.
;# init_design.tech_setup.tcl is the default. Use it as a template or provide your own script.
;# This script will only get sourced if the following conditions are met: 
;# (1) TECH_FILE is specified (2) TECH_LIB is specified && TECH_LIB_INCLUDES_TECH_SETUP_INFO is false 
set ROUTING_LAYER_DIRECTION_OFFSET_LIST "   {M1 vertical 0.0}   {MINT1 horizontal 0.0}   {MINT2 vertical 0.0}   {MINT3 horizontal 0.0}   {MINT4 vertical 0.0}   {MINT5 horizontal 0.0}   {MSMG1 vertical 0.0}   {MSMG2 horizontal 0.0}   {MSMG3 vertical 0.0}   {MSMG4 horizontal 0.0}   {MSMG5 vertical 0.0}   {MG1 horizontal 0.0}   {MG2 vertical 0.0} "
;# Specify the routing layers as well as their direction and offset in a list of space delimited pairs;
;# This variable should be defined for all metal routing layers in technology file;
;# Syntax is "{metal_layer_1 direction offset} {metal_layer_2 direction offset} ...";
;# It is required to at least specify metal layers and directions. Offsets are optional. 
;# Example1 is with offsets specified: "{M1 vertical 0.2} {M2 horizontal 0.0} {M3 vertical 0.2}"
;# Example2 is without offsets specified: "{M1 vertical} {M2 horizontal} {M3 vertical}"
##########################################################################################
## Optional variables
## Specify these variables if the corresponding functions are desired 
##########################################################################################
set DESIGN_LIBRARY_SCALE_FACTOR	"1000"	;# Specify the length precision for the library. Length precision for the design
;# library and its ref libraries must be identical. Tool default is 10000, which
;# implies one unit is one Angstrom or 0.1nm.
set UPF_UPDATE_SUPPLY_SET_FILE	""	;# A UPF file to resolve UPF supply sets
set DEF_FLOORPLAN_FILES		""	;# DEF files which contain the floorplan information;
;# 	for DP: not required
;# 	for PNR: required if INIT_DESIGN_INPUT = ASCII in icc2_pnr_setup.tcl and neither TCL_FLOORPLAN_FILE or 
;#		 initialize_floorplan is used; DEF_FLOORPLAN_FILES and TCL_FLOORPLAN_FILE are mutually exclusive;
;# 	         not required if INIT_DESIGN_INPUT = DC_ASCII or DP_RM_NDM
set DEF_SCAN_FILE		""	;# A scan DEF file for scan chain information;
;# 	for PNR: not required if INIT_DESIGN_INPUT = DC_ASCII or DP_RM_NDM, as SCANDEF is expected to be loaded already
set DEF_SITE_NAME_PAIRS		{}	;# A list of site name pairs for read_def -convert; 
;# specify site name pairs with from_site first followed by to_site;
;# Example: set DEF_SITE_NAME_PAIRS {{from_site_1 to_site_1} {from_site_2 to_site_2}} 	
set SITE_DEFAULT		""	;# Specify the default site name if there are multiple site defs in the technology file;
;# this is to be used by initialize_floorplan command; example: set SITE_DEFAULT "unit";
;# this is applied in the init_design.tech_setup.tcl script 
set SITE_SYMMETRY_LIST	""		;# Specify a list of site def and its symmetry value;
;# this is to be used by read_def or initialize_floorplan command to control the site symmetry;
;# example: set SITE_SYMMETRY_LIST "{unit Y} {unit1 Y}"; this is applied in the init_design.tech_setup.tcl script 
set MIN_ROUTING_LAYER		"M1"	;# Min routing layer name; normally should be specified; otherwise tool can use all metal layers
set MAX_ROUTING_LAYER		"MINT3"	;# Max routing layer name; normally should be specified; otherwise tool can use all metal layers
set LIBRARY_CONFIGURATION_FLOW	false	;# Set it to true enables library configuration flow which calls the library manager under the hood to generate .nlibs, 
;# save them to disk, and automatically link them to the design.
;# Requires LINK_LIBRARY to be specified with .db files and REFERENCE_LIBRARY to be specified with physical
;# source files for the library configuration flow. Also search_path (in icc2_pnr_setup.tcl) should include paths 
;# to these .db and physical source files.
set LINK_LIBRARY		""	;# Specify .db files;
;# 	for running VC-LP (vc_lp.tcl) and Formality (fm.tcl): required
;# 	for ICC-II without LIBRARY_CONFIGURATION_FLOW enabled: not required
;#	for ICC-II with LIBRARY_CONFIGURATION_FLOW enabled: required; 
;#      	- the .db files specified will be used for the library configuration under the hood during create_lib 
##########################################################################################
## Variables related to flow controls of flat PNR, hierarchical PNR and transition with DP
##########################################################################################
set DESIGN_STYLE		"flat"	;# Specify the design style; flat|hier; default is flat; 
;# specify flat for a totally flat flow (flat PNR for short) and 
;# specify hier for a hierarchical flow (hier PNR for short);
;# 	for hier PNR: required and auto set if unpack_rm_dirs.pl is used; (see README.unpack_rm_dirs.txt for details)
;# 	for flat PNR: this should set to flat (default)
;#	for DP: not used 
set PHYSICAL_HIERARCHY_LEVEL	"" 	;# Specify the current level of hierarchy for the hierarchical PNR flow; top|intermediate|bottom;
;# 	for hier PNR: required and auto set if unpack_rm_dirs.pl is used; (see README.unpack_rm_dirs.txt for details)
;# 	for flat PNR and for DP: not used.
set RELEASE_DIR_DP		"" 	;# Specify the release directory of DP RM; 
;# this is where init_design.tcl of PNR flow gets DP RM released libraries;
;# 	for hier PNR: required and auto set if unpack_rm_dirs.pl is used; (see README.unpack_rm_dirs.txt for details)
;# 	for flat PNR: required if INIT_DESIGN_INPUT = DP_RM_NDM, as init_design.tcl needs to know where DP RM libraries are
;#	for DP: not used 
set RELEASE_LABEL_NAME_DP 	"for_pnr"	
;# Specify the label name of the block in the DP RM released library;
;# this is the label name which init_design.tcl of PNR flow will open. 
set RELEASE_DIR_PNR		"" 	;# Specify the release directory of PNR RM; 
;# this is where the init_design.tcl of hierarchical PNR flow gets the sub-block libraries;	
;# 	for hier PNR: required and auto set if unpack_rm_dirs.pl is used; (see README.unpack_rm_dirs.txt for details)
;# 	for flat PNR and for DP: not used.
##########################################################################################
## Variables related to REDHAWK ANALYSIS FUSION
##########################################################################################
set REDHAWK_SEARCH_PATH		"" 	;# Required. Search path to the NDM, reference libraries, and etc.
puts "RM-info : Completed script [info script]\n"
RM-info : Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_setup/icc2_common_setup.tcl

########################################################################################## 
## Variables for init_design inputs (used by init_design.tcl)
##########################################################################################
set INIT_DESIGN_INPUT 		"DC_ASCII"	;# Specify one of the 3 options: ASCII | DC_ASCII | DP_RM_NDM; default is ASCII.
;# 1.ASCII: assumes all design input files are ASCII and will read them in individually.
;# 2.DC_ASCII: for design transfer from DC using the write_icc2_files command;
;#   sources ${DCRM_RESULTS_DIR}/${DCRM_FINAL_DESIGN_ICC2}/${DESIGN_NAME}.icc2_script.tcl;
;#   you can change the default of DC_RESULTS_DIR and DCRM_FINAL_DESIGN_ICC2 below;
;#   commonly used in combination with SPG flow (set PLACE_OPT_SPG_FLOW true below)  
;# 3.DP_RM_NDM: if ICC2-DP-RM is completed, you can take its NDM outputs and skip the design creation steps;
;#   for PNR flat (DESIGN_STYLE set to flat), script copies the design library from ICC2-DP-RM release 
;#   area (specified by RELEASE_DIR_DP) and opens design;    
;#   for PNR hier flow (DESIGN_STYLE set to hier), script will either copy design library 
;#   from ICC2-DP-RM release area or in addition to that, copy design library of the child blocks from PNR
;#   release area (specified by RELEASE_DIR_PNR), and then open design.
#set DCRM_RESULTS_DIR  		"./results" ;# used by DC_ASCII to specify DC-RM output directory. Default is results.   
;# (Rhett Davis) Moved this variable to icc2_common_setup.tcl for use with DP flow
set DCRM_FINAL_DESIGN_ICC2 	"ICC2_files" ;# output directory name generated by DC-RM's write_icc2_files command;
;# only valid if you specify DC_ASCII for INIT_DESIGN_INPUT;
;# The directory contains verilog, floorplan, scenario settings, and constraints from DC
;# in a format that IC Compiler II can source.    
set POCV_CORNER_FILE_MAPPING_LIST 	"" ;# a list of corner and its associated POCV file in pairs, as POCV is corner dependant;
;# same corner can have multiple corresponding files;
;# example: set POCV_CORNER_FILE_MAPPING_LIST "{corner1 file1a} {corner1 file1b} {corner2 file2}";
;# in the example, file1a and file1b will be loaded for corner1, file2 will be loaded for corner2.
;# Note: POCV_CORNER_FILE_MAPPING_LIST will take precedence if AOCV_CORNER_TABLE_MAPPING_LIST is also specified
set AOCV_CORNER_TABLE_MAPPING_LIST 	"" ;# a list of corner and its associated AOCV table in pairs, as AOCV is corner dependant;
;# same corner can have multiple corresponding tables;
;# example: set AOCV_CORNER_TABLE_MAPPING_LIST "{corner1 table1a} {corner1 table1b} {corner2 table2}";
;# in the example, table1a and table1b will be loaded for corner1, table2 will be loaded for corner2.
set TCL_PAD_CONSTRAINTS_FILE		"" ;# a Tcl script for your pad constraint commands used by place_io of 
;# templates/init_design.flat_design_planning_example.tcl sourced by init_design.tcl
set TCL_MV_SETUP_FILE			"" ;# a Tcl script placeholder for your MV setup commands,such as create_voltage_area, 
;# placement bound, power switch creation and level shifter insertion, etc;
;# refer to templates/init_design.power_switch_example.tcl for sample commands   
set TCL_PG_CREATION_FILE		"" ;# a Tcl script placeholder for your power ground network creation commands,
;# such as create_pg*, set_pg_strategy, compile_pg, etc;
set TCL_FLOORPLAN_FILE			"" ;# Tcl floorplan file written by the write_floorplan command; for example, floorplan/floorplan.tcl;
;# TCL_FLOORPLAN_FILE and DEF_FLOORPLAN_FILES are mutually exclusive; please specify only one of them;
;# Not effective if INIT_DESIGN_INPUT = DC_ASCII or DP_RM_NDM.
;# The write_floorplan command writes a floorplan.tcl Tcl script and a floorplan.def DEF file;
;# reading floorplan.tcl alone can restore the entire floorplan - refer to write_floorplan man for more details  
set TCL_ADDITIONAL_FLOORPLAN_FILE 	"" ;# a supplementary Tcl constraint file; sourced after DEF_FLOORPLAN_FILE or TCL_FLOORPLAN_FILE is read, 
;# or initialize_floorplan is done; can be used to cover additional floorplan constructs, 
;# such as bounds, pin guides, or route guides, etc; not valid if INIT_DESIGN_INPUT = DC_ASCII or DP_RM_NDM.
set TCL_USER_INIT_DESIGN_POST_SCRIPT ""	;# An optional Tcl file to be sourced at the very end of init_design.tcl before save_block.
########################################################################################## 
## Variables for constraints or settings that impact multiple steps (used across flow)
##########################################################################################
set TCL_PLACEMENT_SPACING_LABEL_RULE_FILE "" ;# A file to specify your placement spacing labels and rules.
;# Example : set_placement_spacing_label -name X -side both -lib_cells [get_lib_cells -of [get_cells]]
;# Example : set_placement_spacing_rule -labels {X SNPS_BOUNDARY} {0 1}
set SAIF_FILE				"" ;# Specify a SAIF file for accurate power computation for features such as
;# total power (opt.power.mode set to total) and enhanced low power placement (place.coarse.enhanced_low_power_effort).
;# sourced at the beginning of place_opt.tcl
set SAIF_FILE_POWER_SCENARIO		"" ;# SAIF_FILE related; specify a power scenario where the SAIF is to be applied
set SAIF_FILE_SOURCE_INSTANCE		"" ;# SAIF_FILE related; name of the instance of the current design as it appears in SAIF file.
set SAIF_FILE_TARGET_INSTANCE		"" ;# SAIF_FILE related; name of the target instance on which activity is to be annotated.
set OPTIMIZATION_FREEZE_PORT_LIST 	"" ;# List of cells (for ex, clock gen modules, or customized logics that should not be touched) to which freeze_clock_ports 
;# and freeze_data_ports attribute will be set to prevent optimization from modifying their port signature; 
;# especially useful if you do formal verification by modules. 
;# Sets opt.dft.hier_preservation to true and runs set_freeze_port -all on the specified cells.
set TCL_USER_CONNECT_PG_NET_SCRIPT ""	;# An optional Tcl file for customized connect_pg_net command and options, such as for bias pins of cells added by opto;
;# sourced by all the main scripts prior to the save_block command
# ---------------------------------
# Lib cell purpose restrictions
# ---------------------------------
set TCL_LIB_CELL_PURPOSE_FILE 		"set_lib_cell_purpose.tcl" ;# A Tcl file which applies lib cell purpose related restrictions;
;# You can specify it with your own customized script	
;# RM default is set_lib_cell_purpose.tcl which includes the following restrictions, each controlled by
;# an individual variable : dont use cells (TCL_LIB_CELL_DONT_USE_FILE), tie cells (TIE_LIB_CELL_PATTERN_LIST), 
;# hold fixing (HOLD_FIX_LIB_CELL_PATTERN_LIST), CTS (CTS_LIB_CELL_PATTERN_LIST) and CTS-exclusive cells (CTS_ONLY_LIB_CELL_PATTERN_LIST). 
## The following 5 *_LIB_CELL_* variables are only applicable if set_lib_cell_purpose.tcl is used for lib cell purpose restrictions.
#  If you do not plan to use set_lib_cell_purpose.tcl, specify TCL_LIB_CELL_PURPOSE_FILE with your own file and you don't have to specify the following variables.
set TCL_LIB_CELL_DONT_USE_FILE 		"" ;# A Tcl file for customized don't use ("set_lib_cell_purpose -exclude <purpose>" commands).
;# The file is to be sourced in set_lib_cell_purpose.tcl, which is the default script for handling lib cell 
;# purpose restrictions specified by the variable TCL_LIB_CELL_PURPOSE_FILE above.
;# It only takes effect if TCL_LIB_CELL_PURPOSE_FILE is set to the default value set_lib_cell_purpose.tcl
set TIE_LIB_CELL_PATTERN_LIST 		"" ;# A list of TIE lib cell patterns to be included for optimization;
;# Example : set TIE_LIB_CELL_PATTERN_LIST "*/TIE* */ttt*"
set HOLD_FIX_LIB_CELL_PATTERN_LIST 	"" ;# A list of hold time fixing lib cell patterns to be included only for hold
set CTS_LIB_CELL_PATTERN_LIST 		"" ;# List of CTS lib cell patterns to be used by CTS; 
;# please include repeaters, always-on repeaters (for MV-CTS), 
;# and gates (for sizing pre-existing gates)/always-on buffers;
;# Please also include flops as CCD can size flops to improve timing.
;# example : set CTS_LIB_CELL_PATTERN_LIST "*/NBUF* */AOBUF* */AOINV* */SDFF*"
set CTS_ONLY_LIB_CELL_PATTERN_LIST 	"" ;# List of CTS lib cell patterns to be used by CTS "exclusively", such as clock specific
;# buffers and inverters. Please be aware that these cells will be applied with only cts 
;# purpose and nothing else. If you want to use these lib cells for other purposes, 
;# such as optimization and hold, specify them in CTS_LIB_CELL_PATTERN_LIST instead
# ---------------------------------
# Clock NDR
# ---------------------------------
set TCL_CTS_NDR_RULE_FILE 		"cts_ndr.tcl" ;# Specify a script for clock NDR creation and association, to be sourced at place_opt
;# By default the variable is set to cts_ndr.tcl, which is an RM provided example.
;# Important: to use the example script, you must also specify CTS_NDR_RULE_NAME, CTS_INTERNAL_NDR_RULE_NAME,
;# or CTS_LEAF_NDR_RULE_NAME (see below for details), otherwise the script won't do anything.
## Note: the CTS_*NDR* variables below are only applicable if TCL_CTS_NDR_RULE_FILE is set to the RM provided example script. 
## If you specify your own script for TCL_CTS_NDR_RULE_FILE, variables below will not be used.
## For root clock nets
set CTS_NDR_RULE_NAME			"" ;# Specify a clock NDR rule for root nets;
;# required for the example script to work on the root and internal nets.
;# Below are the 3 predefined rules supported:  
;# rm_2w2s : double width double spacing 
;# rm_2w2s_shield_default : double width double spacing + shielding with default width and spacing
;# rm_2w2s_shield_list : double width double spacing + shielding with customized per layer width and spacing
set CTS_NDR_SHIELDING_LAYER_WIDTH_LIST 	"" ;# A list of layer_name shield_width ,for ex, "M1 0.1 M2 0.1 M3 0.1";
;# required if you specify rm_2w2s_shield_list as CTS_NDR_RULE_NAME.
set CTS_NDR_SHIELDING_LAYER_SPACING_LIST "" ;# A list of layer_name shield_spacing, for ex, "M1 0.1 M2 0.1 M3 0.1";
;# required if you specify rm_2w2s_shield_list as CTS_NDR_RULE_NAME.
set CTS_NDR_MIN_ROUTING_LAYER		"" ;# Min routing layer for set_clock_routing_rules to which CTS_NDR_RULE_NAME is applied. 
set CTS_NDR_MAX_ROUTING_LAYER		"" ;# Max routing layer for set_clock_routing_rules to which CTS_NDR_RULE_NAME is applied.
## For internal clock nets (by default same values as with the root clock nets)
set CTS_INTERNAL_NDR_RULE_NAME		"$CTS_NDR_RULE_NAME" ;# Specify a clock NDR rule for internal nets; default is same as CTS_NDR_RULE_NAME;
;# required for the example script to work on the internal nets.
;# Below are the 3 predefined rules supported:  
;# rm_2w2s : double width double spacing 
;# rm_2w2s_shield_default : double width double spacing + shielding with default width and spacing
;# rm_2w2s_shield_list : double width double spacing + shielding with customized per layer width and spacing
set CTS_INTERNAL_NDR_SHIELDING_LAYER_WIDTH_LIST "$CTS_NDR_SHIELDING_LAYER_WIDTH_LIST" ;# A list of layer_name shield_width ,for ex, "M1 0.1 M2 0.1 M3 0.1";
;# required if you specify rm_2w2s_shield_list as CTS_INTERNAL_NDR_RULE_NAME.
set CTS_INTERNAL_NDR_SHIELDING_LAYER_SPACING_LIST "$CTS_NDR_SHIELDING_LAYER_SPACING_LIST" ;# A list of layer_name shield_spacing, for ex, "M1 0.1 M2 0.1 M3 0.1";
;# required if you specify rm_2w2s_shield_list as CTS_INTERNAL_NDR_RULE_NAME.
set CTS_INTERNAL_NDR_MIN_ROUTING_LAYER "$CTS_NDR_MIN_ROUTING_LAYER" ;# Min routing layer for set_clock_routing_rules to which CTS_INTERNAL_NDR_RULE_NAME is applied. 
set CTS_INTERNAL_NDR_MAX_ROUTING_LAYER "$CTS_NDR_MAX_ROUTING_LAYER" ;# Max routing layer for set_clock_routing_rules to which CTS_INTERNAL_NDR_RULE_NAME is applied.
## For leaf clock nets
set CTS_LEAF_NDR_RULE_NAME 		"" ;# Specify rm_leaf as the predefined rule for the example script to prepare a default rule for leaf nets
set CTS_LEAF_NDR_MIN_ROUTING_LAYER 	$CTS_NDR_MIN_ROUTING_LAYER ;# Min routing layer for set_clock_routing_rules to which rm_leaf is applied.
set CTS_LEAF_NDR_MAX_ROUTING_LAYER 	$CTS_NDR_MAX_ROUTING_LAYER ;# Max routing layer for set_clock_routing_rules to which rm_leaf is applied.
# ---------------------------------
# Preroute optimizations
# ---------------------------------
set PREROUTE_PLACEMENT_MAX_DENSITY	"" ;# specify a float value between 0 and 1; tool default unspecified; optional in RM;	
;# If specified, sets place.coarse.max_density to limit local density to be less than the value.
;# if unspecified, place.coarse.max_density remains at tool default 0; 
;# now if $PREROUTE_PLACEMENT_AUTO_DENSITY is also true, tool will auto determine a appropriate value; 
;# while if $PREROUTE_PLACEMENT_AUTO_DENSITY is false, tool will try to spread cells evenly
set PREROUTE_PLACEMENT_MAX_UTIL		"" ;# specify a float value between 0 and 1; tool default unspecified; optional in RM;
;# sets place.coarse.congestion_driven_max_util to control how densely the tool can pack cells in uncongested 
;# regions, in order to remove congestion in congested regions
;# if unspecified, place.coarse.congestion_driven_max_util remains at tool default 0.93
set PREROUTE_PLACEMENT_AUTO_DENSITY	true ;# true|false; tool default true; optional in RM to set it to false if you want to disable the feature; 
;# sets place.coarse.auto_density_control to control coarse placement automatic density control;
;# if you do not specify either of the above two settings (max density and max util) and keep the tool defaults, 
;# the automatic density control selects the value for max density and max util based on the design stage;
;# message PLACE-027 is issued to report the chosen settings
set PREROUTE_PLACEMENT_ENHANCED_AUTO_DENSITY false ;# false|true, tool default false; optional in RM;
;# sets place.coarse.enhanced_auto_density_control;
;# automaticlly selects max density based on the design stage as well as design utilization;
;# automatically selects max util based on the design stage as well as design tchnology
set PREROUTE_PLACEMENT_TARGET_ROUTING_DENSITY "" ;# specify a float value between 0 and 1; tool default unspecified; optional in RM;	
;# sets place.coarse.target_routing_density to control target routing density for congestion-driven placement; 
;# if left unspecified, place.coarse.target_routing_density remains at tool default 0 
set PREROUTE_PLACEMENT_PIN_DENSITY_AWARE false ;# false|true; tool default false; optional in RM;
;# sets app option place.coarse.pin_density_aware to control maximum local pin density;
set PREROUTE_NDR_OPTIMIZATION 		false ;# false|true, tool default false; optional in RM;
;# sets place_opt/clock_opt.flow.optimize_ndrs to true enables NDR optimization
set PREROUTE_CTS_POWER_AWARE_PRUNING	false ;# false|true; tool default false; RM default false;
;# sets cts.common.power_aware_pruning to allow selection of repeater cells to also consider 
;# internal and leakage power in order to reduce dynamic and also leakage power of the clock trees;
;# impacts place_opt trial CTS/optimize icgs and clock_opt build_clock phase 
set PREROUTE_CTS_LOW_POWER_TECHNIQUE	"" ;# gate_relocation|low_power_targets|all; RM default is unspecified;
;# impacts place_opt trial CTS/optimize icgs and clock_opt build_clock phase; 
;# gate_relocation: sets cts.compile.power_opt_mode to gate_relocation to enable activity aware gate 
;#                  relocation (moves cells with low input clock toggling rates closer to their drivers)
;#		    at the end of gate by gate clock tree synthesis;
;# low_power_targets: sets cts.compile.power_opt_mode to low_power_targets for CTS to relax certain
;#                    internal constraints and build clock trees with less area and power;
;# all: sets cts.compile.power_opt_mode to all to enable both the above features
########################################################################################## 
## Variables for the place_opt step (used by place_opt.tcl and settings.place_opt.tcl)
##########################################################################################
set PLACE_OPT_ACTIVE_SCENARIO_LIST	"" ;# A subset of scenarios to be made active during place_opt step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
;# include CTS scenarios if you are enabling CTS related features during place_opt,
;# such as PLACE_OPT_OPTIMIZE_ICGS, PLACE_OPT_TRIAL_CTS, or PLACE_OPT_MSCTS
set PLACE_OPT_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created by place_opt; default "" which means no user prefix
set TCL_USER_PLACE_OPT_PRE_SCRIPT 	"" ;# An optional Tcl file for place_opt.tcl to be sourced before place_opt.
set TCL_USER_PLACE_OPT_SCRIPT 		"" ;# An optional Tcl file for place_opt.tcl to replace pre-existing place_opt commands.
set TCL_USER_PLACE_OPT_POST_SCRIPT 	"" ;# An optional Tcl file for place_opt.tcl to be sourced after place_opt.
set PLACE_OPT_SPG_FLOW 			false ;# false|true; RM default false; set it to true to enable SPG input handling flow in place_opt.tcl;
;# which skips the first pass of the two-pass placement;
;# recommended to go with DC-ASCII inputs (set INIT_DESIGN_INPUT DC_ASCII)
set PLACE_OPT_TRIAL_CTS 		false ;# false|true; tool default false; optional in RM;
;# sets place_opt.flow.trial_clock_tree to enables early clock tree synthesis;
;# useful for low power placement and ICG optimization flow (PLACE_OPT_OPTIMIZE_ICGS). 
;# Propagated clocks will be used through-out place_opt flow.
;# Note: when PLACE_OPT_OPTIMIZE_ICGS is set to true, trial CTS will be automatically enabled, 
;# regardless of the setting of PLACE_OPT_TRIAL_CTS. So you don't have to manually enable it.
set PLACE_OPT_OPTIMIZE_ICGS 		false ;# false|true; tool default false; optional in RM;
;# sets place_opt.flow.optimize_icgs for place_opt to run automatic ICG optimization that performs trial CTS, 
;# timing-aware ICG splitting and clock-aware placement for critical enable paths.
;# The aggressiveness of splitting can be controlled by the PLACE_OPT_OPTIMIZE_ICGS_CRITICAL_RANGE. 
set PLACE_OPT_OPTIMIZE_ICGS_CRITICAL_RANGE "" ;# specify a value between 0 and 1; default unspecified; 
;# sets place_opt.flow.optimize_icgs_critical_range to the value specified; tool default is 0.75.
;# When set to X, only ICGs enable slack within {EN_WNS, EN_WNS*(1-X)} will be considered for splitting;
;# for example, 0.75 means only ICG with enable pin violations between 1*EN_WNS and 0.25*EN_WNS will be split,
;# while the ICG enable slack below 0.25*EN_WNS will be skipped. Larger value means more splitting. 
set PLACE_OPT_MERGE_ICGS		true ;# false|true; tool default true; optional in RM to set it to false;
;# sets place_opt.flow.merge_clock_gates to control whether the OBD ICG merging is enabled or not;
;# when set to true, ICG merging (merge_clock_gates) runs internally inside place_opt as a first step in initial_place stage;
set PLACE_OPT_ICG_AUTO_BOUND		false ;# false|true; tool default false; optional in RM;
;# sets place.coarse.icg_auto_bound to enable use of automatically created group bounds
set PLACE_OPT_CLOCK_AWARE_PLACEMENT	false ;# false|true; tool default false; optional in RM;
;# sets place_opt.flow.clock_aware_placement to guide placement with ICG's enable timing criticality; 
;# place_opt will try to improve ICG enable timing by placing the timing critical ICGs and their fanout cells 
;# at better locations for ICG enable paths.
;# Note: when PLACE_OPT_OPTIMIZE_ICGS is set to true, clock-aware placement will be automatically enabled, 
;# regardless of the setting of PLACE_OPT_CLOCK_AWARE_PLACEMENT. So you don't have to manually enable it.
set PLACE_OPT_MSCTS			false ;# false|true; enables MSCTS (regular) at place_opt step; requires TCL_REGULAR_MSCTS_FILE to be specified;
;# It runs in two parts: first part runs at place_opt step to source TCL_REGULAR_MSCTS_FILE;
;# second part runs at clock_opt_cts step, skips TCL_REGULAR_MSCTS_FILE, propagates clocks, and runs mesh simulation;
;# By default, the features runs in ideal clock mode. However if if PLACE_OPT_OPTIMIZE_ICGS or PLACE_OPT_TRIAL_CTS 
;# are also enabled, then propagated clocks will be used during the place_opt step;
;# If set to false (RM default), RM runs MSCTS only at clock_opt_cts step.
set PLACE_OPT_MSCTS_CRITICAL_SCENARIO	"" ;# Specify a scenario with worst RC and most visible sinks for place_opt MSCTS to base on;
;# script will record current scenario, switch to the specified scenario before MSCTS, and then
;# restore the original current scenario after MSCTS. Only valid if PLACE_OPT_MSCTS is set to true
set TCL_USER_SPARE_CELL_PRE_SCRIPT	"" ;# An optional Tcl file for spare cell insertion to be sourced before place_opt;
;# refer to templates/place_opt.spare_cell.tcl for an example
set TCL_USER_SPARE_CELL_POST_SCRIPT	"" ;# An optional Tcl file for spare cell insertion to be sourced after place_opt;
;# refer to templates/place_opt.spare_cell.tcl for an example
set TCL_NON_CLOCK_NDR_RULES_FILE 	"" ;# Specify a NDR rules file for signal nets (Clock NDR rules are specified by CTS_NDR_* variables above)
set PLACE_OPT_MULTIBIT_BANKING 		false ;# tool default false; optional in RM;
;# sets place_opt.flow.enable_multibit_banking to enable multibit banking during place_opt;
;# takes effect during place_opt initial_opto 
set PLACE_OPT_MULTIBIT_DEBANKING 	false ;# tool default false; optional in RM;
;# sets place_opt.flow.enable_multibit_debanking to enables multibit debanking during place_opt;
;# takes effect during place_opt final_opto
########################################################################################## 
## Variables for the clock_opt step 
## (used by settings.clock_opt_cts.tcl, clock_opt_cts.tcl, and clock_opt_opto.tcl)
##########################################################################################
set CLOCK_OPT_CTS_ACTIVE_SCENARIO_LIST  "" ;# A subset of scenarios to be made active during clock_opt_cts step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set CLOCK_OPT_CTS_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created by clock_opt build_clock; default "" which means no user prefix
set TCL_USER_CLOCK_OPT_CTS_PRE_SCRIPT 	"" ;# An optional Tcl file for clock_opt_cts.tcl to be sourced before clock_opt.
set TCL_USER_CLOCK_OPT_CTS_SCRIPT 	"" ;# An optional Tcl file for clock_opt_cts.tcl to replace pre-existing clock_opt commands.
set TCL_USER_CLOCK_OPT_CTS_POST_SCRIPT 	"" ;# An optional Tcl file for clock_opt_cts.tcl to be sourced after clock_opt.
set CLOCK_OPT_OPTO_ACTIVE_SCENARIO_LIST "" ;# A subset of scenarios to be made active during clock_opt_opto step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set CLOCK_OPT_OPTO_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created by clock_opt final_opto; default "" which means no user prefix
set TCL_USER_CLOCK_OPT_OPTO_PRE_SCRIPT 	"" ;# An optional Tcl file for clock_opt_opto.tcl to be sourced before clock_opt.
set TCL_USER_CLOCK_OPT_OPTO_SCRIPT 	"" ;# An optional Tcl file for clock_opt_opto.tcl to replace pre-existing clock_opt commands.
set TCL_USER_CLOCK_OPT_OPTO_POST_SCRIPT "" ;# An optional Tcl file for clock_opt_opto.tcl to be sourced after clock_opt.
set CLOCK_OPT_MSCTS_CRITICAL_SCENARIO	"" ;# Specify a scenario with worst RC and most visible sinks for MSCTS to base on;
;# script will record current scenario, switch to the specified scenario before MSCTS, and then
;# restore the original current scenario after MSCTS.
set TCL_REGULAR_MSCTS_FILE		"" ;# Specify a Tcl script for regular multisource clock tree synthesis setup and creation,
;# which will be sourced prior to the "place_opt" if PLACE_OPT_MSCTS is true in place_opt.tcl
;# and before "clock_opt -from build_clock -to route_clock" command in clock_opt_cts.tcl
;# RM provided script: mscts.regular.tcl
set TCL_STRUCTURAL_MSCTS_FILE		"" ;# Specify a Tcl script for structural multisource clock tree synthesis setup and creation,
;# which will be sourced prior to the "clock_opt -from build_clock -to route_clock" command
;# in clock_opt_cts.tcl;
;# RM provided script: mscts.structural.tcl
set PREROUTE_CTS_POWER_AWARE_PRUNING	false ;# false|true; tool default false; RM default false;
;# sets cts.common.power_aware_pruning to allow selection of repeater cells to also consider 
;# internal and leakage power in order to reduce dynamic and also leakage power of the clock trees 
set PREROUTE_CTS_LOW_POWER_TECHNIQUE	"" ;# gate_relocation|low_power_targets|all; RM default is unspecified;
;# gate_relocation: sets cts.compile.power_opt_mode to gate_relocation to enable activity aware gate 
;#                  relocation (moves cells with low input clock toggling rates closer to their drivers)
;#		    at the end of gate by gate clock tree synthesis;
;# low_power_targets: sets cts.compile.power_opt_mode to low_power_targets for CTS to relax certain
;#                    internal constraints and build clock trees with less area and power;
;# all: sets cts.compile.power_opt_mode to all to enable both the above features
set CLOCK_OPT_OPTO_CTO 			false ;# Default false; enables post-route clock tree optimization in clock_opt_opto.tcl
set CLOCK_OPT_OPTO_CTO_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created by CTO; default "" which means no user prefix
########################################################################################## 
## Variables for route_auto and route_opt related settings 
## (Used by settings.route_auto.tcl, settings.route_opt.tcl, route_auto.tcl, and route_opt.tcl)
##########################################################################################
set ROUTE_AUTO_ACTIVE_SCENARIO_LIST 	"" ;# A subset of scenarios to be made active during route_auto step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set ROUTE_AUTO_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created suring route_auto; default "" which means no user prefix
set TCL_USER_ROUTE_AUTO_PRE_SCRIPT 	"" ;# An optional Tcl file for route_auto.tcl to be sourced before route_auto.
set TCL_USER_ROUTE_AUTO_SCRIPT 		"" ;# An optional Tcl file for route_auto.tcl to replace pre-existing routing commands.
set TCL_USER_ROUTE_AUTO_POST_SCRIPT 	"" ;# An optional Tcl file for route_auto.tcl to be sourced after route_auto.
set ROUTE_OPT_ACTIVE_SCENARIO_LIST 	"" ;# A subset of scenarios to be made active during route_opt step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set ROUTE_OPT_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created during route_opt; default "" which means no user prefix
set TCL_USER_ROUTE_OPT_PRE_SCRIPT 	"" ;# An optional Tcl file for route_opt.tcl to be sourced before route_opt.
set TCL_USER_ROUTE_OPT_SCRIPT 		"" ;# An optional Tcl file for route_opt.tcl to replace pre-existing route_opt commands.
set TCL_USER_ROUTE_OPT_POST_SCRIPT 	"" ;# An optional Tcl file for route_opt.tcl to be sourced after route_opt.
set CLOCK_OPT_GLOBAL_ROUTE_OPT		false ;# false|true; tool default false; optional in RM; 
;# enables Global Route Based Optimization by setting clock_opt.flow.enable_global_route_opt 
;# and route_opt.flow.enable_power to true, sources routing settings, and runs clock_opt -from global_route_opt;
;# this feature is added to route_auto.tcl; if enabled, it replaces route_global command;
set ROUTE_AUTO_USE_SINGLE_COMMAND	false ;# false|true; runs route_auto command instead of atomic commands (route_global+route_track+route_detail with update_timing in between)
set REDUNDANT_VIA_INSERTION		false ;# false|true; tool default false; optional in RM; enables redundant via insertion for post-route;
;# if you choose ESTABLISHED for TECHNOLOGY_NODE on RMgen download page,
;# RM is set up to run concurrent redundant via insertion during route_auto and route_opt
;# otherwise, RM is set up to reserve space and run standalone add_redundant_vias after route_auto and route_opt  
set TCL_USER_REDUNDANT_VIA_MAPPING_FILE "" ;# ICC-II via mapping file required for redundant via insertion; 
;# the file should include add_via_mapping commands.   
set TCL_USER_ICC_REDUNDANT_VIA_MAPPING_FILE "" ;# ICC style via mapping file required for redundant via insertion; 
;# the file should include define_zrt_redundant_vias commands.
;# This variable is mutually exclusive with TCL_USER_REDUNDANT_VIA_MAPPING_FILE
set ROUTE_AUTO_ANTENNA_FIXING		false ;# false|true; tool default false; optional in RM;
;# set true to enable route.detail.hop_layers_to_fix_antenna and source TCL_ANTENNA_RULE_FILE in route_auto.tcl 
;# to fix Antenna violations.
set TCL_ANTENNA_RULE_FILE	""	;# Antenna rule file; required if ROUTE_AUTO_ANTENNA_FIXING is set to true.
set ROUTE_AUTO_CREATE_SHIELDS 		"none" ;# none|before_route_auto|after_route_auto; default is none; optional in RM;
;# choose to create shields before or after route_auto; all nets with shielding rules will be shielded	
set ROUTE_OPT_PT_DELAY_CALCULATION_WITH_PBA false ;# Default false; sets time.pba_optimization_mode to path to enable PBA during second route_opt;
set ROUTE_OPT_STARRC_CONFIG_FILE ""	;# Specify the configuration file for StarRC in-design extraction for the second route_opt in route_opt.tcl;
;# required; refer to templates/route_opt.starrc_config_example.txt as an example
set ROUTE_OPT_RESHIELD 			"after_route_opt" ;# none|after_route_opt|incremental; default is after_route_opt; 
;# set after_route_opt to reshield nets after route_opt is done with create_shield command; 
;# set incremental to trigger reshield during all route_opt eco route sessions with an app option; 
;# note that ROUTE_OPT_RESHIELD only works if ROUTE_AUTO_CREATE_SHIELDS is set to a value other than none
set ROUTE_OPT_CTO 			"auto" ;# auto|always_on|always_off; tool default auto; RM default auto;
;# sets route_opt.flow.enable_ccd_clock_drc_fixing to the specified value for clock DRC fixing in route_opt;
;# Note: this feature affects both CCD and non-CCD route_opt;
;# if CCD is enabled, with auto, route_opt will enable the feature; set it to always_off if you want it disabled.
;# if CCD is not enabled, with auto, this feature won't be enabled; set it to always_on to enable the feature.
## The following 6 ROUTE_OPT_ECO_OPT* variables are for ECO fusion (eco_opt command) in route_opt.tcl
#  Note that once ROUTE_OPT_ECO_OPT_PT_PATH is specified, ECO fusion is enabled and the third route_opt will be skipped.
set ROUTE_OPT_ECO_OPT_PT_PATH		"" ;# Required by eco_opt; specify the path to pt_shell; for example: /u/mgr/bin/pt_shell
;# if specified, eco_opt
set ROUTE_OPT_ECO_OPT_DB_PATH		"" ;# Optional; specify the paths to .db files of the reference libraries for PT (if not already in your search path)
;# For eco_opt, PT needs to read db. 
set ROUTE_OPT_ECO_OPT_TYPE		"" ;# Optional; eco_opt fixing type; timing|setup|hold|drc|leakage_power|dynamic_power|total_power|buffer_removal
;# if not specified, works on all types
set ROUTE_OPT_ECO_OPT_STARRC_CONFIG_FILE "" ;# Optional; specify the configuration file for StarRC in-design extraction
set ROUTE_OPT_ECO_OPT_WORK_DIR		"" ;# Optional; specify the working directory for eco_opt where PT files and logs are generated;
;# if not specified, tool will automatically generate one
set ROUTE_OPT_ECO_OPT_PRE_LINK_SCRIPT	"" ;# Optional; specify the file that contains custom PT script, which is executed before linking in PrimeTime;
;# use PT commands that do not require the current design
set ROUTE_OPT_ECO_OPT_POST_LINK_SCRIPT	"" ;# Optional; specify the file that contains custom PT script, which is executed after linking in PrimeTime;
;# use PT commands that require the current design
########################################################################################## 
## Variables for chip finishing related settings (Used by chip_finish.tcl)
##########################################################################################
set CHIP_FINISH_ACTIVE_SCENARIO_LIST 	"" ;# A subset of scenarios to be made active during chip_finish step.
;# once set, the list of active scenarios is saved and carried over to subsequent steps.
set TCL_USER_CHIP_FINISH_PRE_SCRIPT 	"" ;# An optional Tcl file for chip_finish.tcl to be sourced before filler cell insertion.
set TCL_USER_CHIP_FINISH_POST_SCRIPT 	"" ;# An optional Tcl file for chip_finish.tcl to be sourced after metal fill insertion.
## Std cell filler and decap cells used by chip_finish step and post PT-ECO refill in pt_eco step
set CHIP_FINISH_METAL_FILLER_PREFIX 	"" ;# A string to specify the prefix for metal filler (decap) cells.
set CHIP_FINISH_NON_METAL_FILLER_PREFIX $CHIP_FINISH_METAL_FILLER_PREFIX ;# A string to specify the prefix for non-metal fillers.
set CHIP_FINISH_METAL_FILLER_LIB_CELL_LIST "" ;# A list of metal filler (decap) lib cells, including the library name, for ex, 
;# Example: "hvt/DCAP_HVT lvt/DCAP_LVT". Recommended to specify decaps from largest to smallest.
set CHIP_FINISH_NON_METAL_FILLER_LIB_CELL_LIST "" ;# A list of non-metal filler lib cells, including the library name, for ex,
;# Example: hvt/FILL_HVT lvt/FILL_LVT. Recommended to specify them from largest to smallest.
## Signal EM
set CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FORMAT "ITF" ;# Specify signal EM constraint format: ITF | ALF; string is uppercase and ITF is default
set CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FILE "" ;# A constraint file which contains signal electromigration constraints;
;# specify an ITF file if CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FORMAT is set to ITF, and specify an
;# ALF file if CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FORMAT is set to ALF;
;# required for signal EM analysis and fixing to be enabled
set CHIP_FINISH_SIGNAL_EM_SAIF 		"" ;# An optional SAIF file for the signal EM analysis.
set CHIP_FINISH_SIGNAL_EM_SCENARIO 	"" ;# Specify an active scenario which is enabled for setup and hold analysis;
;# Required for signal EM analysis and fixing to proceed.
set CHIP_FINISH_SIGNAL_EM_FIXING 	false ;# Enable signal EM fixing; false | true; false is default
########################################################################################## 
## Variables for ICV in-design related settings (used by icv_in_design.tcl)
##########################################################################################
set ICV_IN_DESIGN_ACTIVE_SCENARIO_LIST 	"" ;# A subset of scenarios to be made active during icv_in_design step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set TCL_USER_ICV_IN_DESIGN_PRE_SCRIPT 	"" ;# An optional Tcl file for chip_finish.tcl to be sourced before signoff_check_drc.
set TCL_USER_ICV_IN_DESIGN_POST_SCRIPT 	"" ;# An optional Tcl file for chip_finish.tcl to be sourced after second signoff_check_drc.
## signoff_check_drc specific variables
set ICV_IN_DESIGN_DRC_CHECK_RUNSET 	"" ;# The foundry runset for ICV used by signoff_check_drc
set ICV_IN_DESIGN_DRC_CHECK_RUNDIR 	"z_check_drc" 
;# The working directory for the signoff_check_drc before signoff_fix_drc;
;# The directory that contains the initial DRC error database for signoff_fix_drc.
## singoff_fix_drc specific variables
set ICV_IN_DESIGN_ADR 			true ;# true|false; true enables signoff_fix_drc in addition to signoff_check_drc; default is true
set ICV_IN_DESIGN_ADR_RUNDIR 		"z_adr"	;# The working directory for signoff_fix_drc; only takes effect if ICV_IN_DESIGN_ADR is true
set ICV_IN_DESIGN_POST_ADR_RUNDIR 	"z_post_adr" ;# The working directory for signoff_check_drc after signoff_fix_drc is done; 
;# only takes effect if ICV_IN_DESIGN_ADR is true 
set ICV_IN_DESIGN_ADR_DPT_RULES 	"" ;# Specify your DPT rules for signoff_fix_drc fixing; only takes effect if ICV_IN_DESIGN_ADR is true
set ICV_IN_DESIGN_ADR_DPT_RUNDIR	"z_adr_with_dpt" ;# The working directory for signoff_check_drc with DPT rule fixing;
;# only takes effect if ICV_IN_DESIGN_ADR_DPT_RULES (DPR rules) is specified
set ICV_IN_DESIGN_POST_ADR_DPT_RUNDIR	"z_post_adr_with_dpt" ;# The working directory for signoff_check_drc after DPT rule fixing is done;
;# only takes effect if ICV_IN_DESIGN_ADR_DPT_RULES (DPR rules) is specified
## Metal fill specific variables
set ICV_IN_DESIGN_METAL_FILL 		false ;# Default false; set it to true to enable the metal fill creation feature.
set ICV_IN_DESIGN_METAL_FILL_RUNDIR	"z_icvFill" ;# The working directory for signoff_create_metal_fill. Optional. Default is z_icvFill.
set ICV_IN_DESIGN_METAL_FILL_TIMING_DRIVEN_THRESHOLD "" 
;# Specify the threshold for timing-driven metal fill.
;# If not specified, timing-driven is not enabled.
;# If specified, "-timing_preserve_setup_slack_threshold" option is added.
set ICV_IN_DESIGN_METAL_FILL_TRACK_BASED "off" ;# off | <a technology node> | generic; used for -track_fill option of signoff_create_metal_fill
;# for non-track-based : specify off 
;# for track-based : specify either a node (refer to man page) or generic 
set ICV_IN_DESIGN_METAL_FILL_RUNSET	"" ;# Specify the foundry runset for signoff_create_metal_fill command;
;# required only by non track-based metal fill (ICV_IN_DESIGN_METAL_FILL_TRACK_BASED set to off).
set ICV_IN_DESIGN_POST_METAL_FILL_RUNDIR "z_MFILL_after" 
;# The working directory for the signoff_check_drc after signoff_create_metal_fill is completed;
;# only takes effect if ICV_IN_DESIGN_METAL_FILL is true
set ICV_IN_DESIGN_METAL_FILL_TRACK_BASED_PARAMETER_FILE "auto" ;# auto | <a parameter file>; default is auto;
;# this variable is only for track-based metal fill;
;# specify auto to use ICC-II auto generated track_fill_params.rh file or your own paramter file.
########################################################################################## 
## Variables for settings related to write data (used by write_data.tcl)
##########################################################################################
## write_gds related
set WRITE_GDS_LAYER_MAP_FILE 		"" ;# A layer map file which provides a mapping between the tool and GDS layers
set WRITE_OASIS_LAYER_MAP_FILE 		"" ;# A layer map file which provides a mapping between the tool and OASIS layers
########################################################################################## 
## Variables for Functional ECO related settings (used by functional_eco.tcl)
##########################################################################################
set FUNCTIONAL_ECO_ACTIVE_SCENARIO_LIST	"" ;# Optional; a subset of scenarios to be made active during the step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set TCL_USER_FUNCTIONAL_ECO_PRE_SCRIPT	"" ;# An optional Tcl file to be sourced before ECO operations.
set TCL_USER_FUNCTIONAL_ECO_POST_SCRIPT	"" ;# An optional Tcl file to be sourced after route_eco.
set FUNCTIONAL_ECO_DISPLACEMENT_THRESHOLD "10" ;# A float to specify the maximum displacement threshold value for 
;# place_eco_cells -eco_changed_cells -legalize_mode minimum_physical_impact -displacement_threshold;
set FUNCTIONAL_ECO_VERILOG_FILE		"" ;# Required; a verilog file to be 
set FUNCTIONAL_ECO_MODE			"default" ;# Specify the preferred flow; default|freeze_silicon
;# default: sources $FUNCTIONAL_ECO_CHANGE_FILE and place_eco_cells in MPI mode
;# freeze_silicon: add_spare_cells, place_eco_cells, sources $FUNCTIONAL_ECO_CHANGE_FILE, and place_freeze_silicon
########################################################################################## 
## Variables for PT ECO related settings (used by pt_eco.tcl/pt_eco_incremental.tcl)
##########################################################################################
## The following variables apply to both pt_eco.tcl (classic PT-ECO flow) and pt_eco_incremental.tcl (Galaxy incremental ECO flow)
set PT_ECO_ACTIVE_SCENARIO_LIST 	"" ;# Optional; a subset of scenarios to be made active during the step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set TCL_USER_PT_ECO_PRE_SCRIPT 		"" ;# An optional Tcl file to be sourced before ECO operations.
set TCL_USER_PT_ECO_POST_SCRIPT 	"" ;# An optional Tcl file to be sourced after route_eco.
set PT_ECO_DISPLACEMENT_THRESHOLD 	"10" ;# A float to specify the maximum displacement threshold value for 
;# place_eco_cells -eco_changed_cells -legalize_mode minimum_physical_impact -displacement_threshold;
## The following variables only apply to pt_eco.tcl (classic PT-ECO flow)
set PT_ECO_CHANGE_FILE 			"" ;# Required; an ECO guidance file generated by the PT-SI write_changes command,
;# as an input to the pt_eco.tcl
set PT_ECO_MODE				"default" ;# Specify the preferred flow for the PT-ECO run; default|freeze_silicon
;# default: sources $PT_ECO_CHANGE_FILE and place_eco_cells in MPI mode
;# freeze_silicon: add_spare_cells, place_eco_cells, sources $PT_ECO_CHANGE_FILE, and place_freeze_silicon
########################################################################################## 
## Variables for Redhawk in-design related settings 
## (used by redhawk_in_design_pnr.tcl; SNPS_INDESIGN_RH_RAIL license required)
##########################################################################################
set REDHAWK_DIR 			"" ;# Specify the path to REDHAWK executable; required 
set REDHAWK_PAD_FILE 			"" ;# Default is top level pins.
set REDHAWK_ANALYSIS_NETS 		"" ;# Required. Specify the list of power and ground nets in pairs and in separate lines for the analysis;
;# for example, "VDD1 VSS1 VDD2 VSS2 VDD3 VSS3", where VDD* are power nets and VSS* are ground nets.
set REDHAWK_TECH_FILE 			"" ;# Required. Apache Technology File
set REDHAWK_MACROS 			"" ;# Optional. List of Macro names and macro directories in pairs and in separate lines;
;# for example, "macro1_name macro1_directory 
;#		    macro2_name macro2_directory 
;#		    macro3_name macro3_directory"
set REDHAWK_SWITCH_MODEL_FILES 		"" ;# Optional. List of switch model files;
;# for example: "switch_model_file1 
;#               switch_model_file2 
;#		    switch_model_file3"
set REDHAWK_LIB_FILES 			"" ;# Required. List of .lib files in separate lines.
;# for example: "/home/lib_1.lib 
;#               /home/lib_2.lib
;#               /home/lib_3.lib"
set REDHAWK_APL_FILES			"" ;# Required for dynamic analysis.  List of apl files in separate lines.
;# for example: "x.cdev cdev
;#               x.current current
;#               y.cdev cdev
;#               y.current current"
set REDHAWK_EXTRA_GSR 			"" ;# Optional. Provide a file with custom Redhawk settings.
set REDHAWK_ANALYSIS 			"" ;# Required. Specify of the analyses below:
;# For Static analysis: "static"
;# For Vector-based Dynamic analysis: "dynamic_vcd"
;# For Vectorless Dynamic analysis: "dynamic_vectorless"
;# For Effective Resistance analysis: "effective_resistance"
;# For Minimum path resistance analysis: "min_path_resistance"
;# For Integrity Check: "check_missing_via"
set REDHAWK_OUTPUT_REPORT 		"" ;# Optional. Specify a file name to have the output report produced:
;# For Static or dynamic analysis: the effective voltage drop is reported
;# For Effective Resistance analysis: the effective resistance is reported
;# For Minimum path resistance analysis: the minimum path resistance is reported
;# For Integrity Check: the missing vias are reported
set REDHAWK_EM_ANALYSIS 	   	false ;# Optional. Set to true if EM analysis to be performed with static or dynamic analysis.
set REDHAWK_EM_REPORT 			"" ;# Optional. Specify a file name to have the EM output report produced.
set REDHAWK_SCRIPT_FILE 		"" ;# Optional. Specify a file name for using Redhawk standalone run tcl file.
set REDHAWK_SWITCHING_ACTIVITY_FILE 	"" ;# Required for vector-based dynamic analysis.  Format is as follows:
;# {file_format [file_name] [strip_path]}
set REDHAWK_FIX_MISSING_VIAS       	false ;# Optional. Set to true to enable inserting vias to missing via locations after the check_missing_via flow is run.
set REDHAWK_MISSING_VIA_POS_THRESHOLD	"" ;# Optional. Set to positive voltage between two overlapped layers for filtering purpose.  Default is no filtering.
set REDHAWK_RAIL_DATABASE               RAIL_DATABASE  ; #Optional. Set ICC2 Redhawk Fusion output directory.
set REDHAWK_PGA_POWER_NET               "" ; #Required.  Set one power net for PGA.
set REDHAWK_PGA_GROUND_NET              "" ; #Required.  Set one ground net for PGA
set REDHAWK_PGA_NODE                    "" ; #Required. Set the technology node such as tsmc16.
set REDHAWK_PGA_ICV_DIR                 "" ; #Required. Set the path to the ICV binary.  Example: /global/apps/icv_2018.06
##########################################################################################
## System Variables and Settings (there's no need to change them)
##########################################################################################
## Reporting 
set REPORT_QOR				true ;# true|false; RM default true; runs various reporting commands at end of each step;
;# reporting commands vary by stage; set it to false to skip reporting
set REPORT_QOR_REPORT_POWER		true ;# true|false; RM default true;
;# set it to false to skip report_power and report_clock_qor -type power during reporting
set REPORT_QOR_REPORT_CONGESTION	true ;# true|false; RM default reports congestion with "route_global -congestion_map_only true"
;# at the end of preroute steps; set it to false to skip.
set search_path [list ./rm_icc2_pnr_scripts ./rm_setup ./templates $REDHAWK_SEARCH_PATH]
lappend search_path .
if {$synopsys_program_name == "icc2_shell"} {
	set_host_options -max_cores 8

	## Enable on-disk operation for copy_block to save block to disk right away
	set_app_option -name design.on_disk_operation -value true ;# default false and global-scoped
}
set sh_continue_on_error true
## Label names (while $DESIGN_NAME is the block name)
set INIT_DESIGN_BLOCK_NAME 		"init_design" 			;# Label name to be used when saving a block in init_design.tcl
set PLACE_OPT_BLOCK_NAME 		"place_opt" 			;# Label name to be used when saving a block in place_opt.tcl
set CLOCK_OPT_CTS_BLOCK_NAME 		"clock_opt_cts" 		;# Label name to be used when saving a block in clock_opt_cts.tcl
set CLOCK_OPT_OPTO_BLOCK_NAME 		"clock_opt_opto" 		;# Label name to be used when saving a block in clock_opt_opto.tcl
set ROUTE_AUTO_BLOCK_NAME 		"route_auto" 			;# Label name to be used when saving a block in route_auto.tcl
set ROUTE_OPT_BLOCK_NAME 		"route_opt" 			;# Label name to be used when saving a block in route_opt.tcl
set CHIP_FINISH_BLOCK_NAME 		"chip_finish" 			;# Label name to be used when saving a block in chip_finish.tcl
set ICV_IN_DESIGN_BLOCK_NAME 		"icv_in_design" 		;# Label name to be used when saving a block in icv_in_design.tcl
set WRITE_DATA_FROM_BLOCK_NAME 		$ICV_IN_DESIGN_BLOCK_NAME 	;# Label name of the source block in write_data.tcl;
set WRITE_DATA_BLOCK_NAME 		"write_data" 			;# Label name to be used when saving a block in write_data.tcl
;# default is ICV_IN_DESIGN_BLOCK_NAME
set FUNCTIONAL_ECO_FROM_BLOCK_NAME	$ROUTE_OPT_BLOCK_NAME 		;# Label name of the source block in functional_eco.tcl;
;# default is ROUTE_OPT_BLOCK_NAME
set FUNCTIONAL_ECO_BLOCK_NAME		"functional_eco"		;# Label name to be used when saving a block in functional_eco.tcl
set PT_ECO_FROM_BLOCK_NAME 		$ROUTE_OPT_BLOCK_NAME 		;# Label name of the source block in pt_eco.tcl;
;# default is ROUTE_OPT_BLOCK_NAME
set PT_ECO_BLOCK_NAME 			"pt_eco" 			;# Label name to be used when saving a block in pt_eco.tcl
set PT_ECO_INCREMENTAL_FROM_BLOCK_NAME 	$ROUTE_OPT_BLOCK_NAME 		;# Label name of the source block in pt_eco_incremental_1.tcl;
;# default is ROUTE_OPT_BLOCK_NAME; specify a different name if needed
set PT_ECO_INCREMENTAL_1_BLOCK_NAME 	"pt_eco_incremental_1" 		;# Label name to be used when saving a block in pt_eco_incremental_1.tcl
set PT_ECO_INCREMENTAL_2_BLOCK_NAME 	"pt_eco_incremental_2" 		;# Label name to be used when saving a block in pt_eco_incremental_2.tcl
set REDHAWK_IN_DESIGN_PNR_FROM_BLOCK_NAME $INIT_DESIGN_BLOCK_NAME	;# Label name of the starting block for redhawk_in_design_pnr.tcl;
;# default is INIT_DESIGN_BLOCK_NAME
## Directories
set OUTPUTS_DIR	"./outputs_icc2"	;# Directory to write output data files; mainly used by write_data.tcl
set REPORTS_DIR	"./rpts_icc2"		;# Directory to write reports; mainly used by report_qor.tcl
if !{[file exists $OUTPUTS_DIR]} {file mkdir $OUTPUTS_DIR} ;# do not change this line or directory may not be created properly
if !{[file exists $REPORTS_DIR]} {file mkdir $REPORTS_DIR} ;# do not change this line or directory may not be created properly
##########################################################################################
## Hierarchical PNR Variables (used by hierarchical PNR implementation)
##########################################################################################
## For designs where the blocks are bound to abstracts
set SUB_BLOCK_REFS                   	[list ] ;# If ABSTRACT_TYPE_FOR_MPH_BLOCKS == flattened , specify design names of the immediate child blocks
;# If ABSTRACT_TYPE_FOR_MPH_BLOCKS == nested , specify design names of the physical blocks in all lower levels of physical hierarchy
;# Include the blocks that will be bound to abstracts
set USE_ABSTRACTS_FOR_BLOCKS        	[list ] ;# design names of the physical blocks in the next lower level that will be bound to abstracts
## By default, abstracts created after icv_in_design step of lower-level are used to implement the current level
## Update the following variables if you want to use abstracts created after any other step 
set BLOCK_ABSTRACT_FOR_PLACE_OPT 	"$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_PLACE_OPT label for place_opt
set BLOCK_ABSTRACT_FOR_CLOCK_OPT_CTS    "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_CLOCK_OPT_CTS label for clock_opt_cts
set BLOCK_ABSTRACT_FOR_CLOCK_OPT_OPTO   "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_CLOCK_OPT_OPTO label for clock_opt_opto
set BLOCK_ABSTRACT_FOR_ROUTE_AUTO       "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_ROUTE_AUTO label for route_auto
set BLOCK_ABSTRACT_FOR_ROUTE_OPT        "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_ROUTE_OPT label for route_opt
set BLOCK_ABSTRACT_FOR_CHIP_FINISH      "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_CHIP_FINISH for chip_finish
set BLOCK_ABSTRACT_FOR_ICV_IN_DESIGN    "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_ICV_IN_DESIGN label for icv_in_design
set USE_ABSTRACTS_FOR_POWER_ANALYSIS 	false ;# Default false; false|true;
;# sets app option abstract.annotate_power that annotates power information in the abstracts
;# set this to true to perform power analysis inside subblocks modeled as abstracts
set USE_ABSTRACTS_FOR_SIGNAL_EM_ANALYSIS false ;# Default false; false|true;
;# sets app option abstract.enable_signal_em_analysis 
;# set this to true to perform signal em analysis inside abstracts
set ABSTRACT_TYPE_FOR_MPH_BLOCKS "flattened" ; # "nested | flattened", Default nested. Specifies the type of abstract to be created for MPH blocks (blocks with more than 1 level of physical hierarchy)
;# Allowed values are nested and flattened. 
;# when this variable is set to nested (default), preserve_block_instances option of create_abstract command is set to true (default value)
;# when this variable is set to flattened , preserve_block_instances option of create_abstract command is set to false
set CHECK_HIER_TIMING_CONSTRAINTS_CONSISTENCY true ;# Determines whether the consistency of top and block timing constraints is checked during the check_design command
;# The variable in turn sets the application option abstract.check_constraints_consistency to true
########################################################################################## 
## Hierarchical PNR Variables for clock_opt_cts related settings (used by clock_opt_cts.tcl)
##########################################################################################
set PROMOTE_CLOCK_BALANCE_POINTS	false ;# Default false. When implementing intermediate and top levels of physical hierarchy,
;# set this variable to true to promote clock balance points from sub-blocks.
;# Leave this variable to its default value, if the needed clock balance points for the pins
;# inside sub-blocks are applied from the top-level itself.
########################################################################################## 
## Hierarchical PNR Variables for designs where some of the blocks are bound to ETMs
##########################################################################################
set WRITE_DATA_FOR_ETM_GENERATION       false ;# Default false. Set it to true, for writing out required design data for ETM Generation in PrimeTime 
set WRITE_DATA_FOR_ETM_BLOCK_NAME       $ICV_IN_DESIGN_BLOCK_NAME ;# Name of the starting block for the write_data_for_etm step
## ICC2-RM provides additional files (flavors) to override RM default settings for high connectivity, run time and area/power focused designs.
#  These files are under rm_icc2_pnr_scripts/ :  
#  flavor.high_connectivity_high_congestion_focused.tcl, flavor.area_power_focused.tcl and flavor.run_time_focused.tcl
#  You can use the ADDITIONAL_FLAVOR variable to control whether to use these flavors.
set ADDITIONAL_FLAVOR "" 	;# default unspecified; if unspecified, runs RM default flow that works/balances all PPA
;# set it to high_connectivity_high_congestion for high connectivity design styles with heavy congestions
;# set it to area_power for extra area and power optimizations
;# set it to run_time if run time is the primary concern
puts "RM-info: Completed script [info script]\n"
RM-info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_setup/icc2_pnr_setup.tcl

set REPORT_PREFIX $PLACE_OPT_BLOCK_NAME
place_opt
open_lib $DESIGN_LIBRARY
Information: Loading library file '/afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/xbar' (FILE-007)
{xbar}
copy_block -from ${DESIGN_NAME}/${INIT_DESIGN_BLOCK_NAME} -to ${DESIGN_NAME}/${PLACE_OPT_BLOCK_NAME}
Information: Overwriting block 'xbar/place_opt.design' in library 'xbar'. (DES-025)
Information: Saving block 'xbar:xbar/place_opt.design'
{xbar:xbar/place_opt.design}
current_block ${DESIGN_NAME}/${PLACE_OPT_BLOCK_NAME}
{xbar:xbar/place_opt.design}
link_block
Warning: Library xbar has no reference libraries. (LNK-063)
Using libraries: xbar
Warning: In library xbar, no block views exist for block xbar. (LNK-064)
Visiting block xbar:xbar/place_opt.design
Error: Unable to resolve reference to 'xbar:OAI22_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:AND2_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:AOI22_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:NOR2_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:NAND2_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:NOR3_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:NAND4_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:INV_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:NOR4_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:SDFFSNQ_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:CLKGATETST_X1'. (LNK-081)
Information: Block 'xbar:xbar/place_opt.design' has 11 unresolved references. (LNK-074)
Design 'xbar' was successfully linked.
0
## For top and intermediate level of hierarchical designs, check the editability of the sub-blocks;
## if the editability is true for any sub-block, set it to false
## In RM, we are setting the editability of all the sub-blocks to false in the init_design.tcl script
## The following check is implemented to ensure that the editability of the sub-blocks is set to false in flows not running the init_design.tcl script
if {$USE_ABSTRACTS_FOR_BLOCKS != ""} {
      	foreach_in_collection c [get_blocks -hierarchical] {
	  	if {[get_editability -blocks ${c}] == true } {
			set_editability -blocks ${c} -value false
   	  	}
      	}
	report_editability -blocks [get_blocks -hierarchical]
}
## Set active scenarios for the step (please include CTS and hold scenarios for CCD) 
if {$PLACE_OPT_ACTIVE_SCENARIO_LIST != ""} {
	set_scenario_status -active false [get_scenarios -filter active]
	set_scenario_status -active true $PLACE_OPT_ACTIVE_SCENARIO_LIST
}
if {[sizeof_collection [get_scenarios -filter "hold && active"]] == 0} {
	puts "RM-warning: No active hold scenario is found. Recommended to enable hold scenarios here such that CCD skewing can consider them." 
	puts "RM-info: Please activate hold scenarios for place_opt if they are available." 
}
source -echo settings.place_opt.tcl ;# common settings before place_opt, including clock NDR
puts "RM-info: Running script [info script]\n"
RM-info: Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl

##########################################################################################
# Tool: IC Compiler II
# Script: settings.place_opt.tcl 
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
##########################################################################################
## Set QoR Strategy
##########################################################################################
## set_qor_strategy is a commmand which folds various settings of placement, optimization, timing, CTS, and routing, etc.
## - To query the target metric being set, use the "get_attribute [current_design] metric_target" command
## - Refer to templates/place_opt.set_qor_strategy.tcl if you plan to override settings applied by set_qor_strategy, which is 
##   a template that lists all settings to be set, then uncomment any setting you want to override, and uncomment the line below :
#	source -echo templates/place_opt.set_qor_strategy.tcl
set_qor_strategy -stage pnr -metric {area timing total_power congestion} -report_only

Metric(s) : area, timing, total_power, congestion
+----------------------------------------------------+---------------+------------+------------+------------+
|           Option Name                              | Metric Group  |  Tool      |  Current   |  Target    |
|                                                    |               |  Default   |  Setting   |  Setting   |
+----------------------------------------------------+---------------+------------+------------+------------+
| time.enable_io_path_groups                         | *All metrics* | false      | false      | true       |
| time.enable_clock_to_data_analysis                 | *All metrics* | false      | false      | true       |
| opt.port.eliminate_verilog_assign                  | *All metrics* | false      | false      | true       |
| route.global.timing_driven                         | *All metrics* | false      | false      | true       |
| time.remove_clock_reconvergence_pessimism          | *All metrics* | false      | false      | true       |
| design.on_disk_operation                           | *All metrics* | false      | true       | true       |
| route.track.timing_driven                          | *All metrics* | false      | false      | true       |
| route.detail.timing_driven                         | *All metrics* | false      | false      | true       |
| route.track.crosstalk_driven                       | *All metrics* | false      | false      | true       |
| time.si_enable_analysis                            | *All metrics* | false      | false      | true       |
| route.detail.eco_max_number_of_iterations          | *All metrics* | -1         | -1         | 10         |
| ccd.post_route_buffer_removal                      | Area          | false      | false      | true       |
| opt.area.effort                                    | Area          | low        | low        | high       |
| opt.common.buffer_area_effort                      | Area          | low        | low        | ultra      |
| opt.common.use_route_aware_estimation              | Area          | false      | false      | true       |
| opt.timing.effort                                  | Timing        | low        | low        | high       |
| opt.power.mode                                     | Total_power   | none       | none       | total      |
| opt.power.effort                                   | Total_power   | low        | low        | high       |
| route_opt.flow.enable_power                        | Total_power   | false      | false      | true       |
| place_opt.initial_drc.global_route_based           | Congestion    | false      | false      | 1          |
| place_opt.final_place.effort                       | Congestion    | medium     | medium     | high       |
| place_opt.congestion.effort                        | Congestion    | medium     | medium     | high       |
+----------------------------------------------------+---------------+------------+------------+------------+
set_qor_strategy -stage pnr -metric {area timing total_power congestion}
Warning: app_option design.on_disk_operation is not block scoped, value 'true' may not be persistent.
Warning: app_option route_opt.flow.enable_power is not block scoped, value 'true' may not be persistent.
## Prefix
if {$PLACE_OPT_USER_INSTANCE_NAME_PREFIX != ""} {
	set_app_options -name opt.common.user_instance_name_prefix -value $PLACE_OPT_USER_INSTANCE_NAME_PREFIX
	set_app_options -name cts.common.user_instance_name_prefix -value ${PLACE_OPT_USER_INSTANCE_NAME_PREFIX}_cts
}
##########################################################################################
## RM default settings
##########################################################################################
## Logic resturcturing (RM default on; requires Digital-AF license)
## Uses synthesis engine to improve area, power, and timing either standalone or in combinations
## RM default is area_timing for area and TNS. Tool default is none. Runs in place_opt and clock_opt final_opto.
## 	specify area for leakage-aware area improvement where leakage is a secondary costing factor;
## 	specify timing for timing improvement;
## 	specify power for both total power and area improvement; 
## 	specify timing_power for timing, total power, and area improvement
## Optionally set opt.common.advanced_logic_restructuring_wirelength_costing to medium or none if design is not routing challenging,
## to allow more flexibility in wirelength increase for more logic restructuring  
if {[check_license -quiet "Digital-AF"]} {
	puts "RM-info: Setting opt.common.advanced_logic_restructuring_mode to area_timing (tool default none)"
	set_app_options -name opt.common.advanced_logic_restructuring_mode -value area_timing ;# tool default none
}
RM-info: Setting opt.common.advanced_logic_restructuring_mode to area_timing (tool default none)
##########################################################################################
## Optimization settings 
##########################################################################################
## Layer optimization in preroute flows (optional)
## - Enables automatic layer optimization that assigns long timing-critical nets to 
##   upper metal layers to improve timing; supported in place_opt final_opt stage rebuffering.
##   place_opt.flow.optimize_layers and clock_opt.flow.optimize_layers are both false by default
##	set_app_options -name place_opt.flow.optimize_layers -value true ;# tool default false
##	set_app_options -name clock_opt.flow.optimize_layers -value true ;# tool default false
## - Overlap bins: when the switch is enabled, layer bins can be overlapped;
##   This might help improve QoR when routing resouces is unbalanced.
##	set_app_options -name place_opt.flow.optimize_layers_overlap_bins -value true ;# tool default false
##	set_app_options -name clock_opt.flow.optimize_layers_overlap_bins -value true ;# tool default false
## CCD WNS effort level - controls CCD engine effort on setup WNS optimization (optional)
## Higher effort may sacrify TNS and power to achieve better WNS result. Applies to clock_opt final_opto and route_opt.
#	set_app_options -name ccd.fmax_optimization_effort -value low(default)|medium|high
## CCD timing effort - controls CCD engine effort on overall setup timing optimization (optional)
## Higher effort improves setup timing more at possible cost of power. Applies to clock_opt final_opto and route_opt.
#	set_app_options -name ccd.timing_effort -value low|medium(default)|high
## CCD hold control effort for hold critical designs (optional)
## Higher effort improves hold timing more but can reduce the improvement on setup timing
#	set_app_options -name ccd.hold_control_effort -value low(default)|medium|high|ultra
## ICG merging (RM default is true; optional to set it to false)
## When set to true, ICG merging (merge_clock_gates) runs internally inside place_opt as a first step in initial_place stage;
## In case of SPG flow, ICG merging happens as a first step in initial_opto phase
puts "RM-info: Setting place_opt.flow.merge_clock_gates to $PLACE_OPT_MERGE_ICGS (tool default true)"
RM-info: Setting place_opt.flow.merge_clock_gates to true (tool default true)
set_app_options -name place_opt.flow.merge_clock_gates -value $PLACE_OPT_MERGE_ICGS
## NDR optimization in preroute (optional)
## Assigns long timing critical nets to NDR to improve timing 
puts "RM-info: Setting place_opt.flow.optimize_ndr to $PREROUTE_NDR_OPTIMIZATION (tool default false)"
RM-info: Setting place_opt.flow.optimize_ndr to false (tool default false)
set_app_options -name place_opt.flow.optimize_ndr -value $PREROUTE_NDR_OPTIMIZATION ;# tool default false 
puts "RM-info: Setting clock_opt.flow.optimize_ndr to $PREROUTE_NDR_OPTIMIZATION (tool default false)"
RM-info: Setting clock_opt.flow.optimize_ndr to false (tool default false)
set_app_options -name clock_opt.flow.optimize_ndr -value $PREROUTE_NDR_OPTIMIZATION ;# tool default false
## Fanout constraint for data path optimization (optional)
## Optimization will try to ensure that data path cells do not drive cells more than the specified limit.
#	set_app_options -name opt.common.max_fanout -value 32 ;# tool default 40
## Repeatability settings
## Here are the recommeded settings to produce repeatable results with respect to multicore runs
## Refer to SolvNet #2724517 for complete details
## place_opt repeatability
#	set_app_options -name place_opt.flow.repeatability -value true ;# tool default true
## clock_opt repeatability (note: run time impact expected)
#	set_app_options -name clock_opt.flow.repeatability -value true ;# tool default false
## route_global repeatability
#	set_app_options -name route.global.deterministic -value on ;# tool default off
## DFT related : to disable DFT optimization step at each placement call (optional)
#	set_app_options -name opt.dft.optimize_scan_chain -value false ;# tool default true
## DFT related : enable the clock aware reorder/repartition engines to help the hold violations in the scan paths
## The recommendation is to use them during clock_opt or post CTS with hold scenarios enabled.
## May degrade scan chain wire length due to giving higher priority to the clock drive crossing reduction. 
## opt.dft.clock_aware_scan_reorder : if the reconnections are only expected within each scan chain  
## opt.dft.clock_aware_scan_repartition_reorder : if the reconnections are expected to be across scan chains; this is super set of the above  
#	set_app_options -name opt.dft.clock_aware_scan_reorder -value true ;# tool default false; for within each scan chain
#	set_app_options -name opt.dft.clock_aware_scan_repartition_reorder -value true ;# tool default false; for across scan chains
## DFT related : to prevent optimization from modifying the ports  (optional)
## Specify a list of cells, such as clock gen or customized logics, where existing ports should be preserved or new ports should not be punched.
## Useful if you do formal verification by modules.
if {$OPTIMIZATION_FREEZE_PORT_LIST != ""} {
	puts "RM-info: Setting opt.dft.hier_preservation to true (tool default false)"
	set_app_options -name opt.dft.hier_preservation -value true ;# honors hierarchy port preservation during dft optimization
	set_freeze_port -all [get_cells $OPTIMIZATION_FREEZE_PORT_LIST] ;# sets freeze_clock_ports and freeze_data_ports attributes on the specified cells
}
## Non-Clock NDR
if {[file exists [which $TCL_NON_CLOCK_NDR_RULES_FILE]]} {
	puts "RM-info: Sourcing [which $TCL_NON_CLOCK_NDR_RULES_FILE]"
	source $TCL_NON_CLOCK_NDR_RULES_FILE
} elseif {$TCL_NON_CLOCK_NDR_RULES_FILE != ""} {
	puts "RM-error: TCL_NON_CLOCK_NDR_RULES_FILE($TCL_NON_CLOCK_NDR_RULES_FILE) is invalid. Please correct it."
}
##########################################################################################
## Power related settings
##########################################################################################
## Multibit banking and debanking (optional)
## Banking (single bit and multibit to multibit sequential cells) takes effect during place_opt initial_opto.
## Debanking (multibit to lower width multibit and/or single bit sequential cells) takes effect during place_opt final_opto for TNS.
puts "RM-info: Setting place_opt.flow.enable_multibit_banking to $PLACE_OPT_MULTIBIT_BANKING (tool default false)" 
RM-info: Setting place_opt.flow.enable_multibit_banking to false (tool default false)
set_app_options -name place_opt.flow.enable_multibit_banking -value $PLACE_OPT_MULTIBIT_BANKING 
puts "RM-info: Setting place_opt.flow.enable_multibit_debanking to $PLACE_OPT_MULTIBIT_DEBANKING (tool default false)" 
RM-info: Setting place_opt.flow.enable_multibit_debanking to false (tool default false)
set_app_options -name place_opt.flow.enable_multibit_debanking -value $PLACE_OPT_MULTIBIT_DEBANKING
## Set your threshold_voltage_group attributes. For example:
## 	define_user_attribute -type string -class lib_cell threshold_voltage_group
## 	set_attribute -quiet [get_lib_cells -quiet */*LVT] threshold_voltage_group LVt
## 	set_attribute -quiet [get_lib_cells -quiet */*RVT] threshold_voltage_group RVt
## 	set_attribute -quiet [get_lib_cells -quiet */*HVT] threshold_voltage_group HVt
## set_threshold_voltage_group_type is not persistent and should be defined in settings.non_persistent.tcl.*
## Listed here for your reference:
## 	set_threshold_voltage_group_type -type low_vt LVt
## 	set_threshold_voltage_group_type -type normal_vt RVt
## 	set_threshold_voltage_group_type -type high_vt HVt
## CTS power aware pruning (optional)
## Allows selection of repeater cells to also consider internal and leakage power in order to reduce dynamic 
## and also leakage power of the clock trees
puts "RM-info: Setting cts.common.power_aware_pruning to $PREROUTE_CTS_POWER_AWARE_PRUNING (tool default false)"
RM-info: Setting cts.common.power_aware_pruning to false (tool default false)
set_app_options -name cts.common.power_aware_pruning -value $PREROUTE_CTS_POWER_AWARE_PRUNING
## CTS low power techniques (optional)
## gate_relocation: sets cts.compile.power_opt_mode to gate_relocation to enable activity aware gate 
##                  relocation (moves cells with low input clock toggling rates closer to their drivers)
##      	    at the end of gate by gate clock tree synthesis;
## low_power_targets: sets cts.compile.power_opt_mode to low_power_targets for CTS to relax certain
##                    internal constraints and build clock trees with less area and power;
## all: sets cts.compile.power_opt_mode to all to enable both the above features 
if {$PREROUTE_CTS_LOW_POWER_TECHNIQUE != ""} {
	puts "RM-info: Setting cts.compile.power_opt_mode to $PREROUTE_CTS_LOW_POWER_TECHNIQUE (tool default none)"
	set_app_options -name cts.compile.power_opt_mode -value $PREROUTE_CTS_LOW_POWER_TECHNIQUE
}
##########################################################################################
## Placement and Congestion related settings: max density, max util, and automatic control
##########################################################################################
## You can explicitly control the placement max density and max utilization by following (optional)
## 1. Max density
##    - When this value is set, coarse placer attempts to limit local cell density to be less than the value
if {$PREROUTE_PLACEMENT_MAX_DENSITY != ""} {	
	puts "RM-info: Setting place.coarse.max_density to $PREROUTE_PLACEMENT_MAX_DENSITY"
	set_app_options -name place.coarse.max_density -value $PREROUTE_PLACEMENT_MAX_DENSITY
}
## 2. Max utilization
##    - Specifies the max design utilization after congestion driven padding (during congestion driven placement) is done
if {$PREROUTE_PLACEMENT_MAX_UTIL != ""} {
	puts "RM-info: Setting place.coarse.congestion_driven_max_util to $PREROUTE_PLACEMENT_MAX_UTIL" 
	set_app_options -name place.coarse.congestion_driven_max_util -value $PREROUTE_PLACEMENT_MAX_UTIL
}
## Automatic density control (tool default)
## - If you do not specify either of the above two settings and keep the tool defaults, the automatic density control,
##   which is enabled by tool default, selects the value for max density and max util based on the design stage
## - Message PLACE-027 is issued to report the chosen settings
puts "RM-info: Setting place.coarse.auto_density_control to $PREROUTE_PLACEMENT_AUTO_DENSITY (tool default true)"
RM-info: Setting place.coarse.auto_density_control to true (tool default true)
set_app_options -name place.coarse.auto_density_control -value $PREROUTE_PLACEMENT_AUTO_DENSITY
## Enhanced automatic density control (optional)
## - Requires place.coarse.auto_density_control to be true otherwise no-op
## - Selects max density based on the design stage as well as design utilization
## - Selects max util based on the design stage as well as design tchnology
## - Potentially benefits design TNS
puts "RM-info: Setting place.coarse.enhanced_auto_density_control to $PREROUTE_PLACEMENT_ENHANCED_AUTO_DENSITY (tool default false)"
RM-info: Setting place.coarse.enhanced_auto_density_control to false (tool default false)
set_app_options -name place.coarse.enhanced_auto_density_control -value $PREROUTE_PLACEMENT_ENHANCED_AUTO_DENSITY
##########################################################################################
## Placement and Congestion related settings: other settigs
##########################################################################################
## DFT related: to continue the placement without SCANDEF (optional)
#	set_app_options -name place.coarse.continue_on_missing_scandef -value true
if {[get_scan_chains] == 0} {
	puts "RM-warning: No SCANDEF is found. If there are scan elements in the netlist, placement QoR may be degraded due to influence of the connections with scan elements."
        puts "RM-info: By default coarse placement will not proceed. If you wish to proceed knowing the consequences, set place.coarse.continue_on_missing_scandef to true."
}
RM-warning: No SCANDEF is found. If there are scan elements in the netlist, placement QoR may be degraded due to influence of the connections with scan elements.
RM-info: By default coarse placement will not proceed. If you wish to proceed knowing the consequences, set place.coarse.continue_on_missing_scandef to true.
## Target routing density for congestion-driven placement (optional)
## Tool default is 0 which allows the placer to make the decision.
if {$PREROUTE_PLACEMENT_TARGET_ROUTING_DENSITY != ""} {
	puts "RM-info: Setting place.coarse.target_routing_density to $PREROUTE_PLACEMENT_TARGET_ROUTING_DENSITY"
	set_app_options -name place.coarse.target_routing_density -value $PREROUTE_PLACEMENT_TARGET_ROUTING_DENSITY
}
## Pin density aware placement for preroute flows (optional)
## For designs with pin access and local density hot spot issues. 
puts "RM-info: Setting place.coarse.pin_density_aware to $PREROUTE_PLACEMENT_PIN_DENSITY_AWARE (tool default false)" 
RM-info: Setting place.coarse.pin_density_aware to false (tool default false)
set_app_options -name place.coarse.pin_density_aware -value $PREROUTE_PLACEMENT_PIN_DENSITY_AWARE
## Enable keep going legalizer to improve legalizer turn-around time (optional)
#	set_app_options -name place.legalize.limit_legality_checks -value true ;# tool default false
## Soft blockage enhancement : to prevent incremental coarse placer from moving cells out of soft blockages
#	set_app_options -name place.coarse.enable_enhanced_soft_blockages -value true
## Create soft bounds with effort level
## Tool default effort is ultra, which is useful for small groups of instances or around MV regions.
## For modules or large groups of cells, consider using medium effort.
##	create_bound -name abc -type soft -effort medium ...
##	set_attribute [get_bounds {abc} ] effort medium
## Uncomment below for designs with fishbone PG structure, to support PDC checking with EoL rule
##  and VIA enclosure for pin access point, uncomment to apply the following
#	set_app_options -name place.legalize.use_eol_spacing_for_access_check -value true ;# tool default false
## Specify congestion driven cell expansion direction to both (optional)
## When there is low-layer horizontal congestion associated with high pin-density, wide non-register cells in your design, 
## set this to both to improve congestion. A cell is consider wide when the aspect ratio of width to height is greater than 2:1.
#	set_app_option -name place.coarse.congestion_expansion_direction -value both ;# tool default horizonrtal
## Repeater path spreading (optional)
## For fragmented floorplans, in channels, enables coarse placement to perform cell spreading in areas dominated by long wires
## of repeaters around macro & blockage boundaries and corners, minimizing clumping and hugging on those areas.
#	 set_app_options -name place.coarse.spread_repeater_paths -value true ;# tool default false
## Congestion modeling : enable placer support for GR soft congestion map
## Placer uses GR congestion map to perform cell expansion to make room for more routing resources.
## By supporting soft congestion during cell expansion can help additional demaind during DR.
## Soft congestion can be contributed by external or internal soft routing rules.
## External is from create_routing_rule command. Internal is from GR modeling automatically.
#	set_app_options -name route.global.export_soft_congestion_maps -value true ;# tool default false
## ICG related: auto bound for ICG placement (optional)
## Can be enabled along with PLACE_OPT_OPTIMIZE_ICGS
puts "RM-info: Setting place.coarse.icg_auto_bound to $PLACE_OPT_ICG_AUTO_BOUND (tool default false)"
RM-info: Setting place.coarse.icg_auto_bound to false (tool default false)
set_app_options -name place.coarse.icg_auto_bound -value $PLACE_OPT_ICG_AUTO_BOUND
## ICG related: clock-aware placement (optional)
## Redundant if PLACE_OPT_OPTIMIZE_ICGS is enabled since tool will enable this feature automatically.
puts "RM-info: Setting place_opt.flow.clock_aware_placement to $PLACE_OPT_CLOCK_AWARE_PLACEMENT (tool default false)"
RM-info: Setting place_opt.flow.clock_aware_placement to false (tool default false)
set_app_options -name place_opt.flow.clock_aware_placement -value $PLACE_OPT_CLOCK_AWARE_PLACEMENT
##########################################################################################
## CTS settings
##########################################################################################
## CTS max transition and capacitance 
## Here are the examples :
##	foreach_in_collection m [get_modes] {
##		set_max_transition -clock_path 0.15 [get_clocks -mode $m] -scenarios [get_scenarios -mode $m]
##		set_max_capacitance -clock_path 0.5 [get_clocks -mode $m] -scenarios [get_scenarios -mode $m]
##	}
## CTS target skew and latency 
## By default CTS targets best skew and latency. These options can be used in case user wants to relax the target.
##	Example : set_clock_tree_options -clocks [get_clocks clk -mode Mode1] -corner Corner1WC -target_latency 1 -target_skew 0.3
## CTS balance points 
## To modify the clock tree balancing requirements (for the current scenario)
##	Example: set_clock_balance_points -delay 2.0 -balance_point gck/CP ;# -clock option is not mandatory
## Correspondingly, you should also set clock latency accordingly for place_opt and compile (for the current scenario)
##	Example: set_clock_latency -2.0 gck/CP
## CTS skew groups 
## Create user-defined skew groups which usually are to improve timing
##	Example: 
##	foreach_in_collection m [get_modes] {
##		create_clock_skew_group -name [get_object_name ${m}]_grp1 -mode $m -objects "reg1/clk reg2/clk"
##	}
## CTS ICDB (Inter-clock delay balancing) constraints
## ICDB is performed automatically in build_clock phase of clock_opt
## Use create_clock_balance_group to control it. For ex,
##	foreach_in_collection m [get_modes] {
##		current_mode $m
##		create_clock_balance_group -objects {clk1 clk2} -name group1 -offset_latencies {0.0 -0.5}
##	}
## CTS Latency adjustments for compute_clock_latency
## For clock_opt non-CCD flow, compute_clock_latency is performed automatically in route_clock phase of clock_opt
## For clock_opt CCD flow, compute_clock_latency is performed automatically during both build_clock and route_clock phases.
## For place_opt with trial_clock or optimize_icgs enabled, compute_clock_latency is performed automatically during place_opt.
## However you have to use set_latency_adjustment_options to control it. For ex, to associate virtual clocks to real clocks :
##	foreach_in_collection m [get_modes] {
##		current_mode $m
##		set_latency_adjustment_options -reference_clock <real_clock> -clocks_to_update <virtual_clock>
##	}
## derive_clock_cell_references
## Check non-repeater cells on clock trees and suggest logically equivalent cells for CTS to use
##	derive_clock_cell_references -output refs.tcl
## Edit refs.tcl and source it
## CTS cell spacing 
## Apply placement based cell to cell spacing rule to avoid EM problem on P/G rails.
## This rule will be applied to the clock buffers/inverters, the clock gating cells only.
##	Example : set_clock_cell_spacing -x_spacing 0.9 -y_spacing 0.4 -lib_cells mylib/BUFFD2BWP
## CTS hierarchy preservation 
## To prevent CTS from punching new logical ports for logical hierarchies
##	Example : set_freeze_ports -clocks [get_cells {block1}]
## Apply root NDR on internal nets based on transitive fanout limit 
## This feature benefits if you have differnt NDR for root and internal nets while root NDR has better RC. 
## Specify a limit, for each internal net, if its downstream transitive fanout is
## - equal or greater than the limit, root NDR is applied
## - smaller than the limit, internal NDR is still applied
##	set_clock_tree_options -root_ndr_fanout_limit <integer> 
##########################################################################################
## Create clock NDR
##########################################################################################
## Specify TCL_CTS_NDR_RULE_FILE with your script to create and associate your clock NDR rules
## By default it is set to cts_ndr.tcl which is an RM provided example. 
## You can replace it with yours, or use it as a base to build yours.
## cts_ndr.tcl :
## 1. Can be used to create and associate clock NDR rules for root, internal, and leaf nets
## 2. Prerequisite: you need to also specify CTS_NDR_RULE_NAME, CTS_INTERNAL_NDR_RULE_NAME, or CTS_LEAF_NDR_RULE_NAME,
##    otherwise cts_ndr.tcl will be skipped.
##	- CTS_NDR_RULE_NAME: for root nets
##        CTS_INTERNAL_NDR_RULE_NAME: for internal nets
##		- Valid selections for both of them are:
##			- rm_2w2s: double width double spacing
##			- rm_2w2s_shield_default: double width double spacing with shield
##			- rm_2w2s_shield_list: double width double spacing with shield customized width and spacing
##	- CTS_LEAF_NDR_RULE_NAME: for leaf nets
##		- Valid selection is rm_leaf: default width and spacing
## 3. You can specify either or all of them, and the rule(s) will be created and associated.
##    If same rule is specified for both CTS_NDR_RULE_NAME and CTS_INTERNAL_NDR_RULE_NAME, rule creation for CTS_INTERNAL_NDR_RULE_NAME
##    will be skipped if already created. (rule association still happen for both root and internal nets)
if {[file exists [which $TCL_CTS_NDR_RULE_FILE]]} {
	source -echo $TCL_CTS_NDR_RULE_FILE
} elseif {$TCL_CTS_NDR_RULE_FILE != ""} {
	puts "RM-error: TCL_CTS_NDR_RULE_FILE($TCL_CTS_NDR_RULE_FILE) is invalid. Please correct it!"
}
puts "RM-info: Running script [info script]\n"
RM-info: Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/cts_ndr.tcl

##########################################################################################
# Tool: IC Compiler II
# Script: cts_ndr.tcl 
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
if {$CTS_NDR_RULE_NAME == "" && $CTS_INTERNAL_NDR_RULE_NAME == "" && $CTS_LEAF_NDR_RULE_NAME == ""} {
	puts "RM-info: [info script] is skipped. None of CTS_NDR_RULE_NAME, CTS_INTERNAL_NDR_RULE_NAME, or CTS_LEAF_NDR_RULE_NAME is specified."
} else {

##########################################################################################
# NDR for root nets (CTS_NDR_RULE_NAME)
##########################################################################################
## - specify rm_2w2s to create a double width and double spacing rule
## - specify rm_2w2s_shield_default to create a double width and spacing + shielding with default width and spacing rule
## - specify rm_2w2s_shield_list to create a double width and spacing + shielding with customized width and spacing rule

## Rule creation (create_routing_rule) for root nets ##
if {$CTS_NDR_RULE_NAME != ""} {
	redirect -var x {report_routing_rules $CTS_NDR_RULE_NAME}
	if {[regexp "Error" $x]} {
		## Create the NDR if it is not present
		if {$CTS_NDR_RULE_NAME == "rm_2w2s"} {
			create_routing_rule $CTS_NDR_RULE_NAME -default_reference_rule -multiplier_width 2 -multiplier_spacing 2
		} elseif {$CTS_NDR_RULE_NAME == "rm_2w2s_shield_default"} {
			create_routing_rule $CTS_NDR_RULE_NAME -default_reference_rule -multiplier_width 2 -multiplier_spacing 2 -shield
		} elseif {$CTS_NDR_RULE_NAME == "rm_2w2s_shield_list"} {
			if {$CTS_NDR_SHIELDING_LAYER_WIDTH_LIST != "" || $CTS_NDR_SHIELDING_LAYER_SPACING_LIST != ""} {
				set create_routing_rule_cmd "create_routing_rule $CTS_NDR_RULE_NAME -default_reference_rule -multiplier_width 2 -multiplier_spacing 2"
				if {$CTS_NDR_SHIELDING_LAYER_WIDTH_LIST != ""} {lappend create_routing_rule_cmd -shield_widths $CTS_NDR_SHIELDING_LAYER_WIDTH_LIST} 
				if {$CTS_NDR_SHIELDING_LAYER_SPACING_LIST != ""} {lappend create_routing_rule_cmd -shield_spacings $CTS_NDR_SHIELDING_LAYER_SPACING_LIST}
				puts "RM-info: $create_routing_rule_cmd"
        	                eval {			eval ${create_routing_rule_cmd}}
			} else {
				puts "RM-error : CTS_NDR_SHIELDING_LAYER_WIDTH_LIST or CTS_NDR_SHIELDING_LAYER_SPACING_LIST not specified which is required by $CTS_NDR_RULE_NAME"
			}
		} else {
			puts "RM-error : $CTS_NDR_RULE_NAME is not a supported rule name. Rule is not created. Please double check"
		}
	} else {
		puts "RM-info: CTS_NDR_RULE_NAME($CTS_NDR_RULE_NAME) already exists. Rule creation skipped."
	}
}

## Rule association (set_clock_routing_rules) for root nets ##
if {$CTS_NDR_RULE_NAME != ""} {
	# Check if the rule has been created properly
	redirect -var x {report_routing_rules $CTS_NDR_RULE_NAME}
	if {![regexp "Error" $x]} {
		# set_clock_routing_rules on root nets
		set set_clock_routing_rules_cmd_root "set_clock_routing_rules -net_type root -rule $CTS_NDR_RULE_NAME"
		if {$CTS_NDR_MIN_ROUTING_LAYER != ""} {lappend set_clock_routing_rules_cmd_root -min_routing_layer $CTS_NDR_MIN_ROUTING_LAYER}
		if {$CTS_NDR_MAX_ROUTING_LAYER != ""} {lappend set_clock_routing_rules_cmd_root -max_routing_layer $CTS_NDR_MAX_ROUTING_LAYER}
		puts "RM-info: $set_clock_routing_rules_cmd_root"
		eval {			eval ${set_clock_routing_rules_cmd_root}}
	} else {
		puts "RM-error: CTS_NDR_RULE_NAME($CTS_NDR_RULE_NAME) hasn't been created yet. Can not associate it with root nets!"
	}
}

##########################################################################################
# NDR for internal nets (CTS_INTERNAL_NDR_RULE_NAME)
##########################################################################################
## - specify rm_2w2s to create a double width and double spacing rule
## - specify rm_2w2s_shield_default to create a double width and spacing + shielding with default width and spacing rule
## - specify rm_2w2s_shield_list to create a double width and spacing + shielding with customized width and spacing rule

## Rule creation (create_routing_rule) for internal nets ##
if {$CTS_INTERNAL_NDR_RULE_NAME != ""} {
	redirect -var x {report_routing_rules $CTS_INTERNAL_NDR_RULE_NAME}
	if {[regexp "Error" $x]} {
		## Create the NDR if it is not present
		if {$CTS_INTERNAL_NDR_RULE_NAME == "rm_2w2s"} {
			create_routing_rule $CTS_INTERNAL_NDR_RULE_NAME -default_reference_rule -multiplier_width 2 -multiplier_spacing 2
		} elseif {$CTS_INTERNAL_NDR_RULE_NAME == "rm_2w2s_shield_default"} {
			create_routing_rule $CTS_INTERNAL_NDR_RULE_NAME -default_reference_rule -multiplier_width 2 -multiplier_spacing 2 -shield
		} elseif {$CTS_INTERNAL_NDR_RULE_NAME == "rm_2w2s_shield_list"} {
			if {$CTS_INTERNAL_NDR_SHIELDING_LAYER_WIDTH_LIST != "" || $CTS_INTERNAL_NDR_SHIELDING_LAYER_SPACING_LIST != ""} {
				set create_routing_rule_cmd "create_routing_rule $CTS_INTERNAL_NDR_RULE_NAME -default_reference_rule -multiplier_width 2 -multiplier_spacing 2"
				if {$CTS_INTERNAL_NDR_SHIELDING_LAYER_WIDTH_LIST != ""} {lappend create_routing_rule_cmd -shield_widths $CTS_INTERNAL_NDR_SHIELDING_LAYER_WIDTH_LIST} 
				if {$CTS_INTERNAL_NDR_SHIELDING_LAYER_SPACING_LIST != ""} {lappend create_routing_rule_cmd -shield_spacings $CTS_INTERNAL_NDR_SHIELDING_LAYER_SPACING_LIST}
				puts "RM-info: $create_routing_rule_cmd"
        	                eval {			eval ${create_routing_rule_cmd}}
			} else {
				puts "RM-error : CTS_INTERNAL_NDR_SHIELDING_LAYER_WIDTH_LIST or CTS_INTERNAL_NDR_SHIELDING_LAYER_SPACING_LIST not specified which is required by $CTS_INTERNAL_NDR_RULE_NAME"
			}
		} else {
			puts "RM-error : $CTS_INTERNAL_NDR_RULE_NAME is not a supported rule name. Rule is not created. Please double check"
		}
	} else {
		puts "RM-info: CTS_INTERNAL_NDR_RULE_NAME($CTS_INTERNAL_NDR_RULE_NAME) already exists. Rule creation skipped."
	}
}

## Rule association (set_clock_routing_rules) for internal nets ##
if {$CTS_INTERNAL_NDR_RULE_NAME != ""} {
	# Check if the rule has been created properly
	redirect -var x {report_routing_rules $CTS_INTERNAL_NDR_RULE_NAME}
	if {![regexp "Error" $x]} {
		# set_clock_routing_rules on internal nets
		set set_clock_routing_rules_cmd_internal "set_clock_routing_rules -net_type internal -rule $CTS_INTERNAL_NDR_RULE_NAME"
		if {$CTS_INTERNAL_NDR_MIN_ROUTING_LAYER != ""} {lappend set_clock_routing_rules_cmd_internal -min_routing_layer $CTS_INTERNAL_NDR_MIN_ROUTING_LAYER}
		if {$CTS_INTERNAL_NDR_MAX_ROUTING_LAYER != ""} {lappend set_clock_routing_rules_cmd_internal -max_routing_layer $CTS_INTERNAL_NDR_MAX_ROUTING_LAYER}
		puts "RM-info: $set_clock_routing_rules_cmd_internal"
		eval {			eval ${set_clock_routing_rules_cmd_internal}}
	} else {
		puts "RM-error: CTS_INTERNAL_NDR_RULE_NAME($CTS_INTERNAL_NDR_RULE_NAME) hasn't been created yet. Can not associate it with internal nets!"
	}
}

##########################################################################################
# NDR for leaf (sink) nets (CTS_LEAF_NDR_RULE_NAME)
##########################################################################################
## - specify rm_leaf to create a default reference rule for leaf nets

## Rule creation (create_routing_rule) for leaf nets ##
if {$CTS_LEAF_NDR_RULE_NAME != ""} {
	redirect -var x {report_routing_rules $CTS_LEAF_NDR_RULE_NAME}
	if {[regexp "Error" $x]} {
		## Create the NDR if it is not present
		if {$CTS_LEAF_NDR_RULE_NAME == "rm_leaf"} {
			create_routing_rule $CTS_LEAF_NDR_RULE_NAME -default_reference_rule
		} else {
			puts "RM-error : $CTS_LEAF_NDR_RULE_NAME is not a supported rule name. Rule is not created. Please double check"
		}
	} else {
		puts "RM-info: CTS_LEAF_NDR_RULE_NAME($CTS_LEAF_NDR_RULE_NAME) already exists. Rule creation skipped"
	}
}

## Rule association (set_clock_routing_rules) for leaf nets ##
if {$CTS_LEAF_NDR_RULE_NAME != ""} {
	# Check if the rule has been created properly
	redirect -var x {report_routing_rules $CTS_LEAF_NDR_RULE_NAME}
	if {![regexp "Error" $x]} {
		set set_clock_routing_rules_cmd_leaf "set_clock_routing_rules -net_type sink -rule $CTS_LEAF_NDR_RULE_NAME"
		if {$CTS_LEAF_NDR_MIN_ROUTING_LAYER != ""} {lappend set_clock_routing_rules_cmd_leaf -min_routing_layer $CTS_LEAF_NDR_MIN_ROUTING_LAYER}
		if {$CTS_LEAF_NDR_MAX_ROUTING_LAYER != ""} {lappend set_clock_routing_rules_cmd_leaf -max_routing_layer $CTS_LEAF_NDR_MAX_ROUTING_LAYER}
		puts "RM-info: $set_clock_routing_rules_cmd_leaf"
		eval $set_clock_routing_rules_cmd_leaf
	} else {
		puts "RM-error: CTS_LEAF_NDR_RULE_NAME($CTS_LEAF_NDR_RULE_NAME) hasn't been created yet. Can not associate it with leaf nets!"
	}
}

}
RM-info: /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/cts_ndr.tcl is skipped. None of CTS_NDR_RULE_NAME, CTS_INTERNAL_NDR_RULE_NAME, or CTS_LEAF_NDR_RULE_NAME is specified.
puts "RM-info: Completed script [info script]\n"
RM-info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/cts_ndr.tcl

##########################################################################################
## Reports
##########################################################################################
redirect -file ${REPORTS_DIR}/${REPORT_PREFIX}.report_routing_rules {report_routing_rules -verbose}
redirect -file ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_routing_rules {report_clock_routing_rules}
redirect -file ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_settings {report_clock_settings}
##########################################################################################
## Routing Settings
##########################################################################################
## Set max routing layer
if {$MAX_ROUTING_LAYER != ""} {set_ignored_layers -max_routing_layer $MAX_ROUTING_LAYER}
Warning: Nothing implicitly matched 'MINT3' (SEL-003)
Error: Nothing matched for -max_routing_layer (SEL-005)
## Set min routing layer
if {$MIN_ROUTING_LAYER != ""} {set_ignored_layers -min_routing_layer $MIN_ROUTING_LAYER}
Warning: Nothing implicitly matched 'M1' (SEL-003)
Error: Nothing matched for -min_routing_layer (SEL-005)
##########################################################################################
## Extraction Settings
##########################################################################################
## For better end of the flow correlation with StarRC, apply the following settings
## The ICC-II timing and run time may be impacted
#	set_extraction_options -include_pin_resistance
#	set_app_options -name extract.cut_loop -value false ;# tool default true
puts "RM-info: Completed script [info script]\n"
RM-info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl

source -echo settings.non_persistent.tcl ;# non-persistent settings to be re-applied in each session
puts "RM-info: Running script [info script]\n"
RM-info: Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.non_persistent.tcl

##########################################################################################
# Script: settings.non_persistent.tcl
# Description : Settings that need to be re-applied in each new ICC-II session are incldued below.
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
####################################
## Timer 
####################################
## set_app_options -name time.enable_preset_clear_arcs -value true ;# tool default false, global-scoped
####################################
## Keepout margin (lib cell based) 
####################################
## Lib cell based keepout margin is not persistent in the current release and must be re-applied in new ICC-II seccions.
#  Example : create_keepout_margin -outer {5 5 5 5} [get_lib_cells */lib_cell_name]
####################################
## set_threshold_voltage_group_type 
####################################
## Set your threshold_voltage_group attributes. These are persistent and can be simply defined in settings.place_opt.tcl. 
#  Listed here for your reference. For example:
#  	define_user_attribute -type string -class lib_cell threshold_voltage_group
#  	set_attribute -quiet [get_lib_cells -quiet */*LVT] threshold_voltage_group LVt
#  	set_attribute -quiet [get_lib_cells -quiet */*RVT] threshold_voltage_group RVt
#  	set_attribute -quiet [get_lib_cells -quiet */*HVT] threshold_voltage_group HVt
## set_threshold_voltage_group_type is not persistent and should be defined here:
#  	set_threshold_voltage_group_type -type low_vt LVt
#  	set_threshold_voltage_group_type -type normal_vt RVt
#  	set_threshold_voltage_group_type -type high_vt HVt
puts "RM-info: Completed script [info script]\n"
RM-info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.non_persistent.tcl

##########################################################################################
## Additional flavors (optional)
##########################################################################################
## ICC2-RM provides additional files (flavors) to override a small set of RM default settings for high connectivity, run time,
## and area/power focused designs. This is controlled by ADDITIONAL_FLAVOR, which is by default unspecified; 
## if unspecified, runs RM default flow that works/balances all PPA.
if {$ADDITIONAL_FLAVOR == "run_time"} {
	puts "RM-info: Sourcing [which flavor.run_time_focused.tcl]"
	source -echo flavor.run_time_focused.tcl
} elseif {$ADDITIONAL_FLAVOR == "area_power"} {
	puts "RM-info: Sourcing [which flavor.area_power_focused.tcl]"
	source -echo flavor.area_power_focused.tcl
} elseif {$ADDITIONAL_FLAVOR == "high_connectivity_high_congestion"} {
	puts "RM-info: Sourcing [which flavor.high_connectivity_high_congestion_focused.tcl]"
	source -echo flavor.high_connectivity_high_congestion_focused.tcl
}
##########################################################################################
## Additional setup
##########################################################################################
## Lib cell usage restrictions (set_lib_cell_purpose)
## By default, RM sources set_lib_cell_purpose.tcl for dont use, tie cell, hold fixing, CTS and CTS-exclusive cell restrictions. 
## You can replace it with your own script by specifying the TCL_LIB_CELL_PURPOSE_FILE variable.  
if {[file exists [which $TCL_LIB_CELL_PURPOSE_FILE]]} {
	puts "RM-info: Sourcing [which $TCL_LIB_CELL_PURPOSE_FILE]"
	source $TCL_LIB_CELL_PURPOSE_FILE
} elseif {$TCL_LIB_CELL_PURPOSE_FILE != ""} {
	puts "RM-error: TCL_LIB_CELL_PURPOSE_FILE($TCL_LIB_CELL_PURPOSE_FILE) is invalid. Please correct it."
}
RM-info: Sourcing /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/set_lib_cell_purpose.tcl
RM-info: Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/set_lib_cell_purpose.tcl

RM-info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/set_lib_cell_purpose.tcl

## Placement spacing labels and rules 
if {[file exists [which $TCL_PLACEMENT_SPACING_LABEL_RULE_FILE]]} {
	puts "RM-info: Sourcing [which $TCL_PLACEMENT_SPACING_LABEL_RULE_FILE]"
	source $TCL_PLACEMENT_SPACING_LABEL_RULE_FILE
} elseif {$TCL_PLACEMENT_SPACING_LABEL_RULE_FILE != ""} {
	puts "RM-error: TCL_PLACEMENT_SPACING_LABEL_RULE_FILE($TCL_PLACEMENT_SPACING_LABEL_RULE_FILE) is invalid. Please correct it."
}
## read_saif 
if {[file exists [which $SAIF_FILE]]} {
	if {$SAIF_FILE_POWER_SCENARIO != ""} {
		set read_saif_cmd "read_saif $SAIF_FILE -scenarios \"$SAIF_FILE_POWER_SCENARIO\""
	} else {
		set read_saif_cmd "read_saif $SAIF_FILE"
	}
	if {$SAIF_FILE_SOURCE_INSTANCE != ""} {lappend read_saif_cmd -strip_path $SAIF_FILE_SOURCE_INSTANCE}
	if {$SAIF_FILE_TARGET_INSTANCE != ""} {lappend read_saif_cmd -path $SAIF_FILE_TARGET_INSTANCE}
	puts "RM-info: Running $read_saif_cmd"
        eval ${read_saif_cmd}
} elseif {$SAIF_FILE != ""} {
	puts "RM-error: SAIF_FILE($SAIF_FILE) is invalid. Please correct it."	
}
## Spare cell insertion before place_opt (Example: templates/place_opt.spare_cell.tcl)
if {[file exists [which $TCL_USER_SPARE_CELL_PRE_SCRIPT]]} {
	puts "RM-info: Sourcing [which $TCL_USER_SPARE_CELL_PRE_SCRIPT]"
	source $TCL_USER_SPARE_CELL_PRE_SCRIPT
} elseif {$TCL_USER_SPARE_CELL_PRE_SCRIPT != ""} {
	puts "RM-error: TCL_USER_SPARE_CELL_PRE_SCRIPT($TCL_USER_SPARE_CELL_PRE_SCRIPT) is invalid. Please correct it."
}
##########################################################################################
## Pre-place_opt customizations
##########################################################################################
if {[file exists [which $TCL_USER_PLACE_OPT_PRE_SCRIPT]]} {
	puts "RM-info: Sourcing [which $TCL_USER_PLACE_OPT_PRE_SCRIPT]"
	source -echo $TCL_USER_PLACE_OPT_PRE_SCRIPT
} elseif {$TCL_USER_PLACE_OPT_PRE_SCRIPT != ""} {
	puts "RM-error: TCL_USER_PLACE_OPT_PRE_SCRIPT($TCL_USER_PLACE_OPT_PRE_SCRIPT) is invalid. Please correct it."
}
redirect -tee -file ${REPORTS_DIR}/${REPORT_PREFIX}.report_app_options.start {report_app_options -non_default *}
****************************************
Report : app_option
           -non_default
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:03:43 2019
****************************************
Name                                         Type       Value       User-default System-default Scope      Status     Source
-------------------------------------------- ---------- ----------- ------------ -------------- ---------- ---------- ----------------------------------------------------------------------------------------------------
ccd.post_route_buffer_removal                bool       true        --           false          block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
design.on_disk_operation                     bool       true        true         false          global     normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
opt.area.effort                              enum       high        {}           low            block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
opt.common.advanced_logic_restructuring_mode enum       area_timing {}           none           block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:42
opt.common.buffer_area_effort                enum       ultra       {}           low            block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
opt.common.use_route_aware_estimation        enum       true        {}           false          block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
opt.port.eliminate_verilog_assign            bool       true        --           false          block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
opt.power.effort                             enum       high        {}           low            block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
opt.power.mode                               enum       total       {}           none           block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
opt.timing.effort                            enum       high        {}           low            block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
place.coarse.channel_detect_mode             bool       false       --           true           block      normal     
place.coarse.enable_enhanced_soft_blockages  bool       true        --           false          block      normal     
place_opt.final_place.effort                 enum       high        {}           medium         block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
place_opt.initial_drc.global_route_based     enum       1           {}           false          block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
place_opt.place.congestion_effort            enum       high        {}           medium         block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
route.detail.eco_max_number_of_iterations    integer    10          --           -1             block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
route.detail.timing_driven                   bool       true        --           false          block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
route.global.timing_driven                   bool       true        --           false          block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
route.track.crosstalk_driven                 bool       true        --           false          block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
route.track.timing_driven                    bool       true        --           false          block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
route_opt.flow.enable_power                  bool       true        true         false          global     normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
time.enable_clock_to_data_analysis           bool       true        --           false          block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
time.enable_io_path_groups                   bool       true        --           false          block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
time.remove_clock_reconvergence_pessimism    bool       true        --           false          block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
time.si_enable_analysis                      bool       true        --           false          block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.place_opt.tcl:19
-------------------------------------------- ---------- ----------- ------------ -------------- ---------- ---------- ----------------------------------------------------------------------------------------------------

There are additional internal differences with no available TBC source.
1
redirect -file ${REPORTS_DIR}/${REPORT_PREFIX}.report_lib_cell_purpose {report_lib_cell -objects [get_lib_cells] -column {full_name:20 valid_purposes}}
## The following only applies to designs with physical hierarchy
## Ignore the sub-blocks (bound to abstracts) internal timing paths
if {$DESIGN_STYLE == "hier" && $PHYSICAL_HIERARCHY_LEVEL != "bottom"} {
	set_timing_paths_disabled_blocks -all_sub_blocks
}
##########################################################################################
## Clock NDR modeling at place_opt
##########################################################################################
## Clock NDRs are created in settings.place_opt.tcl. 
## mark_clock_trees makes place_opt recognize them to model the congestion impact
puts "RM-info: Running mark_clock_trees -routing_rules to model clock NDR impact during place_opt"
RM-info: Running mark_clock_trees -routing_rules to model clock NDR impact during place_opt
mark_clock_trees -routing_rules
Mark clock trees...
Information: Mark Clock Trees will work on the following scenarios. (CTS-101)
   mode_norm.slow.RCmax	(Mode: mode_norm.slow.RCmax; Corner: mode_norm.slow.RCmax)
   mode_norm.worst_low.RCmax	(Mode: mode_norm.worst_low.RCmax; Corner: mode_norm.worst_low.RCmax)
   mode_norm.fast.RCmin_bc	(Mode: mode_norm.fast.RCmin_bc; Corner: mode_norm.fast.RCmin_bc)
Error: The core area of this design is invalid. (CTS-118)
Marking routing rule and layers lists on clock nets

Warning: No clock routing rule is specified. (CTS-038)

1
##########################################################################################
## place_opt flow
##########################################################################################
if {[file exists [which $TCL_USER_PLACE_OPT_SCRIPT]]} {
	puts "RM-info: Sourcing [which $TCL_USER_PLACE_OPT_SCRIPT]"
	source -echo $TCL_USER_PLACE_OPT_SCRIPT
} elseif {$TCL_USER_PLACE_OPT_SCRIPT != ""} {
	puts "RM-error:TCL_USER_PLACE_OPT_SCRIPT($TCL_USER_PLACE_OPT_SCRIPT) is invalid. Please correct it."
} else {

	##########################################################################
	## Regular MSCTS at place_opt 
	##########################################################################
	if {$PLACE_OPT_MSCTS} {
		## Define MSCTS critical scenario as current_scenario as this will be the scenario considered for tap assignment
		if {$PLACE_OPT_MSCTS_CRITICAL_SCENARIO != ""} {
			set cur_scenario [get_object_name [current_scenario]]
			current_scenario $PLACE_OPT_MSCTS_CRITICAL_SCENARIO
		}

		if {[file exists [which $TCL_REGULAR_MSCTS_FILE]]} {
			set_app_options -name place_opt.flow.enable_multisource_clock_trees -value true
		        puts "RM-info: Sourcing [which $TCL_REGULAR_MSCTS_FILE]"
        		source $TCL_REGULAR_MSCTS_FILE
			save_block -as ${DESIGN_NAME}/${PLACE_OPT_BLOCK_NAME}_MSCTS

		} elseif {$TCL_REGULAR_MSCTS_FILE != ""} {
        		puts "RM-error: TCL_REGULAR_MSCTS_FILE($TCL_REGULAR_MSCTS_FILE) is invalid. Please correct it."
		}

		if {$PLACE_OPT_MSCTS_CRITICAL_SCENARIO != ""} {current_scenario $cur_scenario}
	}

	##########################################################################
	## Two pass place_opt: first pass
	##########################################################################
	## Flow with non-SPG inputs ($PLACE_OPT_SPG_FLOW set to false)
	if {!$PLACE_OPT_SPG_FLOW} {
		puts "RM-info: Running place_opt -from initial_place -to initial_place" ;# initial_place phase is buffering-aware with CDR
		place_opt -from initial_place -to initial_place
		puts "RM-info: Running place_opt -from initial_drc -to initial_drc"
		place_opt -from initial_drc -to initial_drc
		puts "RM-info: Running update_timing -full"
		update_timing -full
	} 

	## Flow with SPG inputs ($PLACE_OPT_SPG_FLOW set to true)
	if {$PLACE_OPT_SPG_FLOW} {
		puts "RM-info: For designs starting with SPG input, seed placement comes from SPG, so the first pass is not needed."
	}

	##########################################################################
	## Two pass place_opt: second pass
	##########################################################################
	## Trial CTS (optional; this feature is not needed if PLACE_OPT_OPTIMIZE_ICGS is enabled)
	if {$PLACE_OPT_TRIAL_CTS} {
		set_app_options -name place_opt.flow.trial_clock_tree -value true ;# default false
	}

	## ICG optimization  (optional)
	## Automatic ICG optimization that performs trial CTS (starting in initial_drc phase), 
	## timing-driven ICG splitting (initial_opto phase), and clock-aware placement (final_place phase)
	if {$PLACE_OPT_OPTIMIZE_ICGS} {
		set_app_options -name place_opt.flow.optimize_icgs -value true ;# default false
		if {$PLACE_OPT_OPTIMIZE_ICGS_CRITICAL_RANGE != ""} {
			set_app_options -name place_opt.flow.optimize_icgs_critical_range -value $PLACE_OPT_OPTIMIZE_ICGS_CRITICAL_RANGE ;# default 0.75
		}
	}

	## Flow with non-SPG inputs ($PLACE_OPT_SPG_FLOW set to false)
	if {!$PLACE_OPT_SPG_FLOW} {
		puts "RM-info: Running create_placement -incremental -timing_driven -congestion"
		# Note: to increase the congestion alleviation effort, add -congestion_effort high
		create_placement -incremental -timing_driven -congestion
		save_block -as ${DESIGN_NAME}/${PLACE_OPT_BLOCK_NAME}_two_pass_placement

		puts "RM-info: Running place_opt -from initial_drc"
		place_opt -from initial_drc
	} 

	## Flow with SPG inputs ($PLACE_OPT_SPG_FLOW set to true)
	if {$PLACE_OPT_SPG_FLOW} {
		puts "RM-info: Running place_opt with place_opt.flow.do_spg true"
		set_app_options -name place_opt.flow.do_spg -value true 
		place_opt
	}
}
RM-info: Running place_opt -from initial_place -to initial_place
Error: Design has no site rows. (LGL-011)
Information: Running auto PG connection. (NDM-099)
Error: 0
      	Use error_info for more info. (CMD-013)
##########################################################################################
## Post-place_opt customizations
##########################################################################################
if {[file exists [which $TCL_USER_PLACE_OPT_POST_SCRIPT]]} {
	puts "RM-info: Sourcing [which $TCL_USER_PLACE_OPT_POST_SCRIPT]"
	source -echo $TCL_USER_PLACE_OPT_POST_SCRIPT
} elseif {$TCL_USER_PLACE_OPT_POST_SCRIPT != ""} {
	puts "RM-error:TCL_USER_PLACE_OPT_POST_SCRIPT($TCL_USER_PLACE_OPT_POST_SCRIPT) is invalid. Please correct it."
}
## Spare cell insertion after place_opt (Example: templates/place_opt.spare_cell.tcl)
if {[file exists [which $TCL_USER_SPARE_CELL_POST_SCRIPT]]} {
	puts "RM-info: Sourcing [which $TCL_USER_SPARE_CELL_POST_SCRIPT]"
	source $TCL_USER_SPARE_CELL_POST_SCRIPT
} elseif {$TCL_USER_SPARE_CELL_POST_SCRIPT != ""} {
	puts "RM-error: TCL_USER_SPARE_CELL_POST_SCRIPT($TCL_USER_SPARE_CELL_POST_SCRIPT) is invalid. Please correct it."
}
##########################################################################################
## connect_pg_net
##########################################################################################
if {$TCL_USER_CONNECT_PG_NET_SCRIPT != ""} {
	if {[file exists [which $TCL_USER_CONNECT_PG_NET_SCRIPT]]} {
		puts "RM-info: Sourcing [which $TCL_USER_CONNECT_PG_NET_SCRIPT]"
  		source $TCL_USER_CONNECT_PG_NET_SCRIPT
	} else {
		puts "RM-error: TCL_USER_CONNECT_PG_NET_SCRIPT($TCL_USER_CONNECT_PG_NET_SCRIPT) is invalid. Please correct it."
	}
} else {
	connect_pg_net
}
****************************************
Report : Power/Ground Connection Summary
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:03:43 2019
****************************************
P/G net name                  P/G pin count(previous/current)
--------------------------------------------------------------------------------
Power net VDD                 0/0
Ground net VSS                0/0
--------------------------------------------------------------------------------
Information: connections of 0 power/ground pin(s) are created or changed.
## Save block
save_block
Information: Saving block 'xbar:xbar/place_opt.design'
1
##########################################################################################
## Create abstract and frame
##########################################################################################
## Enabled for hierarchical designs; for bottom and intermediate levels of physical hierarchy
if {$DESIGN_STYLE == "hier"} {
	if {$USE_ABSTRACTS_FOR_POWER_ANALYSIS == "true"} {
		set_app_options -name abstract.annotate_power -value true
	}
	if { $PHYSICAL_HIERARCHY_LEVEL == "bottom" } {
	   	create_abstract -read_only
                create_frame -block_all true
	} elseif { $PHYSICAL_HIERARCHY_LEVEL == "intermediate"} {
            if { $ABSTRACT_TYPE_FOR_MPH_BLOCKS == "nested"} { 
                ## Create nested abstract for the intermediate level of physical hierarchy
	   	create_abstract -read_only
                create_frame -block_all true
            } elseif { $ABSTRACT_TYPE_FOR_MPH_BLOCKS == "flattened"} {
                ## Create flattened abstract for the intermediate level of physical hierarchy
                create_abstract -read_only -preserve_block_instances false
                create_frame -block_all true
            }
	}
}
##########################################################################################
## Report and output
##########################################################################################
if {$REPORT_QOR} {source report_qor.tcl}
RM-info: Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/report_qor.tcl

RM-info: Reporting clock tree information and QoR ...

 Info: Initializing timer in CLOCK_SYN_REPORT_MODE
Warning: no valid parasitic for mode_norm.slow.RCmax corner(LATE) (NEX-018)
Warning: no valid parasitic for mode_norm.slow.RCmax corner(EARLY) (NEX-018)
Warning: no valid parasitic for mode_norm.slow.RCmax_bc corner(LATE) (NEX-018)
Warning: no valid parasitic for mode_norm.slow.RCmax_bc corner(EARLY) (NEX-018)
Warning: no valid parasitic for mode_norm.worst_low.RCmax corner(LATE) (NEX-018)
Warning: no valid parasitic for mode_norm.worst_low.RCmax corner(EARLY) (NEX-018)
Warning: no valid parasitic for mode_norm.worst_low.RCmax_bc corner(LATE) (NEX-018)
Warning: no valid parasitic for mode_norm.worst_low.RCmax_bc corner(EARLY) (NEX-018)
Warning: no valid parasitic for mode_norm.fast.RCmin corner(LATE) (NEX-018)
Warning: no valid parasitic for mode_norm.fast.RCmin corner(EARLY) (NEX-018)
Warning: no valid parasitic for mode_norm.fast.RCmin_bc corner(LATE) (NEX-018)
Warning: no valid parasitic for mode_norm.fast.RCmin_bc corner(EARLY) (NEX-018)
Warning: no valid parasitic for (all corners) corner((both specs)) (NEX-018)
Information: The stitching and editing of coupling caps is turned ON for design 'xbar:xbar/place_opt.design'. (TIM-125)
Warning: No physical information exists for design 'xbar'. Zero interconnect delay is used in timing analysis. (TIM-101)
Warning: The extractor can not be initialized for design 'xbar'. Zero interconnect delay is used in timing analysis. (TIM-102)
Information: Crosstalk analysis has been disabled. (TIM-114)
Information: Update timing completed net estimation for all the timing graph nets (TIM-111)
Information: Net estimation statistics: timing graph nets = 530, routed nets = 0, across physical hierarchy nets = 0, parasitics cached nets = 0, delay annotated nets = 0, parasitics annotated nets = 0, multi-voltage nets = 0. (TIM-112)
************************************************************
Timer Settings:
Delay Calculation Style:                   auto
Signal Integrity Analysis:                 enabled
Timing Window Analysis:                    enabled
Advanced Waveform Propagation:             disabled
Variation Type:                            fixed_derate
Clock Reconvergence Pessimism Removal:     enabled
Advanced Receiver Model:                   disabled
************************************************************
Warning: The scenario mode_norm.fast.RCmin has max transition DRC fixing disabled using the set_scenario_status command.  High DRC count may be expected.
Warning: The scenario mode_norm.fast.RCmin has max capacitance DRC fixing disabled using the set_scenario_status command.  High DRC count may be expected.
****************************************
Report : clock qor
        -type summary
        -nosplit
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:03:43 2019
****************************************

Attributes
===========
M Master Clock
G Generated Clock
& Internal Generated Clock
U User Defined Skew Group
D Default Skew Group
* Generated Clock Balanced Separately

===========================================================
==== Summary Reporting for Corner mode_norm.fast.RCmin ====
===========================================================

========================================== Summary Table for Corner mode_norm.fast.RCmin ===========================================
Clock /                               Attrs     Sinks Levels    Clock     Clock     Clock       Max    Global  Trans DRC  Cap DRC
Skew Group                                                   Repeater  Repeater   Stdcell   Latency      Skew     Count     Count
                                                                Count      Area      Area
------------------------------------------------------------------------------------------------------------------------------------
### Mode: mode_norm.fast.RCmin, Scenario: mode_norm.fast.RCmin
clk                                     M,D         0      0        0      0.00      0.00        --        --         0         0
------------------------------------------------------------------------------------------------------------------------------------
All Clocks                                          0      0        0      0.00      0.00        --        --         0         0


Warning: The scenario mode_norm.fast.RCmin_bc has max transition DRC fixing disabled using the set_scenario_status command.  High DRC count may be expected.
Warning: The scenario mode_norm.fast.RCmin_bc has max capacitance DRC fixing disabled using the set_scenario_status command.  High DRC count may be expected.
==============================================================
==== Summary Reporting for Corner mode_norm.fast.RCmin_bc ====
==============================================================

========================================= Summary Table for Corner mode_norm.fast.RCmin_bc =========================================
Clock /                               Attrs     Sinks Levels    Clock     Clock     Clock       Max    Global  Trans DRC  Cap DRC
Skew Group                                                   Repeater  Repeater   Stdcell   Latency      Skew     Count     Count
                                                                Count      Area      Area
------------------------------------------------------------------------------------------------------------------------------------
### Mode: mode_norm.fast.RCmin_bc, Scenario: mode_norm.fast.RCmin_bc
clk                                     M,D         0      0        0      0.00      0.00        --        --         0         0
------------------------------------------------------------------------------------------------------------------------------------
All Clocks                                          0      0        0      0.00      0.00        --        --         0         0


===========================================================
==== Summary Reporting for Corner mode_norm.slow.RCmax ====
===========================================================

========================================== Summary Table for Corner mode_norm.slow.RCmax ===========================================
Clock /                               Attrs     Sinks Levels    Clock     Clock     Clock       Max    Global  Trans DRC  Cap DRC
Skew Group                                                   Repeater  Repeater   Stdcell   Latency      Skew     Count     Count
                                                                Count      Area      Area
------------------------------------------------------------------------------------------------------------------------------------
### Mode: mode_norm.slow.RCmax, Scenario: mode_norm.slow.RCmax
clk                                     M,D         0      0        0      0.00      0.00        --        --         0         0
------------------------------------------------------------------------------------------------------------------------------------
All Clocks                                          0      0        0      0.00      0.00        --        --         0         0


================================================================
==== Summary Reporting for Corner mode_norm.worst_low.RCmax ====
================================================================

======================================== Summary Table for Corner mode_norm.worst_low.RCmax ========================================
Clock /                               Attrs     Sinks Levels    Clock     Clock     Clock       Max    Global  Trans DRC  Cap DRC
Skew Group                                                   Repeater  Repeater   Stdcell   Latency      Skew     Count     Count
                                                                Count      Area      Area
------------------------------------------------------------------------------------------------------------------------------------
### Mode: mode_norm.worst_low.RCmax, Scenario: mode_norm.worst_low.RCmax
clk                                     M,D         0      0        0      0.00      0.00        --        --         0         0
------------------------------------------------------------------------------------------------------------------------------------
All Clocks                                          0      0        0      0.00      0.00        --        --         0         0


1
Dispatching command : 'report_clock_qor -type latency -show_paths -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.latency
Dispatching command : 'report_clock_qor -type area -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.cell_area
Dispatching command : 'report_clock_qor -type structure -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.structure
Dispatching command : 'report_clock_qor -type drc_violators -all -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.drc_violators
Waiting for all dispatched commands to complete ...
Done.

All command runs are done. Below is the status.

Completed 'report_clock_qor -type latency -show_paths -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.latency'

Completed 'report_clock_qor -type area -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.cell_area'

Completed 'report_clock_qor -type structure -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.structure'

Completed 'report_clock_qor -type drc_violators -all -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.drc_violators'

RM-info: Running report_clock_qor -type power ...

RM-info: Reporting timing constraints ...

Dispatching command : 'report_mode -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_mode
Dispatching command : 'report_pvt -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_pvt
Waiting for all dispatched commands to complete ...
Done.

All command runs are done. Below is the status.

Completed 'report_mode -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_mode'

Completed 'report_pvt -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_pvt'

RM-info: Reporting timing and QoR ...

****************************************
Report : qor
        -summary
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:03:49 2019
****************************************
Information: Timer using 'SI, Timing Window Analysis, CRPR'. (TIM-050)

Timing
---------------------------------------------------------------------------
Context                                 WNS            TNS            NVE
---------------------------------------------------------------------------
mode_norm.slow.RCmax (Setup)             --           0.00              0
mode_norm.worst_low.RCmax (Setup)             --           0.00              0
Design             (Setup)               --           0.00              0

mode_norm.fast.RCmin_bc (Hold)             --           0.00              0
Design             (Hold)                --           0.00              0
---------------------------------------------------------------------------

Miscellaneous
---------------------------------------------------------------------------
Cell Area (netlist):                              0.00
Cell Area (netlist and physical only):            0.00
Nets with DRC Violations:        0
1
Information: Timer using 'SI, Timing Window Analysis, CRPR'. (TIM-050)
****************************************
Report : global timing
        -format { narrow }
        -report_by design
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:03:49 2019
****************************************

No setup violations found.


No hold violations found.


1
RM-info: Analyzing design violations ...


****************************************
Report : Violation analysis
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:03:49 2019
****************************************

START_CMD: analyze_design_violations CPU:      8 s ( 0.00 hr) ELAPSE:     14 s ( 0.00 hr) MEM-PEAK:   211 Mb Thu Sep 12 22:03:49 2019
Error: Cannot find buffer or inverter with valid delay for all corners.
Error: There is no default lib buffers/inverts found for the design xbar. (OPT-206)
END_CMD: analyze_design_violations CPU:      8 s ( 0.00 hr) ELAPSE:     14 s ( 0.00 hr) MEM-PEAK:   219 Mb Thu Sep 12 22:03:49 2019
RM-info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/report_qor.tcl

print_message_info -ids * -summary

Id             Severity         Limit    Occurrences   Suppressed
--------------------------------------------------------------------
CMD-013           Error             0              1            0
CTS-038         Warning             0              1            0
CTS-101     Information             0              1            0
CTS-118           Error             0              1            0
DES-025     Information             0              1            0
FILE-007    Information             0              1            0
LGL-011           Error             0              1            0
LNK-063         Warning             0              1            0
LNK-064         Warning             0              1            0
LNK-074     Information             0              1            0
LNK-081           Error             0             11            0
NDM-099     Information             0              1            0
NEX-018         Warning             0             13            0
OPT-206           Error             0              1            0
POW-024     Information            10              1            0
POW-052     Information            10              1            0
PVT-014         Warning             0             12            0
PVT-032     Information             0              6            0
SEC-51            Error             0              2            0
SEL-003         Warning             0              2            0
SEL-004         Warning             0              1            0
SEL-005           Error             0              3            0
TIM-050     Information             0              4            0
TIM-101         Warning             0              1            0
TIM-102         Warning             0              1            0
TIM-111     Information             0              1            0
TIM-112     Information             0              1            0
TIM-114     Information             0              1            0
TIM-125     Information             0              1            0
UIC-058         Warning             0              4            0

Diagnostics summary: 20 errors, 37 warnings, 21 informationals
echo [date] > place_opt 
exit
Maximum memory usage for this session: 219.22 MB
CPU usage for this session:      7 seconds (  0.00 hours)
Elapsed time for this session:     13 seconds (  0.00 hours)
Thank you for using IC Compiler II.
