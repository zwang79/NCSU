


                              IC Compiler II (TM)

             Version P-2019.03-SP1 for linux64 - Apr 25, 2019 -SLE

                    Copyright (c) 1988 - 2019 Synopsys, Inc.
   This software and the associated documentation are proprietary to Synopsys,
 Inc. This software may only be used in accordance with the terms and conditions
 of a written license agreement with Synopsys, Inc. All other use, reproduction,
            or distribution of this software is strictly prohibited.

##########################################################################################
# Tool: IC Compiler II
# Script: chip_finish.tcl
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
source -echo ./rm_setup/icc2_pnr_setup.tcl 
puts "RM-info : Running script [info script]\n"
RM-info : Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_setup/icc2_pnr_setup.tcl

##########################################################################################
# Tool: IC Compiler II
# Script: icc2_pnr_setup.tcl
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
source -echo ./rm_setup/icc2_common_setup.tcl 
# source -echo -verbose /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/dcrm/rm_setup/common_setup.tcl
source -echo -verbose ../dcrm/rm_setup/common_setup.tcl
puts "RM-Info: Running script [info script]\n"
RM-Info: Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/dcrm/rm_setup/common_setup.tcl

set TECH_HOME "/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech"
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech
set STDCELL_HOME "${TECH_HOME}/nangate/NanGate_15nm_OCL_v0.1_2014_06.A"
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/nangate/NanGate_15nm_OCL_v0.1_2014_06.A
##########################################################################################
# Variables common to all reference methodology scripts
# Script: common_setup.tcl
# Version: P-2019.03-SP2 
# Copyright (C) 2007-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
set DESIGN_NAME                   "xbar"  ;#  The name of the top-level design
xbar
set DESIGN_REF_DATA_PATH          "./src/rtl"  ;#  Absolute path prefix variable for library/design data.
./src/rtl
#  Use this variable to prefix the common absolute path  
#  to the common variables defined below.
#  Absolute paths are mandatory for hierarchical 
#  reference methodology flow.
##########################################################################################
# Hierarchical Flow Design Variables
##########################################################################################
set HIERARCHICAL_DESIGNS           "" ;# List of hierarchical block design names "DesignA DesignB" ...
set HIERARCHICAL_CELLS             "" ;# List of hierarchical block cell instance names "u_DesignA u_DesignB" ...
##########################################################################################
# Library Setup Variables
##########################################################################################
# For the following variables, use a blank space to separate multiple entries.
# Example: set TARGET_LIBRARY_FILES "lib1.db lib2.db lib3.db"
set ADDITIONAL_SEARCH_PATH        "./src/rtl"  ;#  Additional search path to be added to the default search path
./src/rtl
set TARGET_LIBRARY_FILES          ""  ;#  Target technology logical libraries
append TARGET_LIBRARY_FILES "   ${STDCELL_HOME}/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_fast_conditional_ccs.db   ${STDCELL_HOME}/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_low_temp_conditional_ccs.db   ${STDCELL_HOME}/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_slow_conditional_ccs.db   ${STDCELL_HOME}/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_worst_low_conditional_ccs.db "
   /afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/nangate/NanGate_15nm_OCL_v0.1_2014_06.A/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_fast_conditional_ccs.db   /afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/nangate/NanGate_15nm_OCL_v0.1_2014_06.A/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_low_temp_conditional_ccs.db   /afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/nangate/NanGate_15nm_OCL_v0.1_2014_06.A/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_slow_conditional_ccs.db   /afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/nangate/NanGate_15nm_OCL_v0.1_2014_06.A/front_end/timing_power_noise/CCS/NanGate_15nm_OCL_worst_low_conditional_ccs.db 
set ADDITIONAL_LINK_LIB_FILES     ""  ;#  Extra link logical libraries not included in TARGET_LIBRARY_FILES
set MIN_LIBRARY_FILES             ""  ;#  List of max min library pairs "max1 min1 max2 min2 max3 min3"...
set MW_REFERENCE_LIB_DIRS         "${TECH_HOME}/ece720/Nangate_15nm_OCL_Milkyway_v2014_06/Nangate_15nm_OCL_v2014_06"  ;#  Milkyway reference libraries (include IC Compiler ILMs here)
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/ece720/Nangate_15nm_OCL_Milkyway_v2014_06/Nangate_15nm_OCL_v2014_06
set MW_REFERENCE_CONTROL_FILE     ""  ;#  Reference Control file to define the Milkyway reference libs
set TECH_FILE                     "${TECH_HOME}/ece720/Nangate_15nm_OCL_Milkyway_v2014_06/FreePDK15.tf"  ;#  Milkyway technology file
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/ece720/Nangate_15nm_OCL_Milkyway_v2014_06/FreePDK15.tf
set MAP_FILE                      "${TECH_HOME}/ece720/FreePDK15_star_rcxt/layer.map"  ;#  Mapping file for TLUplus
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/ece720/FreePDK15_star_rcxt/layer.map
set TLUPLUS_MAX_FILE              "${TECH_HOME}/ece720/FreePDK15_star_rcxt/FreePDK15_RCmax.tluplus"  ;#  Max TLUplus file
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/ece720/FreePDK15_star_rcxt/FreePDK15_RCmax.tluplus
set TLUPLUS_MIN_FILE              "${TECH_HOME}/ece720/FreePDK15_star_rcxt/FreePDK15_Cmin.tluplus"  ;#  Min TLUplus file
/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/ece720/FreePDK15_star_rcxt/FreePDK15_Cmin.tluplus
set MIN_ROUTING_LAYER            "M1"   ;# Min routing layer
M1
set MAX_ROUTING_LAYER            "MINT3"   ;# Max routing layer
MINT3
set LIBRARY_DONT_USE_FILE        ""   ;# Tcl file with library modifications for dont_use
set LIBRARY_DONT_USE_PRE_COMPILE_LIST ""; #Tcl file for customized don't use list before first compile
set LIBRARY_DONT_USE_PRE_INCR_COMPILE_LIST "";# Tcl file with library modifications for dont_use before incr compile
##########################################################################################
# Multivoltage Common Variables
#
# Define the following multivoltage common variables for the reference methodology scripts 
# for multivoltage flows. 
# Use as few or as many of the following definitions as needed by your design.
##########################################################################################
set PD1                          ""           ;# Name of power domain/voltage area  1
set VA1_COORDINATES              {}           ;# Coordinates for voltage area 1
set MW_POWER_NET1                "VDD1"       ;# Power net for voltage area 1
VDD1
set PD2                          ""           ;# Name of power domain/voltage area  2
set VA2_COORDINATES              {}           ;# Coordinates for voltage area 2
set MW_POWER_NET2                "VDD2"       ;# Power net for voltage area 2
VDD2
set PD3                          ""           ;# Name of power domain/voltage area  3
set VA3_COORDINATES              {}           ;# Coordinates for voltage area 3
set MW_POWER_NET3                "VDD3"       ;# Power net for voltage area 3
VDD3
set PD4                          ""           ;# Name of power domain/voltage area  4
set VA4_COORDINATES              {}           ;# Coordinates for voltage area 4
set MW_POWER_NET4                "VDD4"       ;# Power net for voltage area 4
VDD4
puts "RM-Info: Completed script [info script]\n"
RM-Info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/dcrm/rm_setup/common_setup.tcl

puts "RM-info : Running script [info script]\n"
RM-info : Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_setup/icc2_common_setup.tcl

set TECH_HOME "/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech"
set DCRM_RESULTS_DIR "../dcrm/results"
##########################################################################################
# Tool: IC Compiler II
# Script: icc2_common_setup.tcl
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
##########################################################################################
## Required variables
## These variables must be correctly filled in for the flow to run properly
##########################################################################################
set DESIGN_NAME 		"xbar" ;# Required; name of the design to be worked on; also used as the block name when scripts save or copy a block
set LIBRARY_SUFFIX		"" ;# Suffix for the design library name ; default is unspecified   
set DESIGN_LIBRARY 		"${DESIGN_NAME}${LIBRARY_SUFFIX}" ;# Name of the design library; default is ${DESIGN_NAME}${LIBRARY_SUFFIX}
set REFERENCE_LIBRARY 		"${TECH_HOME}/ece720/Nangate_15nm_OCL_ICC2_LibPrep_v2014_06/icc2_cell_lib/NanGate_15nm_OCL.ndm"	;# Required; a list of reference libraries for the design library.
;#	for library configuration flow (LIBRARY_CONFIGURATION_FLOW set to true below): 
;#		- specify the list of physical source files to be used for library configuration during create_lib
;# 	for hierarchical designs using bottom-up flows: include subblock design libraries in the list;
;# 	for hierarchical designs using ETMs: include the ETM library in the list.
;# 		- If unpack_rm_dirs.pl is used to create dir structures for hierarchical designs, 
;#		  in order to transition between hierarchical DP and hierarchical PNR flows properly, 
;#		  absolute paths are a requirement.
set COMPRESS_LIBS               "false" ;# Save libs as compressed NDM; only used in DP.
set VERILOG_NETLIST_FILES	"${DCRM_RESULTS_DIR}/xbar.mapped.v"	;# Verilog netlist files;
;# 	for DP: required
;# 	for PNR: required if INIT_DESIGN_INPUT is ASCII in icc2_pnr_setup.tcl; not required for DC_ASCII or DP_RM_NDM
set UPF_FILE 			""	;# A UPF file
;# 	for DP: required
;# 	for PNR: required if INIT_DESIGN_INPUT is ASCII in icc2_pnr_setup.tcl; not required for DC_ASCII or DP_RM_NDM
;#          for hierarchical designs using ETMs, load the block upf file
;#          for each sub-block linked to ETM, include the following line in the UPF_FILE 
;#              load_upf block.upf -scope block_instance_name
set UPF_SUPPLEMENTAL_FILE	""      ;# The supplemental UPF file. Only needed if you are running golden UPF flow, in which case, you need both UPF_FILE and this.
;# 	for DP: required
;# 	for PNR: required if INIT_DESIGN_INPUT is ASCII in icc2_pnr_setup.tcl; not required for DC_ASCII or DP_RM_NDM
;#	    If UPF_SUPPLEMENTAL_FILE is specified, scripts assume golden UPF flow. load_upf and save_upf commands will be different.	
set TCL_PARASITIC_SETUP_FILE	""	;# Specify a Tcl script to read in your TLU+ files by using the read_parasitic_tech command;
;# refer to the example in templates/init_design.read_parasitic_tech_example.tcl 
set TCL_MCMM_SETUP_FILE		"${DCRM_RESULTS_DIR}/ICC2_files/xbar.MCMM/top.tcl"	;# Specify a Tcl script to create your corners, modes, scenarios and load respective constraints;
;# two examples are provided in templates/: 
;# init_design.mcmm_example.explicit.tcl: provide mode, corner, and scenario constraints; create modes, corners, 
;# and scenarios; source mode, corner, and scenario constraints, respectively 
;# init_design.mcmm_example.auto_expanded.tcl: provide constraints for the scenarios; create modes, corners, 
;# and scenarios; source scenario constraints which are then expanded to associated modes and corners
;# 	for DP: required
;# 	for PNR: required if INIT_DESIGN_INPUT is ASCII in icc2_pnr_setup.tcl; not required for DC_ASCII or DP_RM_NDM
set TECH_FILE 			"${TECH_HOME}/ece720/Nangate_15nm_OCL_Milkyway_v2014_06/FreePDK15.tf" 	;# A technology file; TECH_FILE and TECH_LIB are mutually exclusive ways to specify technology information; 
;# TECH_FILE is recommended, although TECH_LIB is also supported in ICC2 RM. 
set TECH_LIB			""	;# Specify the reference library to be used as a dedicated technology library;
;# as a best practice, please list it as the first library in the REFERENCE_LIBRARY list 
set TECH_LIB_INCLUDES_TECH_SETUP_INFO true 
;# Indicate whether TECH_LIB contains technology setup information such as routing layer direction, offset, 
;# site default, and site symmetry, etc. TECH_LIB may contain this information if loaded during library prep.
;# true|false; this variable is associated with TECH_LIB. 
set TCL_TECH_SETUP_FILE		"init_design.tech_setup.tcl"
;# Specify a TCL script for setting routing layer direction, offset, site default, and site symmetry list, etc.
;# init_design.tech_setup.tcl is the default. Use it as a template or provide your own script.
;# This script will only get sourced if the following conditions are met: 
;# (1) TECH_FILE is specified (2) TECH_LIB is specified && TECH_LIB_INCLUDES_TECH_SETUP_INFO is false 
set ROUTING_LAYER_DIRECTION_OFFSET_LIST "   {M1 vertical 0.0}   {MINT1 horizontal 0.0}   {MINT2 vertical 0.0}   {MINT3 horizontal 0.0}   {MINT4 vertical 0.0}   {MINT5 horizontal 0.0}   {MSMG1 vertical 0.0}   {MSMG2 horizontal 0.0}   {MSMG3 vertical 0.0}   {MSMG4 horizontal 0.0}   {MSMG5 vertical 0.0}   {MG1 horizontal 0.0}   {MG2 vertical 0.0} "
;# Specify the routing layers as well as their direction and offset in a list of space delimited pairs;
;# This variable should be defined for all metal routing layers in technology file;
;# Syntax is "{metal_layer_1 direction offset} {metal_layer_2 direction offset} ...";
;# It is required to at least specify metal layers and directions. Offsets are optional. 
;# Example1 is with offsets specified: "{M1 vertical 0.2} {M2 horizontal 0.0} {M3 vertical 0.2}"
;# Example2 is without offsets specified: "{M1 vertical} {M2 horizontal} {M3 vertical}"
##########################################################################################
## Optional variables
## Specify these variables if the corresponding functions are desired 
##########################################################################################
set DESIGN_LIBRARY_SCALE_FACTOR	"1000"	;# Specify the length precision for the library. Length precision for the design
;# library and its ref libraries must be identical. Tool default is 10000, which
;# implies one unit is one Angstrom or 0.1nm.
set UPF_UPDATE_SUPPLY_SET_FILE	""	;# A UPF file to resolve UPF supply sets
set DEF_FLOORPLAN_FILES		""	;# DEF files which contain the floorplan information;
;# 	for DP: not required
;# 	for PNR: required if INIT_DESIGN_INPUT = ASCII in icc2_pnr_setup.tcl and neither TCL_FLOORPLAN_FILE or 
;#		 initialize_floorplan is used; DEF_FLOORPLAN_FILES and TCL_FLOORPLAN_FILE are mutually exclusive;
;# 	         not required if INIT_DESIGN_INPUT = DC_ASCII or DP_RM_NDM
set DEF_SCAN_FILE		""	;# A scan DEF file for scan chain information;
;# 	for PNR: not required if INIT_DESIGN_INPUT = DC_ASCII or DP_RM_NDM, as SCANDEF is expected to be loaded already
set DEF_SITE_NAME_PAIRS		{}	;# A list of site name pairs for read_def -convert; 
;# specify site name pairs with from_site first followed by to_site;
;# Example: set DEF_SITE_NAME_PAIRS {{from_site_1 to_site_1} {from_site_2 to_site_2}} 	
set SITE_DEFAULT		""	;# Specify the default site name if there are multiple site defs in the technology file;
;# this is to be used by initialize_floorplan command; example: set SITE_DEFAULT "unit";
;# this is applied in the init_design.tech_setup.tcl script 
set SITE_SYMMETRY_LIST	""		;# Specify a list of site def and its symmetry value;
;# this is to be used by read_def or initialize_floorplan command to control the site symmetry;
;# example: set SITE_SYMMETRY_LIST "{unit Y} {unit1 Y}"; this is applied in the init_design.tech_setup.tcl script 
set MIN_ROUTING_LAYER		"M1"	;# Min routing layer name; normally should be specified; otherwise tool can use all metal layers
set MAX_ROUTING_LAYER		"MINT3"	;# Max routing layer name; normally should be specified; otherwise tool can use all metal layers
set LIBRARY_CONFIGURATION_FLOW	false	;# Set it to true enables library configuration flow which calls the library manager under the hood to generate .nlibs, 
;# save them to disk, and automatically link them to the design.
;# Requires LINK_LIBRARY to be specified with .db files and REFERENCE_LIBRARY to be specified with physical
;# source files for the library configuration flow. Also search_path (in icc2_pnr_setup.tcl) should include paths 
;# to these .db and physical source files.
set LINK_LIBRARY		""	;# Specify .db files;
;# 	for running VC-LP (vc_lp.tcl) and Formality (fm.tcl): required
;# 	for ICC-II without LIBRARY_CONFIGURATION_FLOW enabled: not required
;#	for ICC-II with LIBRARY_CONFIGURATION_FLOW enabled: required; 
;#      	- the .db files specified will be used for the library configuration under the hood during create_lib 
##########################################################################################
## Variables related to flow controls of flat PNR, hierarchical PNR and transition with DP
##########################################################################################
set DESIGN_STYLE		"flat"	;# Specify the design style; flat|hier; default is flat; 
;# specify flat for a totally flat flow (flat PNR for short) and 
;# specify hier for a hierarchical flow (hier PNR for short);
;# 	for hier PNR: required and auto set if unpack_rm_dirs.pl is used; (see README.unpack_rm_dirs.txt for details)
;# 	for flat PNR: this should set to flat (default)
;#	for DP: not used 
set PHYSICAL_HIERARCHY_LEVEL	"" 	;# Specify the current level of hierarchy for the hierarchical PNR flow; top|intermediate|bottom;
;# 	for hier PNR: required and auto set if unpack_rm_dirs.pl is used; (see README.unpack_rm_dirs.txt for details)
;# 	for flat PNR and for DP: not used.
set RELEASE_DIR_DP		"" 	;# Specify the release directory of DP RM; 
;# this is where init_design.tcl of PNR flow gets DP RM released libraries;
;# 	for hier PNR: required and auto set if unpack_rm_dirs.pl is used; (see README.unpack_rm_dirs.txt for details)
;# 	for flat PNR: required if INIT_DESIGN_INPUT = DP_RM_NDM, as init_design.tcl needs to know where DP RM libraries are
;#	for DP: not used 
set RELEASE_LABEL_NAME_DP 	"for_pnr"	
;# Specify the label name of the block in the DP RM released library;
;# this is the label name which init_design.tcl of PNR flow will open. 
set RELEASE_DIR_PNR		"" 	;# Specify the release directory of PNR RM; 
;# this is where the init_design.tcl of hierarchical PNR flow gets the sub-block libraries;	
;# 	for hier PNR: required and auto set if unpack_rm_dirs.pl is used; (see README.unpack_rm_dirs.txt for details)
;# 	for flat PNR and for DP: not used.
##########################################################################################
## Variables related to REDHAWK ANALYSIS FUSION
##########################################################################################
set REDHAWK_SEARCH_PATH		"" 	;# Required. Search path to the NDM, reference libraries, and etc.
puts "RM-info : Completed script [info script]\n"
RM-info : Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_setup/icc2_common_setup.tcl

########################################################################################## 
## Variables for init_design inputs (used by init_design.tcl)
##########################################################################################
set INIT_DESIGN_INPUT 		"DC_ASCII"	;# Specify one of the 3 options: ASCII | DC_ASCII | DP_RM_NDM; default is ASCII.
;# 1.ASCII: assumes all design input files are ASCII and will read them in individually.
;# 2.DC_ASCII: for design transfer from DC using the write_icc2_files command;
;#   sources ${DCRM_RESULTS_DIR}/${DCRM_FINAL_DESIGN_ICC2}/${DESIGN_NAME}.icc2_script.tcl;
;#   you can change the default of DC_RESULTS_DIR and DCRM_FINAL_DESIGN_ICC2 below;
;#   commonly used in combination with SPG flow (set PLACE_OPT_SPG_FLOW true below)  
;# 3.DP_RM_NDM: if ICC2-DP-RM is completed, you can take its NDM outputs and skip the design creation steps;
;#   for PNR flat (DESIGN_STYLE set to flat), script copies the design library from ICC2-DP-RM release 
;#   area (specified by RELEASE_DIR_DP) and opens design;    
;#   for PNR hier flow (DESIGN_STYLE set to hier), script will either copy design library 
;#   from ICC2-DP-RM release area or in addition to that, copy design library of the child blocks from PNR
;#   release area (specified by RELEASE_DIR_PNR), and then open design.
#set DCRM_RESULTS_DIR  		"./results" ;# used by DC_ASCII to specify DC-RM output directory. Default is results.   
;# (Rhett Davis) Moved this variable to icc2_common_setup.tcl for use with DP flow
set DCRM_FINAL_DESIGN_ICC2 	"ICC2_files" ;# output directory name generated by DC-RM's write_icc2_files command;
;# only valid if you specify DC_ASCII for INIT_DESIGN_INPUT;
;# The directory contains verilog, floorplan, scenario settings, and constraints from DC
;# in a format that IC Compiler II can source.    
set POCV_CORNER_FILE_MAPPING_LIST 	"" ;# a list of corner and its associated POCV file in pairs, as POCV is corner dependant;
;# same corner can have multiple corresponding files;
;# example: set POCV_CORNER_FILE_MAPPING_LIST "{corner1 file1a} {corner1 file1b} {corner2 file2}";
;# in the example, file1a and file1b will be loaded for corner1, file2 will be loaded for corner2.
;# Note: POCV_CORNER_FILE_MAPPING_LIST will take precedence if AOCV_CORNER_TABLE_MAPPING_LIST is also specified
set AOCV_CORNER_TABLE_MAPPING_LIST 	"" ;# a list of corner and its associated AOCV table in pairs, as AOCV is corner dependant;
;# same corner can have multiple corresponding tables;
;# example: set AOCV_CORNER_TABLE_MAPPING_LIST "{corner1 table1a} {corner1 table1b} {corner2 table2}";
;# in the example, table1a and table1b will be loaded for corner1, table2 will be loaded for corner2.
set TCL_PAD_CONSTRAINTS_FILE		"" ;# a Tcl script for your pad constraint commands used by place_io of 
;# templates/init_design.flat_design_planning_example.tcl sourced by init_design.tcl
set TCL_MV_SETUP_FILE			"" ;# a Tcl script placeholder for your MV setup commands,such as create_voltage_area, 
;# placement bound, power switch creation and level shifter insertion, etc;
;# refer to templates/init_design.power_switch_example.tcl for sample commands   
set TCL_PG_CREATION_FILE		"" ;# a Tcl script placeholder for your power ground network creation commands,
;# such as create_pg*, set_pg_strategy, compile_pg, etc;
set TCL_FLOORPLAN_FILE			"" ;# Tcl floorplan file written by the write_floorplan command; for example, floorplan/floorplan.tcl;
;# TCL_FLOORPLAN_FILE and DEF_FLOORPLAN_FILES are mutually exclusive; please specify only one of them;
;# Not effective if INIT_DESIGN_INPUT = DC_ASCII or DP_RM_NDM.
;# The write_floorplan command writes a floorplan.tcl Tcl script and a floorplan.def DEF file;
;# reading floorplan.tcl alone can restore the entire floorplan - refer to write_floorplan man for more details  
set TCL_ADDITIONAL_FLOORPLAN_FILE 	"" ;# a supplementary Tcl constraint file; sourced after DEF_FLOORPLAN_FILE or TCL_FLOORPLAN_FILE is read, 
;# or initialize_floorplan is done; can be used to cover additional floorplan constructs, 
;# such as bounds, pin guides, or route guides, etc; not valid if INIT_DESIGN_INPUT = DC_ASCII or DP_RM_NDM.
set TCL_USER_INIT_DESIGN_POST_SCRIPT ""	;# An optional Tcl file to be sourced at the very end of init_design.tcl before save_block.
########################################################################################## 
## Variables for constraints or settings that impact multiple steps (used across flow)
##########################################################################################
set TCL_PLACEMENT_SPACING_LABEL_RULE_FILE "" ;# A file to specify your placement spacing labels and rules.
;# Example : set_placement_spacing_label -name X -side both -lib_cells [get_lib_cells -of [get_cells]]
;# Example : set_placement_spacing_rule -labels {X SNPS_BOUNDARY} {0 1}
set SAIF_FILE				"" ;# Specify a SAIF file for accurate power computation for features such as
;# total power (opt.power.mode set to total) and enhanced low power placement (place.coarse.enhanced_low_power_effort).
;# sourced at the beginning of place_opt.tcl
set SAIF_FILE_POWER_SCENARIO		"" ;# SAIF_FILE related; specify a power scenario where the SAIF is to be applied
set SAIF_FILE_SOURCE_INSTANCE		"" ;# SAIF_FILE related; name of the instance of the current design as it appears in SAIF file.
set SAIF_FILE_TARGET_INSTANCE		"" ;# SAIF_FILE related; name of the target instance on which activity is to be annotated.
set OPTIMIZATION_FREEZE_PORT_LIST 	"" ;# List of cells (for ex, clock gen modules, or customized logics that should not be touched) to which freeze_clock_ports 
;# and freeze_data_ports attribute will be set to prevent optimization from modifying their port signature; 
;# especially useful if you do formal verification by modules. 
;# Sets opt.dft.hier_preservation to true and runs set_freeze_port -all on the specified cells.
set TCL_USER_CONNECT_PG_NET_SCRIPT ""	;# An optional Tcl file for customized connect_pg_net command and options, such as for bias pins of cells added by opto;
;# sourced by all the main scripts prior to the save_block command
# ---------------------------------
# Lib cell purpose restrictions
# ---------------------------------
set TCL_LIB_CELL_PURPOSE_FILE 		"set_lib_cell_purpose.tcl" ;# A Tcl file which applies lib cell purpose related restrictions;
;# You can specify it with your own customized script	
;# RM default is set_lib_cell_purpose.tcl which includes the following restrictions, each controlled by
;# an individual variable : dont use cells (TCL_LIB_CELL_DONT_USE_FILE), tie cells (TIE_LIB_CELL_PATTERN_LIST), 
;# hold fixing (HOLD_FIX_LIB_CELL_PATTERN_LIST), CTS (CTS_LIB_CELL_PATTERN_LIST) and CTS-exclusive cells (CTS_ONLY_LIB_CELL_PATTERN_LIST). 
## The following 5 *_LIB_CELL_* variables are only applicable if set_lib_cell_purpose.tcl is used for lib cell purpose restrictions.
#  If you do not plan to use set_lib_cell_purpose.tcl, specify TCL_LIB_CELL_PURPOSE_FILE with your own file and you don't have to specify the following variables.
set TCL_LIB_CELL_DONT_USE_FILE 		"" ;# A Tcl file for customized don't use ("set_lib_cell_purpose -exclude <purpose>" commands).
;# The file is to be sourced in set_lib_cell_purpose.tcl, which is the default script for handling lib cell 
;# purpose restrictions specified by the variable TCL_LIB_CELL_PURPOSE_FILE above.
;# It only takes effect if TCL_LIB_CELL_PURPOSE_FILE is set to the default value set_lib_cell_purpose.tcl
set TIE_LIB_CELL_PATTERN_LIST 		"" ;# A list of TIE lib cell patterns to be included for optimization;
;# Example : set TIE_LIB_CELL_PATTERN_LIST "*/TIE* */ttt*"
set HOLD_FIX_LIB_CELL_PATTERN_LIST 	"" ;# A list of hold time fixing lib cell patterns to be included only for hold
set CTS_LIB_CELL_PATTERN_LIST 		"" ;# List of CTS lib cell patterns to be used by CTS; 
;# please include repeaters, always-on repeaters (for MV-CTS), 
;# and gates (for sizing pre-existing gates)/always-on buffers;
;# Please also include flops as CCD can size flops to improve timing.
;# example : set CTS_LIB_CELL_PATTERN_LIST "*/NBUF* */AOBUF* */AOINV* */SDFF*"
set CTS_ONLY_LIB_CELL_PATTERN_LIST 	"" ;# List of CTS lib cell patterns to be used by CTS "exclusively", such as clock specific
;# buffers and inverters. Please be aware that these cells will be applied with only cts 
;# purpose and nothing else. If you want to use these lib cells for other purposes, 
;# such as optimization and hold, specify them in CTS_LIB_CELL_PATTERN_LIST instead
# ---------------------------------
# Clock NDR
# ---------------------------------
set TCL_CTS_NDR_RULE_FILE 		"cts_ndr.tcl" ;# Specify a script for clock NDR creation and association, to be sourced at place_opt
;# By default the variable is set to cts_ndr.tcl, which is an RM provided example.
;# Important: to use the example script, you must also specify CTS_NDR_RULE_NAME, CTS_INTERNAL_NDR_RULE_NAME,
;# or CTS_LEAF_NDR_RULE_NAME (see below for details), otherwise the script won't do anything.
## Note: the CTS_*NDR* variables below are only applicable if TCL_CTS_NDR_RULE_FILE is set to the RM provided example script. 
## If you specify your own script for TCL_CTS_NDR_RULE_FILE, variables below will not be used.
## For root clock nets
set CTS_NDR_RULE_NAME			"" ;# Specify a clock NDR rule for root nets;
;# required for the example script to work on the root and internal nets.
;# Below are the 3 predefined rules supported:  
;# rm_2w2s : double width double spacing 
;# rm_2w2s_shield_default : double width double spacing + shielding with default width and spacing
;# rm_2w2s_shield_list : double width double spacing + shielding with customized per layer width and spacing
set CTS_NDR_SHIELDING_LAYER_WIDTH_LIST 	"" ;# A list of layer_name shield_width ,for ex, "M1 0.1 M2 0.1 M3 0.1";
;# required if you specify rm_2w2s_shield_list as CTS_NDR_RULE_NAME.
set CTS_NDR_SHIELDING_LAYER_SPACING_LIST "" ;# A list of layer_name shield_spacing, for ex, "M1 0.1 M2 0.1 M3 0.1";
;# required if you specify rm_2w2s_shield_list as CTS_NDR_RULE_NAME.
set CTS_NDR_MIN_ROUTING_LAYER		"" ;# Min routing layer for set_clock_routing_rules to which CTS_NDR_RULE_NAME is applied. 
set CTS_NDR_MAX_ROUTING_LAYER		"" ;# Max routing layer for set_clock_routing_rules to which CTS_NDR_RULE_NAME is applied.
## For internal clock nets (by default same values as with the root clock nets)
set CTS_INTERNAL_NDR_RULE_NAME		"$CTS_NDR_RULE_NAME" ;# Specify a clock NDR rule for internal nets; default is same as CTS_NDR_RULE_NAME;
;# required for the example script to work on the internal nets.
;# Below are the 3 predefined rules supported:  
;# rm_2w2s : double width double spacing 
;# rm_2w2s_shield_default : double width double spacing + shielding with default width and spacing
;# rm_2w2s_shield_list : double width double spacing + shielding with customized per layer width and spacing
set CTS_INTERNAL_NDR_SHIELDING_LAYER_WIDTH_LIST "$CTS_NDR_SHIELDING_LAYER_WIDTH_LIST" ;# A list of layer_name shield_width ,for ex, "M1 0.1 M2 0.1 M3 0.1";
;# required if you specify rm_2w2s_shield_list as CTS_INTERNAL_NDR_RULE_NAME.
set CTS_INTERNAL_NDR_SHIELDING_LAYER_SPACING_LIST "$CTS_NDR_SHIELDING_LAYER_SPACING_LIST" ;# A list of layer_name shield_spacing, for ex, "M1 0.1 M2 0.1 M3 0.1";
;# required if you specify rm_2w2s_shield_list as CTS_INTERNAL_NDR_RULE_NAME.
set CTS_INTERNAL_NDR_MIN_ROUTING_LAYER "$CTS_NDR_MIN_ROUTING_LAYER" ;# Min routing layer for set_clock_routing_rules to which CTS_INTERNAL_NDR_RULE_NAME is applied. 
set CTS_INTERNAL_NDR_MAX_ROUTING_LAYER "$CTS_NDR_MAX_ROUTING_LAYER" ;# Max routing layer for set_clock_routing_rules to which CTS_INTERNAL_NDR_RULE_NAME is applied.
## For leaf clock nets
set CTS_LEAF_NDR_RULE_NAME 		"" ;# Specify rm_leaf as the predefined rule for the example script to prepare a default rule for leaf nets
set CTS_LEAF_NDR_MIN_ROUTING_LAYER 	$CTS_NDR_MIN_ROUTING_LAYER ;# Min routing layer for set_clock_routing_rules to which rm_leaf is applied.
set CTS_LEAF_NDR_MAX_ROUTING_LAYER 	$CTS_NDR_MAX_ROUTING_LAYER ;# Max routing layer for set_clock_routing_rules to which rm_leaf is applied.
# ---------------------------------
# Preroute optimizations
# ---------------------------------
set PREROUTE_PLACEMENT_MAX_DENSITY	"" ;# specify a float value between 0 and 1; tool default unspecified; optional in RM;	
;# If specified, sets place.coarse.max_density to limit local density to be less than the value.
;# if unspecified, place.coarse.max_density remains at tool default 0; 
;# now if $PREROUTE_PLACEMENT_AUTO_DENSITY is also true, tool will auto determine a appropriate value; 
;# while if $PREROUTE_PLACEMENT_AUTO_DENSITY is false, tool will try to spread cells evenly
set PREROUTE_PLACEMENT_MAX_UTIL		"" ;# specify a float value between 0 and 1; tool default unspecified; optional in RM;
;# sets place.coarse.congestion_driven_max_util to control how densely the tool can pack cells in uncongested 
;# regions, in order to remove congestion in congested regions
;# if unspecified, place.coarse.congestion_driven_max_util remains at tool default 0.93
set PREROUTE_PLACEMENT_AUTO_DENSITY	true ;# true|false; tool default true; optional in RM to set it to false if you want to disable the feature; 
;# sets place.coarse.auto_density_control to control coarse placement automatic density control;
;# if you do not specify either of the above two settings (max density and max util) and keep the tool defaults, 
;# the automatic density control selects the value for max density and max util based on the design stage;
;# message PLACE-027 is issued to report the chosen settings
set PREROUTE_PLACEMENT_ENHANCED_AUTO_DENSITY false ;# false|true, tool default false; optional in RM;
;# sets place.coarse.enhanced_auto_density_control;
;# automaticlly selects max density based on the design stage as well as design utilization;
;# automatically selects max util based on the design stage as well as design tchnology
set PREROUTE_PLACEMENT_TARGET_ROUTING_DENSITY "" ;# specify a float value between 0 and 1; tool default unspecified; optional in RM;	
;# sets place.coarse.target_routing_density to control target routing density for congestion-driven placement; 
;# if left unspecified, place.coarse.target_routing_density remains at tool default 0 
set PREROUTE_PLACEMENT_PIN_DENSITY_AWARE false ;# false|true; tool default false; optional in RM;
;# sets app option place.coarse.pin_density_aware to control maximum local pin density;
set PREROUTE_NDR_OPTIMIZATION 		false ;# false|true, tool default false; optional in RM;
;# sets place_opt/clock_opt.flow.optimize_ndrs to true enables NDR optimization
set PREROUTE_CTS_POWER_AWARE_PRUNING	false ;# false|true; tool default false; RM default false;
;# sets cts.common.power_aware_pruning to allow selection of repeater cells to also consider 
;# internal and leakage power in order to reduce dynamic and also leakage power of the clock trees;
;# impacts place_opt trial CTS/optimize icgs and clock_opt build_clock phase 
set PREROUTE_CTS_LOW_POWER_TECHNIQUE	"" ;# gate_relocation|low_power_targets|all; RM default is unspecified;
;# impacts place_opt trial CTS/optimize icgs and clock_opt build_clock phase; 
;# gate_relocation: sets cts.compile.power_opt_mode to gate_relocation to enable activity aware gate 
;#                  relocation (moves cells with low input clock toggling rates closer to their drivers)
;#		    at the end of gate by gate clock tree synthesis;
;# low_power_targets: sets cts.compile.power_opt_mode to low_power_targets for CTS to relax certain
;#                    internal constraints and build clock trees with less area and power;
;# all: sets cts.compile.power_opt_mode to all to enable both the above features
########################################################################################## 
## Variables for the place_opt step (used by place_opt.tcl and settings.place_opt.tcl)
##########################################################################################
set PLACE_OPT_ACTIVE_SCENARIO_LIST	"" ;# A subset of scenarios to be made active during place_opt step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
;# include CTS scenarios if you are enabling CTS related features during place_opt,
;# such as PLACE_OPT_OPTIMIZE_ICGS, PLACE_OPT_TRIAL_CTS, or PLACE_OPT_MSCTS
set PLACE_OPT_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created by place_opt; default "" which means no user prefix
set TCL_USER_PLACE_OPT_PRE_SCRIPT 	"" ;# An optional Tcl file for place_opt.tcl to be sourced before place_opt.
set TCL_USER_PLACE_OPT_SCRIPT 		"" ;# An optional Tcl file for place_opt.tcl to replace pre-existing place_opt commands.
set TCL_USER_PLACE_OPT_POST_SCRIPT 	"" ;# An optional Tcl file for place_opt.tcl to be sourced after place_opt.
set PLACE_OPT_SPG_FLOW 			false ;# false|true; RM default false; set it to true to enable SPG input handling flow in place_opt.tcl;
;# which skips the first pass of the two-pass placement;
;# recommended to go with DC-ASCII inputs (set INIT_DESIGN_INPUT DC_ASCII)
set PLACE_OPT_TRIAL_CTS 		false ;# false|true; tool default false; optional in RM;
;# sets place_opt.flow.trial_clock_tree to enables early clock tree synthesis;
;# useful for low power placement and ICG optimization flow (PLACE_OPT_OPTIMIZE_ICGS). 
;# Propagated clocks will be used through-out place_opt flow.
;# Note: when PLACE_OPT_OPTIMIZE_ICGS is set to true, trial CTS will be automatically enabled, 
;# regardless of the setting of PLACE_OPT_TRIAL_CTS. So you don't have to manually enable it.
set PLACE_OPT_OPTIMIZE_ICGS 		false ;# false|true; tool default false; optional in RM;
;# sets place_opt.flow.optimize_icgs for place_opt to run automatic ICG optimization that performs trial CTS, 
;# timing-aware ICG splitting and clock-aware placement for critical enable paths.
;# The aggressiveness of splitting can be controlled by the PLACE_OPT_OPTIMIZE_ICGS_CRITICAL_RANGE. 
set PLACE_OPT_OPTIMIZE_ICGS_CRITICAL_RANGE "" ;# specify a value between 0 and 1; default unspecified; 
;# sets place_opt.flow.optimize_icgs_critical_range to the value specified; tool default is 0.75.
;# When set to X, only ICGs enable slack within {EN_WNS, EN_WNS*(1-X)} will be considered for splitting;
;# for example, 0.75 means only ICG with enable pin violations between 1*EN_WNS and 0.25*EN_WNS will be split,
;# while the ICG enable slack below 0.25*EN_WNS will be skipped. Larger value means more splitting. 
set PLACE_OPT_MERGE_ICGS		true ;# false|true; tool default true; optional in RM to set it to false;
;# sets place_opt.flow.merge_clock_gates to control whether the OBD ICG merging is enabled or not;
;# when set to true, ICG merging (merge_clock_gates) runs internally inside place_opt as a first step in initial_place stage;
set PLACE_OPT_ICG_AUTO_BOUND		false ;# false|true; tool default false; optional in RM;
;# sets place.coarse.icg_auto_bound to enable use of automatically created group bounds
set PLACE_OPT_CLOCK_AWARE_PLACEMENT	false ;# false|true; tool default false; optional in RM;
;# sets place_opt.flow.clock_aware_placement to guide placement with ICG's enable timing criticality; 
;# place_opt will try to improve ICG enable timing by placing the timing critical ICGs and their fanout cells 
;# at better locations for ICG enable paths.
;# Note: when PLACE_OPT_OPTIMIZE_ICGS is set to true, clock-aware placement will be automatically enabled, 
;# regardless of the setting of PLACE_OPT_CLOCK_AWARE_PLACEMENT. So you don't have to manually enable it.
set PLACE_OPT_MSCTS			false ;# false|true; enables MSCTS (regular) at place_opt step; requires TCL_REGULAR_MSCTS_FILE to be specified;
;# It runs in two parts: first part runs at place_opt step to source TCL_REGULAR_MSCTS_FILE;
;# second part runs at clock_opt_cts step, skips TCL_REGULAR_MSCTS_FILE, propagates clocks, and runs mesh simulation;
;# By default, the features runs in ideal clock mode. However if if PLACE_OPT_OPTIMIZE_ICGS or PLACE_OPT_TRIAL_CTS 
;# are also enabled, then propagated clocks will be used during the place_opt step;
;# If set to false (RM default), RM runs MSCTS only at clock_opt_cts step.
set PLACE_OPT_MSCTS_CRITICAL_SCENARIO	"" ;# Specify a scenario with worst RC and most visible sinks for place_opt MSCTS to base on;
;# script will record current scenario, switch to the specified scenario before MSCTS, and then
;# restore the original current scenario after MSCTS. Only valid if PLACE_OPT_MSCTS is set to true
set TCL_USER_SPARE_CELL_PRE_SCRIPT	"" ;# An optional Tcl file for spare cell insertion to be sourced before place_opt;
;# refer to templates/place_opt.spare_cell.tcl for an example
set TCL_USER_SPARE_CELL_POST_SCRIPT	"" ;# An optional Tcl file for spare cell insertion to be sourced after place_opt;
;# refer to templates/place_opt.spare_cell.tcl for an example
set TCL_NON_CLOCK_NDR_RULES_FILE 	"" ;# Specify a NDR rules file for signal nets (Clock NDR rules are specified by CTS_NDR_* variables above)
set PLACE_OPT_MULTIBIT_BANKING 		false ;# tool default false; optional in RM;
;# sets place_opt.flow.enable_multibit_banking to enable multibit banking during place_opt;
;# takes effect during place_opt initial_opto 
set PLACE_OPT_MULTIBIT_DEBANKING 	false ;# tool default false; optional in RM;
;# sets place_opt.flow.enable_multibit_debanking to enables multibit debanking during place_opt;
;# takes effect during place_opt final_opto
########################################################################################## 
## Variables for the clock_opt step 
## (used by settings.clock_opt_cts.tcl, clock_opt_cts.tcl, and clock_opt_opto.tcl)
##########################################################################################
set CLOCK_OPT_CTS_ACTIVE_SCENARIO_LIST  "" ;# A subset of scenarios to be made active during clock_opt_cts step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set CLOCK_OPT_CTS_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created by clock_opt build_clock; default "" which means no user prefix
set TCL_USER_CLOCK_OPT_CTS_PRE_SCRIPT 	"" ;# An optional Tcl file for clock_opt_cts.tcl to be sourced before clock_opt.
set TCL_USER_CLOCK_OPT_CTS_SCRIPT 	"" ;# An optional Tcl file for clock_opt_cts.tcl to replace pre-existing clock_opt commands.
set TCL_USER_CLOCK_OPT_CTS_POST_SCRIPT 	"" ;# An optional Tcl file for clock_opt_cts.tcl to be sourced after clock_opt.
set CLOCK_OPT_OPTO_ACTIVE_SCENARIO_LIST "" ;# A subset of scenarios to be made active during clock_opt_opto step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set CLOCK_OPT_OPTO_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created by clock_opt final_opto; default "" which means no user prefix
set TCL_USER_CLOCK_OPT_OPTO_PRE_SCRIPT 	"" ;# An optional Tcl file for clock_opt_opto.tcl to be sourced before clock_opt.
set TCL_USER_CLOCK_OPT_OPTO_SCRIPT 	"" ;# An optional Tcl file for clock_opt_opto.tcl to replace pre-existing clock_opt commands.
set TCL_USER_CLOCK_OPT_OPTO_POST_SCRIPT "" ;# An optional Tcl file for clock_opt_opto.tcl to be sourced after clock_opt.
set CLOCK_OPT_MSCTS_CRITICAL_SCENARIO	"" ;# Specify a scenario with worst RC and most visible sinks for MSCTS to base on;
;# script will record current scenario, switch to the specified scenario before MSCTS, and then
;# restore the original current scenario after MSCTS.
set TCL_REGULAR_MSCTS_FILE		"" ;# Specify a Tcl script for regular multisource clock tree synthesis setup and creation,
;# which will be sourced prior to the "place_opt" if PLACE_OPT_MSCTS is true in place_opt.tcl
;# and before "clock_opt -from build_clock -to route_clock" command in clock_opt_cts.tcl
;# RM provided script: mscts.regular.tcl
set TCL_STRUCTURAL_MSCTS_FILE		"" ;# Specify a Tcl script for structural multisource clock tree synthesis setup and creation,
;# which will be sourced prior to the "clock_opt -from build_clock -to route_clock" command
;# in clock_opt_cts.tcl;
;# RM provided script: mscts.structural.tcl
set PREROUTE_CTS_POWER_AWARE_PRUNING	false ;# false|true; tool default false; RM default false;
;# sets cts.common.power_aware_pruning to allow selection of repeater cells to also consider 
;# internal and leakage power in order to reduce dynamic and also leakage power of the clock trees 
set PREROUTE_CTS_LOW_POWER_TECHNIQUE	"" ;# gate_relocation|low_power_targets|all; RM default is unspecified;
;# gate_relocation: sets cts.compile.power_opt_mode to gate_relocation to enable activity aware gate 
;#                  relocation (moves cells with low input clock toggling rates closer to their drivers)
;#		    at the end of gate by gate clock tree synthesis;
;# low_power_targets: sets cts.compile.power_opt_mode to low_power_targets for CTS to relax certain
;#                    internal constraints and build clock trees with less area and power;
;# all: sets cts.compile.power_opt_mode to all to enable both the above features
set CLOCK_OPT_OPTO_CTO 			false ;# Default false; enables post-route clock tree optimization in clock_opt_opto.tcl
set CLOCK_OPT_OPTO_CTO_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created by CTO; default "" which means no user prefix
########################################################################################## 
## Variables for route_auto and route_opt related settings 
## (Used by settings.route_auto.tcl, settings.route_opt.tcl, route_auto.tcl, and route_opt.tcl)
##########################################################################################
set ROUTE_AUTO_ACTIVE_SCENARIO_LIST 	"" ;# A subset of scenarios to be made active during route_auto step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set ROUTE_AUTO_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created suring route_auto; default "" which means no user prefix
set TCL_USER_ROUTE_AUTO_PRE_SCRIPT 	"" ;# An optional Tcl file for route_auto.tcl to be sourced before route_auto.
set TCL_USER_ROUTE_AUTO_SCRIPT 		"" ;# An optional Tcl file for route_auto.tcl to replace pre-existing routing commands.
set TCL_USER_ROUTE_AUTO_POST_SCRIPT 	"" ;# An optional Tcl file for route_auto.tcl to be sourced after route_auto.
set ROUTE_OPT_ACTIVE_SCENARIO_LIST 	"" ;# A subset of scenarios to be made active during route_opt step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set ROUTE_OPT_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created during route_opt; default "" which means no user prefix
set TCL_USER_ROUTE_OPT_PRE_SCRIPT 	"" ;# An optional Tcl file for route_opt.tcl to be sourced before route_opt.
set TCL_USER_ROUTE_OPT_SCRIPT 		"" ;# An optional Tcl file for route_opt.tcl to replace pre-existing route_opt commands.
set TCL_USER_ROUTE_OPT_POST_SCRIPT 	"" ;# An optional Tcl file for route_opt.tcl to be sourced after route_opt.
set CLOCK_OPT_GLOBAL_ROUTE_OPT		false ;# false|true; tool default false; optional in RM; 
;# enables Global Route Based Optimization by setting clock_opt.flow.enable_global_route_opt 
;# and route_opt.flow.enable_power to true, sources routing settings, and runs clock_opt -from global_route_opt;
;# this feature is added to route_auto.tcl; if enabled, it replaces route_global command;
set ROUTE_AUTO_USE_SINGLE_COMMAND	false ;# false|true; runs route_auto command instead of atomic commands (route_global+route_track+route_detail with update_timing in between)
set REDUNDANT_VIA_INSERTION		false ;# false|true; tool default false; optional in RM; enables redundant via insertion for post-route;
;# if you choose ESTABLISHED for TECHNOLOGY_NODE on RMgen download page,
;# RM is set up to run concurrent redundant via insertion during route_auto and route_opt
;# otherwise, RM is set up to reserve space and run standalone add_redundant_vias after route_auto and route_opt  
set TCL_USER_REDUNDANT_VIA_MAPPING_FILE "" ;# ICC-II via mapping file required for redundant via insertion; 
;# the file should include add_via_mapping commands.   
set TCL_USER_ICC_REDUNDANT_VIA_MAPPING_FILE "" ;# ICC style via mapping file required for redundant via insertion; 
;# the file should include define_zrt_redundant_vias commands.
;# This variable is mutually exclusive with TCL_USER_REDUNDANT_VIA_MAPPING_FILE
set ROUTE_AUTO_ANTENNA_FIXING		false ;# false|true; tool default false; optional in RM;
;# set true to enable route.detail.hop_layers_to_fix_antenna and source TCL_ANTENNA_RULE_FILE in route_auto.tcl 
;# to fix Antenna violations.
set TCL_ANTENNA_RULE_FILE	""	;# Antenna rule file; required if ROUTE_AUTO_ANTENNA_FIXING is set to true.
set ROUTE_AUTO_CREATE_SHIELDS 		"none" ;# none|before_route_auto|after_route_auto; default is none; optional in RM;
;# choose to create shields before or after route_auto; all nets with shielding rules will be shielded	
set ROUTE_OPT_PT_DELAY_CALCULATION_WITH_PBA false ;# Default false; sets time.pba_optimization_mode to path to enable PBA during second route_opt;
set ROUTE_OPT_STARRC_CONFIG_FILE ""	;# Specify the configuration file for StarRC in-design extraction for the second route_opt in route_opt.tcl;
;# required; refer to templates/route_opt.starrc_config_example.txt as an example
set ROUTE_OPT_RESHIELD 			"after_route_opt" ;# none|after_route_opt|incremental; default is after_route_opt; 
;# set after_route_opt to reshield nets after route_opt is done with create_shield command; 
;# set incremental to trigger reshield during all route_opt eco route sessions with an app option; 
;# note that ROUTE_OPT_RESHIELD only works if ROUTE_AUTO_CREATE_SHIELDS is set to a value other than none
set ROUTE_OPT_CTO 			"auto" ;# auto|always_on|always_off; tool default auto; RM default auto;
;# sets route_opt.flow.enable_ccd_clock_drc_fixing to the specified value for clock DRC fixing in route_opt;
;# Note: this feature affects both CCD and non-CCD route_opt;
;# if CCD is enabled, with auto, route_opt will enable the feature; set it to always_off if you want it disabled.
;# if CCD is not enabled, with auto, this feature won't be enabled; set it to always_on to enable the feature.
## The following 6 ROUTE_OPT_ECO_OPT* variables are for ECO fusion (eco_opt command) in route_opt.tcl
#  Note that once ROUTE_OPT_ECO_OPT_PT_PATH is specified, ECO fusion is enabled and the third route_opt will be skipped.
set ROUTE_OPT_ECO_OPT_PT_PATH		"" ;# Required by eco_opt; specify the path to pt_shell; for example: /u/mgr/bin/pt_shell
;# if specified, eco_opt
set ROUTE_OPT_ECO_OPT_DB_PATH		"" ;# Optional; specify the paths to .db files of the reference libraries for PT (if not already in your search path)
;# For eco_opt, PT needs to read db. 
set ROUTE_OPT_ECO_OPT_TYPE		"" ;# Optional; eco_opt fixing type; timing|setup|hold|drc|leakage_power|dynamic_power|total_power|buffer_removal
;# if not specified, works on all types
set ROUTE_OPT_ECO_OPT_STARRC_CONFIG_FILE "" ;# Optional; specify the configuration file for StarRC in-design extraction
set ROUTE_OPT_ECO_OPT_WORK_DIR		"" ;# Optional; specify the working directory for eco_opt where PT files and logs are generated;
;# if not specified, tool will automatically generate one
set ROUTE_OPT_ECO_OPT_PRE_LINK_SCRIPT	"" ;# Optional; specify the file that contains custom PT script, which is executed before linking in PrimeTime;
;# use PT commands that do not require the current design
set ROUTE_OPT_ECO_OPT_POST_LINK_SCRIPT	"" ;# Optional; specify the file that contains custom PT script, which is executed after linking in PrimeTime;
;# use PT commands that require the current design
########################################################################################## 
## Variables for chip finishing related settings (Used by chip_finish.tcl)
##########################################################################################
set CHIP_FINISH_ACTIVE_SCENARIO_LIST 	"" ;# A subset of scenarios to be made active during chip_finish step.
;# once set, the list of active scenarios is saved and carried over to subsequent steps.
set TCL_USER_CHIP_FINISH_PRE_SCRIPT 	"" ;# An optional Tcl file for chip_finish.tcl to be sourced before filler cell insertion.
set TCL_USER_CHIP_FINISH_POST_SCRIPT 	"" ;# An optional Tcl file for chip_finish.tcl to be sourced after metal fill insertion.
## Std cell filler and decap cells used by chip_finish step and post PT-ECO refill in pt_eco step
set CHIP_FINISH_METAL_FILLER_PREFIX 	"" ;# A string to specify the prefix for metal filler (decap) cells.
set CHIP_FINISH_NON_METAL_FILLER_PREFIX $CHIP_FINISH_METAL_FILLER_PREFIX ;# A string to specify the prefix for non-metal fillers.
set CHIP_FINISH_METAL_FILLER_LIB_CELL_LIST "" ;# A list of metal filler (decap) lib cells, including the library name, for ex, 
;# Example: "hvt/DCAP_HVT lvt/DCAP_LVT". Recommended to specify decaps from largest to smallest.
set CHIP_FINISH_NON_METAL_FILLER_LIB_CELL_LIST "" ;# A list of non-metal filler lib cells, including the library name, for ex,
;# Example: hvt/FILL_HVT lvt/FILL_LVT. Recommended to specify them from largest to smallest.
## Signal EM
set CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FORMAT "ITF" ;# Specify signal EM constraint format: ITF | ALF; string is uppercase and ITF is default
set CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FILE "" ;# A constraint file which contains signal electromigration constraints;
;# specify an ITF file if CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FORMAT is set to ITF, and specify an
;# ALF file if CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FORMAT is set to ALF;
;# required for signal EM analysis and fixing to be enabled
set CHIP_FINISH_SIGNAL_EM_SAIF 		"" ;# An optional SAIF file for the signal EM analysis.
set CHIP_FINISH_SIGNAL_EM_SCENARIO 	"" ;# Specify an active scenario which is enabled for setup and hold analysis;
;# Required for signal EM analysis and fixing to proceed.
set CHIP_FINISH_SIGNAL_EM_FIXING 	false ;# Enable signal EM fixing; false | true; false is default
########################################################################################## 
## Variables for ICV in-design related settings (used by icv_in_design.tcl)
##########################################################################################
set ICV_IN_DESIGN_ACTIVE_SCENARIO_LIST 	"" ;# A subset of scenarios to be made active during icv_in_design step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set TCL_USER_ICV_IN_DESIGN_PRE_SCRIPT 	"" ;# An optional Tcl file for chip_finish.tcl to be sourced before signoff_check_drc.
set TCL_USER_ICV_IN_DESIGN_POST_SCRIPT 	"" ;# An optional Tcl file for chip_finish.tcl to be sourced after second signoff_check_drc.
## signoff_check_drc specific variables
set ICV_IN_DESIGN_DRC_CHECK_RUNSET 	"" ;# The foundry runset for ICV used by signoff_check_drc
set ICV_IN_DESIGN_DRC_CHECK_RUNDIR 	"z_check_drc" 
;# The working directory for the signoff_check_drc before signoff_fix_drc;
;# The directory that contains the initial DRC error database for signoff_fix_drc.
## singoff_fix_drc specific variables
set ICV_IN_DESIGN_ADR 			true ;# true|false; true enables signoff_fix_drc in addition to signoff_check_drc; default is true
set ICV_IN_DESIGN_ADR_RUNDIR 		"z_adr"	;# The working directory for signoff_fix_drc; only takes effect if ICV_IN_DESIGN_ADR is true
set ICV_IN_DESIGN_POST_ADR_RUNDIR 	"z_post_adr" ;# The working directory for signoff_check_drc after signoff_fix_drc is done; 
;# only takes effect if ICV_IN_DESIGN_ADR is true 
set ICV_IN_DESIGN_ADR_DPT_RULES 	"" ;# Specify your DPT rules for signoff_fix_drc fixing; only takes effect if ICV_IN_DESIGN_ADR is true
set ICV_IN_DESIGN_ADR_DPT_RUNDIR	"z_adr_with_dpt" ;# The working directory for signoff_check_drc with DPT rule fixing;
;# only takes effect if ICV_IN_DESIGN_ADR_DPT_RULES (DPR rules) is specified
set ICV_IN_DESIGN_POST_ADR_DPT_RUNDIR	"z_post_adr_with_dpt" ;# The working directory for signoff_check_drc after DPT rule fixing is done;
;# only takes effect if ICV_IN_DESIGN_ADR_DPT_RULES (DPR rules) is specified
## Metal fill specific variables
set ICV_IN_DESIGN_METAL_FILL 		false ;# Default false; set it to true to enable the metal fill creation feature.
set ICV_IN_DESIGN_METAL_FILL_RUNDIR	"z_icvFill" ;# The working directory for signoff_create_metal_fill. Optional. Default is z_icvFill.
set ICV_IN_DESIGN_METAL_FILL_TIMING_DRIVEN_THRESHOLD "" 
;# Specify the threshold for timing-driven metal fill.
;# If not specified, timing-driven is not enabled.
;# If specified, "-timing_preserve_setup_slack_threshold" option is added.
set ICV_IN_DESIGN_METAL_FILL_TRACK_BASED "off" ;# off | <a technology node> | generic; used for -track_fill option of signoff_create_metal_fill
;# for non-track-based : specify off 
;# for track-based : specify either a node (refer to man page) or generic 
set ICV_IN_DESIGN_METAL_FILL_RUNSET	"" ;# Specify the foundry runset for signoff_create_metal_fill command;
;# required only by non track-based metal fill (ICV_IN_DESIGN_METAL_FILL_TRACK_BASED set to off).
set ICV_IN_DESIGN_POST_METAL_FILL_RUNDIR "z_MFILL_after" 
;# The working directory for the signoff_check_drc after signoff_create_metal_fill is completed;
;# only takes effect if ICV_IN_DESIGN_METAL_FILL is true
set ICV_IN_DESIGN_METAL_FILL_TRACK_BASED_PARAMETER_FILE "auto" ;# auto | <a parameter file>; default is auto;
;# this variable is only for track-based metal fill;
;# specify auto to use ICC-II auto generated track_fill_params.rh file or your own paramter file.
########################################################################################## 
## Variables for settings related to write data (used by write_data.tcl)
##########################################################################################
## write_gds related
set WRITE_GDS_LAYER_MAP_FILE 		"" ;# A layer map file which provides a mapping between the tool and GDS layers
set WRITE_OASIS_LAYER_MAP_FILE 		"" ;# A layer map file which provides a mapping between the tool and OASIS layers
########################################################################################## 
## Variables for Functional ECO related settings (used by functional_eco.tcl)
##########################################################################################
set FUNCTIONAL_ECO_ACTIVE_SCENARIO_LIST	"" ;# Optional; a subset of scenarios to be made active during the step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set TCL_USER_FUNCTIONAL_ECO_PRE_SCRIPT	"" ;# An optional Tcl file to be sourced before ECO operations.
set TCL_USER_FUNCTIONAL_ECO_POST_SCRIPT	"" ;# An optional Tcl file to be sourced after route_eco.
set FUNCTIONAL_ECO_DISPLACEMENT_THRESHOLD "10" ;# A float to specify the maximum displacement threshold value for 
;# place_eco_cells -eco_changed_cells -legalize_mode minimum_physical_impact -displacement_threshold;
set FUNCTIONAL_ECO_VERILOG_FILE		"" ;# Required; a verilog file to be 
set FUNCTIONAL_ECO_MODE			"default" ;# Specify the preferred flow; default|freeze_silicon
;# default: sources $FUNCTIONAL_ECO_CHANGE_FILE and place_eco_cells in MPI mode
;# freeze_silicon: add_spare_cells, place_eco_cells, sources $FUNCTIONAL_ECO_CHANGE_FILE, and place_freeze_silicon
########################################################################################## 
## Variables for PT ECO related settings (used by pt_eco.tcl/pt_eco_incremental.tcl)
##########################################################################################
## The following variables apply to both pt_eco.tcl (classic PT-ECO flow) and pt_eco_incremental.tcl (Galaxy incremental ECO flow)
set PT_ECO_ACTIVE_SCENARIO_LIST 	"" ;# Optional; a subset of scenarios to be made active during the step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set TCL_USER_PT_ECO_PRE_SCRIPT 		"" ;# An optional Tcl file to be sourced before ECO operations.
set TCL_USER_PT_ECO_POST_SCRIPT 	"" ;# An optional Tcl file to be sourced after route_eco.
set PT_ECO_DISPLACEMENT_THRESHOLD 	"10" ;# A float to specify the maximum displacement threshold value for 
;# place_eco_cells -eco_changed_cells -legalize_mode minimum_physical_impact -displacement_threshold;
## The following variables only apply to pt_eco.tcl (classic PT-ECO flow)
set PT_ECO_CHANGE_FILE 			"" ;# Required; an ECO guidance file generated by the PT-SI write_changes command,
;# as an input to the pt_eco.tcl
set PT_ECO_MODE				"default" ;# Specify the preferred flow for the PT-ECO run; default|freeze_silicon
;# default: sources $PT_ECO_CHANGE_FILE and place_eco_cells in MPI mode
;# freeze_silicon: add_spare_cells, place_eco_cells, sources $PT_ECO_CHANGE_FILE, and place_freeze_silicon
########################################################################################## 
## Variables for Redhawk in-design related settings 
## (used by redhawk_in_design_pnr.tcl; SNPS_INDESIGN_RH_RAIL license required)
##########################################################################################
set REDHAWK_DIR 			"" ;# Specify the path to REDHAWK executable; required 
set REDHAWK_PAD_FILE 			"" ;# Default is top level pins.
set REDHAWK_ANALYSIS_NETS 		"" ;# Required. Specify the list of power and ground nets in pairs and in separate lines for the analysis;
;# for example, "VDD1 VSS1 VDD2 VSS2 VDD3 VSS3", where VDD* are power nets and VSS* are ground nets.
set REDHAWK_TECH_FILE 			"" ;# Required. Apache Technology File
set REDHAWK_MACROS 			"" ;# Optional. List of Macro names and macro directories in pairs and in separate lines;
;# for example, "macro1_name macro1_directory 
;#		    macro2_name macro2_directory 
;#		    macro3_name macro3_directory"
set REDHAWK_SWITCH_MODEL_FILES 		"" ;# Optional. List of switch model files;
;# for example: "switch_model_file1 
;#               switch_model_file2 
;#		    switch_model_file3"
set REDHAWK_LIB_FILES 			"" ;# Required. List of .lib files in separate lines.
;# for example: "/home/lib_1.lib 
;#               /home/lib_2.lib
;#               /home/lib_3.lib"
set REDHAWK_APL_FILES			"" ;# Required for dynamic analysis.  List of apl files in separate lines.
;# for example: "x.cdev cdev
;#               x.current current
;#               y.cdev cdev
;#               y.current current"
set REDHAWK_EXTRA_GSR 			"" ;# Optional. Provide a file with custom Redhawk settings.
set REDHAWK_ANALYSIS 			"" ;# Required. Specify of the analyses below:
;# For Static analysis: "static"
;# For Vector-based Dynamic analysis: "dynamic_vcd"
;# For Vectorless Dynamic analysis: "dynamic_vectorless"
;# For Effective Resistance analysis: "effective_resistance"
;# For Minimum path resistance analysis: "min_path_resistance"
;# For Integrity Check: "check_missing_via"
set REDHAWK_OUTPUT_REPORT 		"" ;# Optional. Specify a file name to have the output report produced:
;# For Static or dynamic analysis: the effective voltage drop is reported
;# For Effective Resistance analysis: the effective resistance is reported
;# For Minimum path resistance analysis: the minimum path resistance is reported
;# For Integrity Check: the missing vias are reported
set REDHAWK_EM_ANALYSIS 	   	false ;# Optional. Set to true if EM analysis to be performed with static or dynamic analysis.
set REDHAWK_EM_REPORT 			"" ;# Optional. Specify a file name to have the EM output report produced.
set REDHAWK_SCRIPT_FILE 		"" ;# Optional. Specify a file name for using Redhawk standalone run tcl file.
set REDHAWK_SWITCHING_ACTIVITY_FILE 	"" ;# Required for vector-based dynamic analysis.  Format is as follows:
;# {file_format [file_name] [strip_path]}
set REDHAWK_FIX_MISSING_VIAS       	false ;# Optional. Set to true to enable inserting vias to missing via locations after the check_missing_via flow is run.
set REDHAWK_MISSING_VIA_POS_THRESHOLD	"" ;# Optional. Set to positive voltage between two overlapped layers for filtering purpose.  Default is no filtering.
set REDHAWK_RAIL_DATABASE               RAIL_DATABASE  ; #Optional. Set ICC2 Redhawk Fusion output directory.
set REDHAWK_PGA_POWER_NET               "" ; #Required.  Set one power net for PGA.
set REDHAWK_PGA_GROUND_NET              "" ; #Required.  Set one ground net for PGA
set REDHAWK_PGA_NODE                    "" ; #Required. Set the technology node such as tsmc16.
set REDHAWK_PGA_ICV_DIR                 "" ; #Required. Set the path to the ICV binary.  Example: /global/apps/icv_2018.06
##########################################################################################
## System Variables and Settings (there's no need to change them)
##########################################################################################
## Reporting 
set REPORT_QOR				true ;# true|false; RM default true; runs various reporting commands at end of each step;
;# reporting commands vary by stage; set it to false to skip reporting
set REPORT_QOR_REPORT_POWER		true ;# true|false; RM default true;
;# set it to false to skip report_power and report_clock_qor -type power during reporting
set REPORT_QOR_REPORT_CONGESTION	true ;# true|false; RM default reports congestion with "route_global -congestion_map_only true"
;# at the end of preroute steps; set it to false to skip.
set search_path [list ./rm_icc2_pnr_scripts ./rm_setup ./templates $REDHAWK_SEARCH_PATH]
lappend search_path .
if {$synopsys_program_name == "icc2_shell"} {
	set_host_options -max_cores 8

	## Enable on-disk operation for copy_block to save block to disk right away
	set_app_option -name design.on_disk_operation -value true ;# default false and global-scoped
}
set sh_continue_on_error true
## Label names (while $DESIGN_NAME is the block name)
set INIT_DESIGN_BLOCK_NAME 		"init_design" 			;# Label name to be used when saving a block in init_design.tcl
set PLACE_OPT_BLOCK_NAME 		"place_opt" 			;# Label name to be used when saving a block in place_opt.tcl
set CLOCK_OPT_CTS_BLOCK_NAME 		"clock_opt_cts" 		;# Label name to be used when saving a block in clock_opt_cts.tcl
set CLOCK_OPT_OPTO_BLOCK_NAME 		"clock_opt_opto" 		;# Label name to be used when saving a block in clock_opt_opto.tcl
set ROUTE_AUTO_BLOCK_NAME 		"route_auto" 			;# Label name to be used when saving a block in route_auto.tcl
set ROUTE_OPT_BLOCK_NAME 		"route_opt" 			;# Label name to be used when saving a block in route_opt.tcl
set CHIP_FINISH_BLOCK_NAME 		"chip_finish" 			;# Label name to be used when saving a block in chip_finish.tcl
set ICV_IN_DESIGN_BLOCK_NAME 		"icv_in_design" 		;# Label name to be used when saving a block in icv_in_design.tcl
set WRITE_DATA_FROM_BLOCK_NAME 		$ICV_IN_DESIGN_BLOCK_NAME 	;# Label name of the source block in write_data.tcl;
set WRITE_DATA_BLOCK_NAME 		"write_data" 			;# Label name to be used when saving a block in write_data.tcl
;# default is ICV_IN_DESIGN_BLOCK_NAME
set FUNCTIONAL_ECO_FROM_BLOCK_NAME	$ROUTE_OPT_BLOCK_NAME 		;# Label name of the source block in functional_eco.tcl;
;# default is ROUTE_OPT_BLOCK_NAME
set FUNCTIONAL_ECO_BLOCK_NAME		"functional_eco"		;# Label name to be used when saving a block in functional_eco.tcl
set PT_ECO_FROM_BLOCK_NAME 		$ROUTE_OPT_BLOCK_NAME 		;# Label name of the source block in pt_eco.tcl;
;# default is ROUTE_OPT_BLOCK_NAME
set PT_ECO_BLOCK_NAME 			"pt_eco" 			;# Label name to be used when saving a block in pt_eco.tcl
set PT_ECO_INCREMENTAL_FROM_BLOCK_NAME 	$ROUTE_OPT_BLOCK_NAME 		;# Label name of the source block in pt_eco_incremental_1.tcl;
;# default is ROUTE_OPT_BLOCK_NAME; specify a different name if needed
set PT_ECO_INCREMENTAL_1_BLOCK_NAME 	"pt_eco_incremental_1" 		;# Label name to be used when saving a block in pt_eco_incremental_1.tcl
set PT_ECO_INCREMENTAL_2_BLOCK_NAME 	"pt_eco_incremental_2" 		;# Label name to be used when saving a block in pt_eco_incremental_2.tcl
set REDHAWK_IN_DESIGN_PNR_FROM_BLOCK_NAME $INIT_DESIGN_BLOCK_NAME	;# Label name of the starting block for redhawk_in_design_pnr.tcl;
;# default is INIT_DESIGN_BLOCK_NAME
## Directories
set OUTPUTS_DIR	"./outputs_icc2"	;# Directory to write output data files; mainly used by write_data.tcl
set REPORTS_DIR	"./rpts_icc2"		;# Directory to write reports; mainly used by report_qor.tcl
if !{[file exists $OUTPUTS_DIR]} {file mkdir $OUTPUTS_DIR} ;# do not change this line or directory may not be created properly
if !{[file exists $REPORTS_DIR]} {file mkdir $REPORTS_DIR} ;# do not change this line or directory may not be created properly
##########################################################################################
## Hierarchical PNR Variables (used by hierarchical PNR implementation)
##########################################################################################
## For designs where the blocks are bound to abstracts
set SUB_BLOCK_REFS                   	[list ] ;# If ABSTRACT_TYPE_FOR_MPH_BLOCKS == flattened , specify design names of the immediate child blocks
;# If ABSTRACT_TYPE_FOR_MPH_BLOCKS == nested , specify design names of the physical blocks in all lower levels of physical hierarchy
;# Include the blocks that will be bound to abstracts
set USE_ABSTRACTS_FOR_BLOCKS        	[list ] ;# design names of the physical blocks in the next lower level that will be bound to abstracts
## By default, abstracts created after icv_in_design step of lower-level are used to implement the current level
## Update the following variables if you want to use abstracts created after any other step 
set BLOCK_ABSTRACT_FOR_PLACE_OPT 	"$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_PLACE_OPT label for place_opt
set BLOCK_ABSTRACT_FOR_CLOCK_OPT_CTS    "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_CLOCK_OPT_CTS label for clock_opt_cts
set BLOCK_ABSTRACT_FOR_CLOCK_OPT_OPTO   "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_CLOCK_OPT_OPTO label for clock_opt_opto
set BLOCK_ABSTRACT_FOR_ROUTE_AUTO       "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_ROUTE_AUTO label for route_auto
set BLOCK_ABSTRACT_FOR_ROUTE_OPT        "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_ROUTE_OPT label for route_opt
set BLOCK_ABSTRACT_FOR_CHIP_FINISH      "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_CHIP_FINISH for chip_finish
set BLOCK_ABSTRACT_FOR_ICV_IN_DESIGN    "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_ICV_IN_DESIGN label for icv_in_design
set USE_ABSTRACTS_FOR_POWER_ANALYSIS 	false ;# Default false; false|true;
;# sets app option abstract.annotate_power that annotates power information in the abstracts
;# set this to true to perform power analysis inside subblocks modeled as abstracts
set USE_ABSTRACTS_FOR_SIGNAL_EM_ANALYSIS false ;# Default false; false|true;
;# sets app option abstract.enable_signal_em_analysis 
;# set this to true to perform signal em analysis inside abstracts
set ABSTRACT_TYPE_FOR_MPH_BLOCKS "flattened" ; # "nested | flattened", Default nested. Specifies the type of abstract to be created for MPH blocks (blocks with more than 1 level of physical hierarchy)
;# Allowed values are nested and flattened. 
;# when this variable is set to nested (default), preserve_block_instances option of create_abstract command is set to true (default value)
;# when this variable is set to flattened , preserve_block_instances option of create_abstract command is set to false
set CHECK_HIER_TIMING_CONSTRAINTS_CONSISTENCY true ;# Determines whether the consistency of top and block timing constraints is checked during the check_design command
;# The variable in turn sets the application option abstract.check_constraints_consistency to true
########################################################################################## 
## Hierarchical PNR Variables for clock_opt_cts related settings (used by clock_opt_cts.tcl)
##########################################################################################
set PROMOTE_CLOCK_BALANCE_POINTS	false ;# Default false. When implementing intermediate and top levels of physical hierarchy,
;# set this variable to true to promote clock balance points from sub-blocks.
;# Leave this variable to its default value, if the needed clock balance points for the pins
;# inside sub-blocks are applied from the top-level itself.
########################################################################################## 
## Hierarchical PNR Variables for designs where some of the blocks are bound to ETMs
##########################################################################################
set WRITE_DATA_FOR_ETM_GENERATION       false ;# Default false. Set it to true, for writing out required design data for ETM Generation in PrimeTime 
set WRITE_DATA_FOR_ETM_BLOCK_NAME       $ICV_IN_DESIGN_BLOCK_NAME ;# Name of the starting block for the write_data_for_etm step
## ICC2-RM provides additional files (flavors) to override RM default settings for high connectivity, run time and area/power focused designs.
#  These files are under rm_icc2_pnr_scripts/ :  
#  flavor.high_connectivity_high_congestion_focused.tcl, flavor.area_power_focused.tcl and flavor.run_time_focused.tcl
#  You can use the ADDITIONAL_FLAVOR variable to control whether to use these flavors.
set ADDITIONAL_FLAVOR "" 	;# default unspecified; if unspecified, runs RM default flow that works/balances all PPA
;# set it to high_connectivity_high_congestion for high connectivity design styles with heavy congestions
;# set it to area_power for extra area and power optimizations
;# set it to run_time if run time is the primary concern
puts "RM-info: Completed script [info script]\n"
RM-info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_setup/icc2_pnr_setup.tcl

set REPORT_PREFIX $CHIP_FINISH_BLOCK_NAME
chip_finish
open_lib $DESIGN_LIBRARY
Information: Loading library file '/afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/xbar' (FILE-007)
{xbar}
copy_block -from ${DESIGN_NAME}/${ROUTE_OPT_BLOCK_NAME} -to ${DESIGN_NAME}/${CHIP_FINISH_BLOCK_NAME}
Information: Saving block 'xbar:xbar/chip_finish.design'
{xbar:xbar/chip_finish.design}
current_block ${DESIGN_NAME}/${CHIP_FINISH_BLOCK_NAME}
{xbar:xbar/chip_finish.design}
link_block
Warning: Library xbar has no reference libraries. (LNK-063)
Using libraries: xbar
Warning: In library xbar, no block views exist for block xbar. (LNK-064)
Visiting block xbar:xbar/chip_finish.design
Error: Unable to resolve reference to 'xbar:OAI22_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:AND2_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:AOI22_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:NOR2_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:NAND2_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:NOR3_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:NAND4_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:INV_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:NOR4_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:SDFFSNQ_X1'. (LNK-081)
Error: Unable to resolve reference to 'xbar:CLKGATETST_X1'. (LNK-081)
Information: Block 'xbar:xbar/chip_finish.design' has 11 unresolved references. (LNK-074)
Design 'xbar' was successfully linked.
0
## The following only applies to hierarchical designs
## Swap abstracts if abstracts specified for route_opt and chip_finish are different
if {$DESIGN_STYLE == "hier"} {
   if {$USE_ABSTRACTS_FOR_BLOCKS != "" && ($BLOCK_ABSTRACT_FOR_CHIP_FINISH != $BLOCK_ABSTRACT_FOR_ROUTE_OPT)} {
      puts "RM-info: Swapping from $BLOCK_ABSTRACT_FOR_ROUTE_OPT to $BLOCK_ABSTRACT_FOR_CHIP_FINISH abstracts for all blocks."
      change_abstract -references $USE_ABSTRACTS_FOR_BLOCKS -label $BLOCK_ABSTRACT_FOR_CHIP_FINISH
      report_abstracts
   }
}
if {$CHIP_FINISH_ACTIVE_SCENARIO_LIST != ""} {
	set_scenario_status -active false [get_scenarios -filter active]
	set_scenario_status -active true $CHIP_FINISH_ACTIVE_SCENARIO_LIST
}
source -echo settings.non_persistent.tcl ;# non-persistent settings to be re-applied in each session
puts "RM-info: Running script [info script]\n"
RM-info: Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.non_persistent.tcl

##########################################################################################
# Script: settings.non_persistent.tcl
# Description : Settings that need to be re-applied in each new ICC-II session are incldued below.
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
####################################
## Timer 
####################################
## set_app_options -name time.enable_preset_clear_arcs -value true ;# tool default false, global-scoped
####################################
## Keepout margin (lib cell based) 
####################################
## Lib cell based keepout margin is not persistent in the current release and must be re-applied in new ICC-II seccions.
#  Example : create_keepout_margin -outer {5 5 5 5} [get_lib_cells */lib_cell_name]
####################################
## set_threshold_voltage_group_type 
####################################
## Set your threshold_voltage_group attributes. These are persistent and can be simply defined in settings.place_opt.tcl. 
#  Listed here for your reference. For example:
#  	define_user_attribute -type string -class lib_cell threshold_voltage_group
#  	set_attribute -quiet [get_lib_cells -quiet */*LVT] threshold_voltage_group LVt
#  	set_attribute -quiet [get_lib_cells -quiet */*RVT] threshold_voltage_group RVt
#  	set_attribute -quiet [get_lib_cells -quiet */*HVT] threshold_voltage_group HVt
## set_threshold_voltage_group_type is not persistent and should be defined here:
#  	set_threshold_voltage_group_type -type low_vt LVt
#  	set_threshold_voltage_group_type -type normal_vt RVt
#  	set_threshold_voltage_group_type -type high_vt HVt
puts "RM-info: Completed script [info script]\n"
RM-info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/settings.non_persistent.tcl

## Disable soft-rule-based timing optimization during ECO routing.
#  This is to limit spreading which can touch multiple nets and impact convergence.
set_app_options -name route.detail.eco_route_use_soft_spacing_for_timing_optimization -value false
route.detail.eco_route_use_soft_spacing_for_timing_optimization false
####################################
## Pre-chip_finish customizations
####################################
if {[file exists [which $TCL_USER_CHIP_FINISH_PRE_SCRIPT]]} {
        puts "RM-info: Sourcing [which $TCL_USER_CHIP_FINISH_PRE_SCRIPT]"
        source $TCL_USER_CHIP_FINISH_PRE_SCRIPT
} elseif {$TCL_USER_CHIP_FINISH_PRE_SCRIPT != ""} {
        puts "RM-error: TCL_USER_CHIP_FINISH_PRE_SCRIPT($TCL_USER_CHIP_FINISH_PRE_SCRIPT) is invalid. Please correct it."
}
####################################
## report_app_options & report_lib_cell_purpose	
####################################
redirect -tee -file ${REPORTS_DIR}/${REPORT_PREFIX}.report_app_options.start {report_app_options -non_default *}
****************************************
Report : app_option
           -non_default
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:05:08 2019
****************************************
Name                                                            Type       Value       User-default System-default Scope      Status     Source
--------------------------------------------------------------- ---------- ----------- ------------ -------------- ---------- ---------- ----------------------------------------------------------------------------------------------------
ccd.post_route_buffer_removal                                   bool       true        --           false          block      normal     
design.on_disk_operation                                        bool       true        true         false          global     normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_setup/icc2_pnr_setup.tcl:552
extract.enable_coupling_cap                                     bool       true        --           false          block      normal     
opt.area.effort                                                 enum       high        {}           low            block      normal     
opt.common.advanced_logic_restructuring_mode                    enum       area_timing {}           none           block      normal     
opt.common.buffer_area_effort                                   enum       ultra       {}           low            block      normal     
opt.common.use_route_aware_estimation                           enum       true        {}           false          block      normal     
opt.port.eliminate_verilog_assign                               bool       true        --           false          block      normal     
opt.power.effort                                                enum       high        {}           low            block      normal     
opt.power.mode                                                  enum       total       {}           none           block      normal     
opt.timing.effort                                               enum       high        {}           low            block      normal     
place.coarse.channel_detect_mode                                bool       false       --           true           block      normal     
place.coarse.enable_enhanced_soft_blockages                     bool       true        --           false          block      normal     
place_opt.final_place.effort                                    enum       high        {}           medium         block      normal     
place_opt.initial_drc.global_route_based                        enum       1           {}           false          block      normal     
place_opt.place.congestion_effort                               enum       high        {}           medium         block      normal     
route.common.post_detail_route_redundant_via_insertion          enum       medium      {}           off            block      normal     
route.detail.eco_max_number_of_iterations                       integer    10          --           -1             block      normal     
route.detail.eco_route_use_soft_spacing_for_timing_optimization bool       false       --           true           block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/chip_finish.tcl:35
route.detail.timing_driven                                      bool       true        --           false          block      normal     
route.global.timing_driven                                      bool       true        --           false          block      normal     
route.track.crosstalk_driven                                    bool       true        --           false          block      normal     
route.track.timing_driven                                       bool       true        --           false          block      normal     
time.enable_ccs_rcv_cap                                         bool       true        --           false          block      normal     
time.enable_clock_to_data_analysis                              bool       true        --           false          block      normal     
time.enable_io_path_groups                                      bool       true        --           false          block      normal     
time.remove_clock_reconvergence_pessimism                       bool       true        --           false          block      normal     
time.si_enable_analysis                                         bool       true        --           false          block      normal     
--------------------------------------------------------------- ---------- ----------- ------------ -------------- ---------- ---------- ----------------------------------------------------------------------------------------------------

There are additional internal differences with no available TBC source.
1
redirect -file ${REPORTS_DIR}/${REPORT_PREFIX}.report_lib_cell_purpose {report_lib_cell -objects [get_lib_cells] -column {full_name:20 valid_purposes}}
## The following only applies to designs with physical hierarchy
## Ignore the sub-blocks (bound to abstracts) internal timing paths
if {$DESIGN_STYLE == "hier" && $PHYSICAL_HIERARCHY_LEVEL != "bottom"} {
    set_timing_paths_disabled_blocks  -all_sub_blocks
}
####################################
## Filler cell insertion
####################################
## Below are the commands for creating standard cell metal and non-metal fillers.
#  For designs with a smallest cell size of 2 sites, to prevent 1x gaps,
#  append either the option -smallest_cell_size 2 or -rules {no_1x}
#  For designs with a smallest cell size of 3 sites, to prevent 1x and 2x gaps,
#  append the option -smallest_cell_size 3
## Metal filler (decap cells)
if {$CHIP_FINISH_METAL_FILLER_LIB_CELL_LIST != ""} {
	set create_stdcell_filler_metal_lib_cell_sorted [get_object_name [sort_collection -descending [get_lib_cells $CHIP_FINISH_METAL_FILLER_LIB_CELL_LIST] area]]
	set create_stdcell_filler_metal_cmd "create_stdcell_filler -lib_cell [list $create_stdcell_filler_metal_lib_cell_sorted]"
	if {$CHIP_FINISH_METAL_FILLER_PREFIX != ""} {
		lappend create_stdcell_filler_metal_cmd -prefix $CHIP_FINISH_METAL_FILLER_PREFIX
	}
	puts "RM-info: $create_stdcell_filler_metal_cmd"
	eval ${create_stdcell_filler_metal_cmd}
	connect_pg_net

	remove_stdcell_fillers_with_violation
}
## Non-metal filler
if {$CHIP_FINISH_NON_METAL_FILLER_LIB_CELL_LIST != ""} {
	set create_stdcell_filler_non_metal_lib_cell_sorted [get_object_name [sort_collection -descending [get_lib_cells $CHIP_FINISH_NON_METAL_FILLER_LIB_CELL_LIST] area]]
	set create_stdcell_filler_non_metal_cmd "create_stdcell_filler -lib_cell [list $create_stdcell_filler_non_metal_lib_cell_sorted]"
	if {$CHIP_FINISH_NON_METAL_FILLER_PREFIX != ""} {
		lappend create_stdcell_filler_non_metal_cmd -prefix $CHIP_FINISH_NON_METAL_FILLER_PREFIX
	}
	puts "RM-info: $create_stdcell_filler_non_metal_cmd"
	eval ${create_stdcell_filler_non_metal_cmd}
	connect_pg_net
}
## To remove filler cells in the design :
#	remove_cells [get your_filler_cells]
####################################
## Signal EM analysis and fix	
####################################
## Loading EM constraint is required for EM analysis and fixing.
if {[file exists [which $CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FILE]]} {
		set read_signal_em_constraints_cmd "read_signal_em_constraints $CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FILE"
		switch -regexp $CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FORMAT {
			"ITF"      {lappend read_signal_em_constraints_cmd -format ITF}
			"ALF"      {lappend read_signal_em_constraints_cmd -format ALF}
		}
		puts "RM-info: $read_signal_em_constraints_cmd"
		eval $read_signal_em_constraints_cmd
  
		## Loading and setting switching activity is optional
		#  ex, set_switching_activity -rise_toggle_rate <positive number> -fall_toggle_rate -static_probability <0to1> [get_nets -hier *]
		if {[file exists [which $CHIP_FINISH_SIGNAL_EM_SAIF]]} {
			read_saif $CHIP_FINISH_SIGNAL_EM_SAIF
		} elseif {$CHIP_FINISH_SIGNAL_EM_SAIF != ""} {
			puts "RM-error: CHIP_FINISH_SIGNAL_EM_SAIF($CHIP_FINISH_SIGNAL_EM_SAIF) is invalid. Please correct it."
		}

		## Signal EM analysis and fixing require CHIP_FINISH_SIGNAL_EM_SCENARIO to be specified, active, and enabled for setup and hold
		if {$CHIP_FINISH_SIGNAL_EM_SCENARIO != ""} {
			if {[regexp $CHIP_FINISH_SIGNAL_EM_SCENARIO [get_object_name [get_scenarios -filter "setup&&hold&&active"]]]} {
				## Recommended to have SI enabled so delta transition and coupling capacitance are considered in signal EM analysis
				if {![get_app_option_value -name time.si_enable_analysis]} {
					set RM_current_value_enable_si false
					set_app_options -name time.si_enable_analysis -value true
				}

				set RM_current_value_scenario [current_scenario]
				current_scenario $CHIP_FINISH_SIGNAL_EM_SCENARIO
				redirect -tee -file ${REPORTS_DIR}/chip_finish.report_signal_em {report_signal_em -violated}

				if {$CHIP_FINISH_SIGNAL_EM_FIXING} {
				## Fix all EM violations in the whole design including clock and signal nets.
				#  The command uses information from the current mode and corner. 
					fix_signal_em
					redirect -tee -file ${REPORTS_DIR}/chip_finish.report_signal_em.post {report_signal_em -violated}
				}
				current_scenario ${RM_current_value_scenario}

				## Restore user default of time.si_enable_analysis
				if {[info exists RM_current_value_enable_si] && !${RM_current_value_enable_si}} {
					set_app_options -name time.si_enable_analysis -value false
				}
			} else {
				puts "RM-error: CHIP_FINISH_SIGNAL_EM_SCENARIO must be active and enabled for setup and hold. Signal EM analysis and fixing are skipped."
			}
		} else {
			puts "RM-error: CHIP_FINISH_SIGNAL_EM_SCENARIO is not specified. Signal EM analysis and fixing are skipped."
		}
	} elseif {$CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FILE != ""} {
		puts "RM-error: CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FILE($CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FILE) is invalid. Please correct it."
	}
####################################
## Post-chip_finish customizations
####################################
if {[file exists [which $TCL_USER_CHIP_FINISH_POST_SCRIPT]]} {
        puts "RM-info: Sourcing [which $TCL_USER_CHIP_FINISH_POST_SCRIPT]"
        source $TCL_USER_CHIP_FINISH_POST_SCRIPT
} elseif {$TCL_USER_CHIP_FINISH_POST_SCRIPT != ""} {
        puts "RM-error: TCL_USER_CHIP_FINISH_POST_SCRIPT($TCL_USER_CHIP_FINISH_POST_SCRIPT) is invalid. Please correct it."
}
if {$TCL_USER_CONNECT_PG_NET_SCRIPT != ""} {
	if {[file exists [which $TCL_USER_CONNECT_PG_NET_SCRIPT]]} {
		puts "RM-info: Sourcing [which $TCL_USER_CONNECT_PG_NET_SCRIPT]"
  		source $TCL_USER_CONNECT_PG_NET_SCRIPT
	} else {
		puts "RM-error: TCL_USER_CONNECT_PG_NET_SCRIPT($TCL_USER_CONNECT_PG_NET_SCRIPT) is invalid. Please correct it."
	}
} else {
	connect_pg_net
	# For non-MV designs with more than one PG, you should use connect_pg_net in manual mode.
}
****************************************
Report : Power/Ground Connection Summary
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:05:08 2019
****************************************
P/G net name                  P/G pin count(previous/current)
--------------------------------------------------------------------------------
Power net VDD                 0/0
Ground net VSS                0/0
--------------------------------------------------------------------------------
Information: connections of 0 power/ground pin(s) are created or changed.
## Run check_routes to save updated routing DRC to the block
redirect -tee -file ${REPORTS_DIR}/${REPORT_PREFIX}.check_routes {check_routes}
Top design boundary is not set
Error: Cannot load the design. (ZRT-002)
save_block
Information: Saving block 'xbar:xbar/chip_finish.design'
1
####################################
## Create abstract and frame
####################################
## Enabled for hierarchical designs; for bottom and intermediate levels of physical hierarchy
if {$DESIGN_STYLE == "hier"} {
        if {$USE_ABSTRACTS_FOR_POWER_ANALYSIS == "true"} {
                set_app_options -name abstract.annotate_power -value true
        }
        if {$USE_ABSTRACTS_FOR_SIGNAL_EM_ANALYSIS == "true"} {
                set_app_options -name abstract.enable_signal_em_analysis -value true
        }
        if { $PHYSICAL_HIERARCHY_LEVEL == "bottom" } {
                create_abstract -read_only
                create_frame -block_all true
                derive_hier_antenna_property -design ${DESIGN_NAME}/${CHIP_FINISH_BLOCK_NAME}

        } elseif { $PHYSICAL_HIERARCHY_LEVEL == "intermediate"} {
            if { $ABSTRACT_TYPE_FOR_MPH_BLOCKS == "nested"} {
                ## Create nested abstract for the intermediate level of physical hierarchy
                create_abstract -read_only
            } elseif { $ABSTRACT_TYPE_FOR_MPH_BLOCKS == "flattened"} {
                ## Create flattened abstract for the intermediate level of physical hierarchy
                create_abstract -read_only -preserve_block_instances false
            }
            create_frame -block_all true
            derive_hier_antenna_property -design ${DESIGN_NAME}/${CHIP_FINISH_BLOCK_NAME}
        }
}
####################################
## Report and output
####################################
if {$REPORT_QOR} {source report_qor.tcl} 
RM-info: Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw02/icc2rm/rm_icc2_pnr_scripts/report_qor.tcl

RM-info: Reporting clock tree information and QoR ...

 Info: Initializing timer in CLOCK_SYN_REPORT_MODE
Warning: Libraries do not have CCS noise model for accurate waveform analysis in advanced waveform propagation mode. (TIM-207)
Information: Corner mode_norm.fast.RCmin_bc: no PVT mismatches. (PVT-032)
Warning: Network of supply net VDD has no early voltage defined in corner mode_norm.fast.RCmin_bc. (PVT-014)
Warning: Network of supply net VDD has no late voltage defined in corner mode_norm.fast.RCmin_bc. (PVT-014)
Information: Corner mode_norm.worst_low.RCmax_bc: no PVT mismatches. (PVT-032)
Warning: Network of supply net VDD has no early voltage defined in corner mode_norm.worst_low.RCmax_bc. (PVT-014)
Warning: Network of supply net VDD has no late voltage defined in corner mode_norm.worst_low.RCmax_bc. (PVT-014)
Information: Corner mode_norm.slow.RCmax: no PVT mismatches. (PVT-032)
Warning: Network of supply net VDD has no early voltage defined in corner mode_norm.slow.RCmax. (PVT-014)
Warning: Network of supply net VDD has no late voltage defined in corner mode_norm.slow.RCmax. (PVT-014)
Information: Corner mode_norm.fast.RCmin: no PVT mismatches. (PVT-032)
Warning: Network of supply net VDD has no early voltage defined in corner mode_norm.fast.RCmin. (PVT-014)
Warning: Network of supply net VDD has no late voltage defined in corner mode_norm.fast.RCmin. (PVT-014)
Information: Corner mode_norm.worst_low.RCmax: no PVT mismatches. (PVT-032)
Warning: Network of supply net VDD has no early voltage defined in corner mode_norm.worst_low.RCmax. (PVT-014)
Warning: Network of supply net VDD has no late voltage defined in corner mode_norm.worst_low.RCmax. (PVT-014)
Information: Corner mode_norm.slow.RCmax_bc: no PVT mismatches. (PVT-032)
Warning: Network of supply net VDD has no early voltage defined in corner mode_norm.slow.RCmax_bc. (PVT-014)
Warning: Network of supply net VDD has no late voltage defined in corner mode_norm.slow.RCmax_bc. (PVT-014)
Warning: no valid parasitic for mode_norm.slow.RCmax corner(LATE) (NEX-018)
Warning: no valid parasitic for mode_norm.slow.RCmax corner(EARLY) (NEX-018)
Warning: no valid parasitic for mode_norm.slow.RCmax_bc corner(LATE) (NEX-018)
Warning: no valid parasitic for mode_norm.slow.RCmax_bc corner(EARLY) (NEX-018)
Warning: no valid parasitic for mode_norm.worst_low.RCmax corner(LATE) (NEX-018)
Warning: no valid parasitic for mode_norm.worst_low.RCmax corner(EARLY) (NEX-018)
Warning: no valid parasitic for mode_norm.worst_low.RCmax_bc corner(LATE) (NEX-018)
Warning: no valid parasitic for mode_norm.worst_low.RCmax_bc corner(EARLY) (NEX-018)
Warning: no valid parasitic for mode_norm.fast.RCmin corner(LATE) (NEX-018)
Warning: no valid parasitic for mode_norm.fast.RCmin corner(EARLY) (NEX-018)
Warning: no valid parasitic for mode_norm.fast.RCmin_bc corner(LATE) (NEX-018)
Warning: no valid parasitic for mode_norm.fast.RCmin_bc corner(EARLY) (NEX-018)
Warning: no valid parasitic for (all corners) corner((both specs)) (NEX-018)
Information: The stitching and editing of coupling caps is turned ON for design 'xbar:xbar/chip_finish.design'. (TIM-125)
Warning: No physical information exists for design 'xbar'. Zero interconnect delay is used in timing analysis. (TIM-101)
Warning: The extractor can not be initialized for design 'xbar'. Zero interconnect delay is used in timing analysis. (TIM-102)
Information: Crosstalk analysis has been disabled. (TIM-114)
Information: Update timing completed net estimation for all the timing graph nets (TIM-111)
Information: Net estimation statistics: timing graph nets = 530, routed nets = 0, across physical hierarchy nets = 0, parasitics cached nets = 0, delay annotated nets = 0, parasitics annotated nets = 0, multi-voltage nets = 0. (TIM-112)
************************************************************
Timer Settings:
Delay Calculation Style:                   auto
Signal Integrity Analysis:                 enabled
Timing Window Analysis:                    enabled
Advanced Waveform Propagation:             full_design
Variation Type:                            fixed_derate
Clock Reconvergence Pessimism Removal:     enabled
Advanced Receiver Model:                   disabled
************************************************************
Warning: The scenario mode_norm.fast.RCmin has max transition DRC fixing disabled using the set_scenario_status command.  High DRC count may be expected.
Warning: The scenario mode_norm.fast.RCmin has max capacitance DRC fixing disabled using the set_scenario_status command.  High DRC count may be expected.
****************************************
Report : clock qor
        -type summary
        -nosplit
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:05:08 2019
****************************************

Attributes
===========
M Master Clock
G Generated Clock
& Internal Generated Clock
U User Defined Skew Group
D Default Skew Group
* Generated Clock Balanced Separately

===========================================================
==== Summary Reporting for Corner mode_norm.fast.RCmin ====
===========================================================

========================================== Summary Table for Corner mode_norm.fast.RCmin ===========================================
Clock /                               Attrs     Sinks Levels    Clock     Clock     Clock       Max    Global  Trans DRC  Cap DRC
Skew Group                                                   Repeater  Repeater   Stdcell   Latency      Skew     Count     Count
                                                                Count      Area      Area
------------------------------------------------------------------------------------------------------------------------------------
### Mode: mode_norm.fast.RCmin, Scenario: mode_norm.fast.RCmin
clk                                     M,D         0      0        0      0.00      0.00        --        --         0         0
------------------------------------------------------------------------------------------------------------------------------------
All Clocks                                          0      0        0      0.00      0.00        --        --         0         0


Warning: The scenario mode_norm.fast.RCmin_bc has max transition DRC fixing disabled using the set_scenario_status command.  High DRC count may be expected.
Warning: The scenario mode_norm.fast.RCmin_bc has max capacitance DRC fixing disabled using the set_scenario_status command.  High DRC count may be expected.
==============================================================
==== Summary Reporting for Corner mode_norm.fast.RCmin_bc ====
==============================================================

========================================= Summary Table for Corner mode_norm.fast.RCmin_bc =========================================
Clock /                               Attrs     Sinks Levels    Clock     Clock     Clock       Max    Global  Trans DRC  Cap DRC
Skew Group                                                   Repeater  Repeater   Stdcell   Latency      Skew     Count     Count
                                                                Count      Area      Area
------------------------------------------------------------------------------------------------------------------------------------
### Mode: mode_norm.fast.RCmin_bc, Scenario: mode_norm.fast.RCmin_bc
clk                                     M,D         0      0        0      0.00      0.00        --        --         0         0
------------------------------------------------------------------------------------------------------------------------------------
All Clocks                                          0      0        0      0.00      0.00        --        --         0         0


===========================================================
==== Summary Reporting for Corner mode_norm.slow.RCmax ====
===========================================================

========================================== Summary Table for Corner mode_norm.slow.RCmax ===========================================
Clock /                               Attrs     Sinks Levels    Clock     Clock     Clock       Max    Global  Trans DRC  Cap DRC
Skew Group                                                   Repeater  Repeater   Stdcell   Latency      Skew     Count     Count
                                                                Count      Area      Area
------------------------------------------------------------------------------------------------------------------------------------
### Mode: mode_norm.slow.RCmax, Scenario: mode_norm.slow.RCmax
clk                                     M,D         0      0        0      0.00      0.00        --        --         0         0
------------------------------------------------------------------------------------------------------------------------------------
All Clocks                                          0      0        0      0.00      0.00        --        --         0         0


================================================================
==== Summary Reporting for Corner mode_norm.worst_low.RCmax ====
================================================================

======================================== Summary Table for Corner mode_norm.worst_low.RCmax ========================================
Clock /                               Attrs     Sinks Levels    Clock     Clock     Clock       Max    Global  Trans DRC  Cap DRC
Skew Group                                                   Repeater  Repeater   Stdcell   Latency      Skew     Count     Count
                                                                Count      Area      Area
------------------------------------------------------------------------------------------------------------------------------------
### Mode: mode_norm.worst_low.RCmax, Scenario: mode_norm.worst_low.RCmax
clk                                     M,D         0      0        0      0.00      0.00        --        --         0         0
------------------------------------------------------------------------------------------------------------------------------------
All Clocks                                          0      0        0      0.00      0.00        --        --         0         0


1
Dispatching command : 'report_clock_qor -type latency -show_paths -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.latency
Dispatching command : 'report_clock_qor -type area -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.cell_area
Dispatching command : 'report_clock_qor -type structure -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.structure
Dispatching command : 'report_clock_qor -type drc_violators -all -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.drc_violators
Waiting for all dispatched commands to complete ...
Done.

All command runs are done. Below is the status.

Completed 'report_clock_qor -type latency -show_paths -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.latency'

Completed 'report_clock_qor -type area -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.cell_area'

Completed 'report_clock_qor -type structure -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.structure'

Completed 'report_clock_qor -type drc_violators -all -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.drc_violators'

RM-info: Running report_clock_qor -type power ...

RM-info: Reporting timing constraints ...

Dispatching command : 'report_mode -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_mode
Dispatching command : 'report_pvt -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_pvt
Waiting for all dispatched commands to complete ...
Done.

All command runs are done. Below is the status.

Completed 'report_mode -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_mode'

Completed 'report_pvt -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_pvt'

RM-info: Reporting timing and QoR ...

****************************************
Report : qor
        -summary
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:05:14 2019
****************************************
Information: Timer using 'SI, Timing Window Analysis, AWP, CRPR'. (TIM-050)

Timing
---------------------------------------------------------------------------
Context                                 WNS            TNS            NVE
---------------------------------------------------------------------------
mode_norm.slow.RCmax (Setup)             --           0.00              0
mode_norm.worst_low.RCmax (Setup)             --           0.00              0
Design             (Setup)               --           0.00              0

mode_norm.fast.RCmin_bc (Hold)             --           0.00              0
Design             (Hold)                --           0.00              0
---------------------------------------------------------------------------

Miscellaneous
---------------------------------------------------------------------------
Cell Area (netlist):                              0.00
Cell Area (netlist and physical only):            0.00
Nets with DRC Violations:        0
1
Information: Timer using 'SI, Timing Window Analysis, AWP, CRPR'. (TIM-050)
****************************************
Report : global timing
        -format { narrow }
        -report_by design
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:05:14 2019
****************************************

No setup violations found.


No hold violations found.


1
RM-info: Analyzing design violations ...

****************************************
Report : check_mv_design
        -erc_mode
        -voltage_threshold 0
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:05:14 2019
****************************************

---------- Power domain rule ----------
No errors or warnings.

---------- Supply set rule ----------
No errors or warnings.

---------- Supply net rule ----------
No errors or warnings.

---------- Supply port rule ----------
No errors or warnings.

---------- Isolation strategy rule ----------
No errors or warnings.

---------- Level shifter strategy rule ----------
No errors or warnings.

---------- Retention strategy rule ----------
No errors or warnings.

---------- Power switch strategy rule ----------
No errors or warnings.

---------- Repeater rule ----------
No errors or warnings.

---------- Terminal boundary rule ----------
No errors or warnings.

---------- Isolation cell rule ----------
No errors or warnings.

---------- Level shifter cell rule ----------
No errors or warnings.

---------- Retention cell rule ----------
No errors or warnings.

---------- Switch cell rule ----------
No errors or warnings.

---------- PGMUX rule ----------
No errors or warnings.

---------- Diode cell rule ----------
No errors or warnings.

---------- Model rule ----------
No errors or warnings.

---------- Isolation rule ----------
No errors or warnings.

---------- Voltage shifting rule ----------
No errors or warnings.

---------- Tie-off connection rule ----------
No errors or warnings.

---------- Analog net rule ----------
No errors or warnings.

---------- Physical block pin rule ----------
No errors or warnings.

---------- PG pin rule ----------
No errors or warnings.

---------- Signal pin rule ----------
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/D' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/SI' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/SE' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/CLK' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/SN' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/Q' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/D' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/SI' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/SE' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/CLK' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/SN' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/Q' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/D' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/SI' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/SE' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/CLK' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/SN' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/Q' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_29_/D' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_29_/SI' cannot be determined. (MV-050)
Information: Message 'MV-050' limit (20) exceeded. Remainder will be suppressed. The limit can be changed with '-max_message_count' option. (MV-079)
Information: Total 18642 MV-050 violations. (MV-080)

---------- Summary ----------
Information: Total 18642 error(s) and 0 warning(s) from check_mv_design. (MV-082)
0
****************************************
Report : check_mv_design
        -power_connectivity
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:05:15 2019
****************************************

---------- Power domain rule ----------
No errors or warnings.

---------- Supply set rule ----------
No errors or warnings.

---------- Supply net rule ----------
No errors or warnings.

---------- Supply port rule ----------
No errors or warnings.

---------- Isolation strategy rule ----------
No errors or warnings.

---------- Level shifter strategy rule ----------
No errors or warnings.

---------- Retention strategy rule ----------
No errors or warnings.

---------- Power switch strategy rule ----------
No errors or warnings.

---------- Repeater rule ----------
No errors or warnings.

---------- Terminal boundary rule ----------
No errors or warnings.

---------- Isolation cell rule ----------
No errors or warnings.

---------- Level shifter cell rule ----------
No errors or warnings.

---------- Retention cell rule ----------
No errors or warnings.

---------- Switch cell rule ----------
No errors or warnings.

---------- PGMUX rule ----------
No errors or warnings.

---------- Diode cell rule ----------
No errors or warnings.

---------- Model rule ----------
No errors or warnings.

---------- Isolation rule ----------
No errors or warnings.

---------- Voltage shifting rule ----------
No errors or warnings.

---------- Tie-off connection rule ----------
No errors or warnings.

---------- PG net rule ----------
No errors or warnings.

---------- Analog net rule ----------
No errors or warnings.

---------- Physical block pin rule ----------
No errors or warnings.

---------- PG pin rule ----------
No errors or warnings.

---------- Power connectivity rule ----------
No errors or warnings.

---------- Signal pin rule ----------
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/D' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/SI' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/SE' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/CLK' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/SN' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/Q' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/D' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/SI' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/SE' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/CLK' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/SN' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/Q' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/D' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/SI' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/SE' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/CLK' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/SN' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/Q' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_29_/D' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_29_/SI' cannot be determined. (MV-050)
Information: Message 'MV-050' limit (20) exceeded. Remainder will be suppressed. The limit can be changed with '-max_message_count' option. (MV-079)
Information: Total 18642 MV-050 violations. (MV-080)

---------- Summary ----------
Information: Total 18642 error(s) and 0 warning(s) from check_mv_design. (MV-082)
0
****************************************
Report : check_mv_design
Design : xbar
Version: P-2019.03-SP1
Date   : Thu Sep 12 22:05:16 2019
****************************************

---------- Power domain rule ----------
No errors or warnings.

---------- Supply set rule ----------
No errors or warnings.

---------- Supply net rule ----------
No errors or warnings.

---------- Supply port rule ----------
No errors or warnings.

---------- Isolation strategy rule ----------
No errors or warnings.

---------- Level shifter strategy rule ----------
No errors or warnings.

---------- Retention strategy rule ----------
No errors or warnings.

---------- Power switch strategy rule ----------
No errors or warnings.

---------- Repeater rule ----------
No errors or warnings.

---------- Terminal boundary rule ----------
No errors or warnings.

---------- Isolation cell rule ----------
No errors or warnings.

---------- Level shifter cell rule ----------
No errors or warnings.

---------- Retention cell rule ----------
No errors or warnings.

---------- Switch cell rule ----------
No errors or warnings.

---------- PGMUX rule ----------
No errors or warnings.

---------- Diode cell rule ----------
No errors or warnings.

---------- Model rule ----------
No errors or warnings.

---------- Isolation rule ----------
No errors or warnings.

---------- Voltage shifting rule ----------
No errors or warnings.

---------- Tie-off connection rule ----------
No errors or warnings.

---------- Analog net rule ----------
No errors or warnings.

---------- Physical block pin rule ----------
No errors or warnings.

---------- PG pin rule ----------
No errors or warnings.

---------- Signal pin rule ----------
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/D' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/SI' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/SE' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/CLK' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/SN' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'valid_reg_0_/Q' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/D' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/SI' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/SE' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/CLK' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/SN' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_31_/Q' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/D' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/SI' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/SE' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/CLK' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/SN' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_30_/Q' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_29_/D' cannot be determined. (MV-050)
Error: Power and ground related supply net(s) of signal pin 'out_reg_29_/SI' cannot be determined. (MV-050)
Information: Message 'MV-050' limit (20) exceeded. Remainder will be suppressed. The limit can be changed with '-max_message_count' option. (MV-079)
Information: Total 18642 MV-050 violations. (MV-080)

---------- Summary ----------
Information: Total 18642 error(s) and 0 warning(s) from check_mv_design. (MV-082)
0
Loading cell instances...

Segmentation fault encountered.

Detailed stack trace :
---------------------------------
Thread 16 (Thread 0x7fa74c30f700 (LWP 2530)):
#0  0x00007fa75d8cd993 in select () from /lib64/libc.so.6
#1  0x00000000192860f6 in SNPSee_554ec7c90557bab679d871cd58526530 ()
#2  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#3  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#4  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 15 (Thread 0x7fa74a131700 (LWP 2537)):
#0  0x00007fa769c16a35 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
#1  0x0000000016e0a819 in SNPSee_05df245ab75e88bb922a52816f42e51b56c95f2ebe24276cd0e6e48563956768d71f9b2a14cc67f3b4966d8fd01ea975e42c45ed702021ab ()
#2  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#3  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#4  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 14 (Thread 0x7fa749930700 (LWP 2538)):
#0  0x00007fa769c16a35 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
#1  0x0000000016e0a819 in SNPSee_05df245ab75e88bb922a52816f42e51b56c95f2ebe24276cd0e6e48563956768d71f9b2a14cc67f3b4966d8fd01ea975e42c45ed702021ab ()
#2  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#3  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#4  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 13 (Thread 0x7fa74912f700 (LWP 2539)):
#0  0x00007fa769c16a35 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
#1  0x0000000016e0a819 in SNPSee_05df245ab75e88bb922a52816f42e51b56c95f2ebe24276cd0e6e48563956768d71f9b2a14cc67f3b4966d8fd01ea975e42c45ed702021ab ()
#2  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#3  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#4  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 12 (Thread 0x7fa74892e700 (LWP 2540)):
#0  0x00007fa769c16a35 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
#1  0x0000000016e0a819 in SNPSee_05df245ab75e88bb922a52816f42e51b56c95f2ebe24276cd0e6e48563956768d71f9b2a14cc67f3b4966d8fd01ea975e42c45ed702021ab ()
#2  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#3  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#4  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 11 (Thread 0x7fa74812d700 (LWP 2541)):
#0  0x00007fa769c16a35 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
#1  0x0000000016e0a819 in SNPSee_05df245ab75e88bb922a52816f42e51b56c95f2ebe24276cd0e6e48563956768d71f9b2a14cc67f3b4966d8fd01ea975e42c45ed702021ab ()
#2  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#3  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#4  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 10 (Thread 0x7fa74792c700 (LWP 2542)):
#0  0x00007fa769c16a35 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
#1  0x0000000016e0a819 in SNPSee_05df245ab75e88bb922a52816f42e51b56c95f2ebe24276cd0e6e48563956768d71f9b2a14cc67f3b4966d8fd01ea975e42c45ed702021ab ()
#2  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#3  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#4  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 9 (Thread 0x7fa74712b700 (LWP 2543)):
#0  0x00007fa769c16a35 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
#1  0x0000000016e0a819 in SNPSee_05df245ab75e88bb922a52816f42e51b56c95f2ebe24276cd0e6e48563956768d71f9b2a14cc67f3b4966d8fd01ea975e42c45ed702021ab ()
#2  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#3  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#4  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 8 (Thread 0x7fa74692a700 (LWP 2552)):
#0  0x00007fa75d8d0be9 in syscall () from /lib64/libc.so.6
#1  0x00007fa769e424fa in futex_wait (comparand=2, futex=0x2aca1fac) at ../../include/tbb/machine/linux_common.h:60
#2  P (this=0x2aca1fac) at ../../src/tbb/semaphore.h:206
#3  commit_wait (c=<synthetic pointer>, this=0x2aca1fa0) at ../../src/rml/include/../server/thread_monitor.h:259
#4  tbb::internal::rml::private_worker::run (this=0x2aca1f80) at ../../src/tbb/private_server.cpp:277
#5  0x00007fa769e42519 in tbb::internal::rml::private_worker::thread_routine (arg=<optimized out>) at ../../src/tbb/private_server.cpp:223
#6  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#7  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#8  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 7 (Thread 0x7fa746129700 (LWP 2553)):
#0  0x00007fa75d8d0be9 in syscall () from /lib64/libc.so.6
#1  0x00007fa769e424fa in futex_wait (comparand=2, futex=0x2aca202c) at ../../include/tbb/machine/linux_common.h:60
#2  P (this=0x2aca202c) at ../../src/tbb/semaphore.h:206
#3  commit_wait (c=<synthetic pointer>, this=0x2aca2020) at ../../src/rml/include/../server/thread_monitor.h:259
#4  tbb::internal::rml::private_worker::run (this=0x2aca2000) at ../../src/tbb/private_server.cpp:277
#5  0x00007fa769e42519 in tbb::internal::rml::private_worker::thread_routine (arg=<optimized out>) at ../../src/tbb/private_server.cpp:223
#6  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#7  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#8  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 6 (Thread 0x7fa745928700 (LWP 2554)):
#0  0x00007fa75d8d0be9 in syscall () from /lib64/libc.so.6
#1  0x00007fa769e424fa in futex_wait (comparand=2, futex=0x2aca1eac) at ../../include/tbb/machine/linux_common.h:60
#2  P (this=0x2aca1eac) at ../../src/tbb/semaphore.h:206
#3  commit_wait (c=<synthetic pointer>, this=0x2aca1ea0) at ../../src/rml/include/../server/thread_monitor.h:259
#4  tbb::internal::rml::private_worker::run (this=0x2aca1e80) at ../../src/tbb/private_server.cpp:277
#5  0x00007fa769e42519 in tbb::internal::rml::private_worker::thread_routine (arg=<optimized out>) at ../../src/tbb/private_server.cpp:223
#6  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#7  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#8  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 5 (Thread 0x7fa744926700 (LWP 2555)):
#0  0x00007fa75d8d0be9 in syscall () from /lib64/libc.so.6
#1  0x00007fa769e424fa in futex_wait (comparand=2, futex=0x2aca1dac) at ../../include/tbb/machine/linux_common.h:60
#2  P (this=0x2aca1dac) at ../../src/tbb/semaphore.h:206
#3  commit_wait (c=<synthetic pointer>, this=0x2aca1da0) at ../../src/rml/include/../server/thread_monitor.h:259
#4  tbb::internal::rml::private_worker::run (this=0x2aca1d80) at ../../src/tbb/private_server.cpp:277
#5  0x00007fa769e42519 in tbb::internal::rml::private_worker::thread_routine (arg=<optimized out>) at ../../src/tbb/private_server.cpp:223
#6  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#7  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#8  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 4 (Thread 0x7fa745127700 (LWP 2556)):
#0  0x00007fa75d8d0be9 in syscall () from /lib64/libc.so.6
#1  0x00007fa769e424fa in futex_wait (comparand=2, futex=0x2aca1f2c) at ../../include/tbb/machine/linux_common.h:60
#2  P (this=0x2aca1f2c) at ../../src/tbb/semaphore.h:206
#3  commit_wait (c=<synthetic pointer>, this=0x2aca1f20) at ../../src/rml/include/../server/thread_monitor.h:259
#4  tbb::internal::rml::private_worker::run (this=0x2aca1f00) at ../../src/tbb/private_server.cpp:277
#5  0x00007fa769e42519 in tbb::internal::rml::private_worker::thread_routine (arg=<optimized out>) at ../../src/tbb/private_server.cpp:223
#6  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#7  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#8  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 3 (Thread 0x7fa744125700 (LWP 2558)):
#0  0x00007fa75d8d0be9 in syscall () from /lib64/libc.so.6
#1  0x00007fa769e424fa in futex_wait (comparand=2, futex=0x2aca1d2c) at ../../include/tbb/machine/linux_common.h:60
#2  P (this=0x2aca1d2c) at ../../src/tbb/semaphore.h:206
#3  commit_wait (c=<synthetic pointer>, this=0x2aca1d20) at ../../src/rml/include/../server/thread_monitor.h:259
#4  tbb::internal::rml::private_worker::run (this=0x2aca1d00) at ../../src/tbb/private_server.cpp:277
#5  0x00007fa769e42519 in tbb::internal::rml::private_worker::thread_routine (arg=<optimized out>) at ../../src/tbb/private_server.cpp:223
#6  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#7  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#8  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 2 (Thread 0x7fa743924700 (LWP 2557)):
#0  0x00007fa75d8d0be9 in syscall () from /lib64/libc.so.6
#1  0x00007fa769e424fa in futex_wait (comparand=2, futex=0x2aca1e2c) at ../../include/tbb/machine/linux_common.h:60
#2  P (this=0x2aca1e2c) at ../../src/tbb/semaphore.h:206
#3  commit_wait (c=<synthetic pointer>, this=0x2aca1e20) at ../../src/rml/include/../server/thread_monitor.h:259
#4  tbb::internal::rml::private_worker::run (this=0x2aca1e00) at ../../src/tbb/private_server.cpp:277
#5  0x00007fa769e42519 in tbb::internal::rml::private_worker::thread_routine (arg=<optimized out>) at ../../src/tbb/private_server.cpp:223
#6  0x0000000018533617 in SNPSee_d9c72da67e7a1f57e9891545cd875e2719332304182309de ()
#7  0x00007fa769c12ea5 in start_thread () from /lib64/libpthread.so.0
#8  0x00007fa75d8d68cd in clone () from /lib64/libc.so.6
Thread 1 (Thread 0x7fa76a788b00 (LWP 2527)):
#0  0x00007fa769c1a1d9 in waitpid () from /lib64/libpthread.so.0
#1  0x0000000016d877bb in SNPSee_9ea8dbbd5e74784447e693058ff24d3ffe3b7927ff35ac62eec4782670afaff6 ()
#2  0x0000000016d88e45 in SNPSee_9ea8dbbd5e74784484d3cce2fced02c05a3783bc3b9f8fad6989ef886e673ad9 ()
#3  <signal handler called>
#4  0x0000000005c0a234 in SNPSee_3dda5e59ac267d2bedf4a5c8f552530324d3fac09f64d28874e44e44f8c4e7d6787d5a6db3f99638 ()
#5  0x0000000005c0d870 in SNPSee_3dda5e59ac267d2bedf4a5c8f5525303e3b330cc595384df31e0a46dd007e268c4ca490a58482d93 ()
#6  0x00000000056a22d9 in SNPSee_bb0749f282802f92a3145bb138c628892e330df99562b2bec4d84b855f77c26bec892639366d0b47bf35fb482697483f52c5f30783f18f55e31f059ee2041c5718c3f2e022e82320a0162c2b2297454f45fe7aadecc34366f3f273c3767b71e4125ad648928de30e89eb7755d3bff7e3650c18a2b0deea9e073d5e3dd103acc6bdb800ebf580c744 ()
#7  0x0000000003f0c42f in SNPSee_547564e1f4797623aca9672b768affdb9e758d6ab0caafd22e2223cddfe8996bf3879dea56c6725eda2792c03edd14fe8836d6d44cb58cd83d71e1d79cda9a8b2b5a63b4f32e28668d0b005271240682 ()
#8  0x0000000018f7e398 in SNPSee_b33c09d91ce56faf32f307b3d0d7bfe6a81ece2db4e646fc7bfea8b89aa8d21c72b1b5fed030f4a7deda4e3278b32b4526a3d89237fa738f85fb51d28c1446d9b729f7d279808157 ()
#9  0x0000000018f47d70 in SNPSee_18ae1188a5a6482452f3b67abbc891010269f13ce0e30d67 ()
#10 0x000000001af96f65 in SNPSee_57415c5b07ec5e8b8118f96e6212a2c42c69fd3f49376c0d ()
#11 0x000000001af9bb97 in SNPSee_1ac40924fdff8310f5184d6eb67c5798036a89169a27d790 ()
#12 0x0000000018f44ced in SNPSee_1c61c950c93d6db4 ()
#13 0x0000000018f3a67d in SNPSee_735a5e7d546d8c0ff0c4bed532f4eea37d353e5b671fef4b994f6fafbb31d33ce5f4e349e4b9c0c750e7382091683ac55d66aa26cf621bcf75fcced120b1a1c5d1794f730c52368f ()
#14 0x0000000018f47d70 in SNPSee_18ae1188a5a6482452f3b67abbc891010269f13ce0e30d67 ()
#15 0x000000001af96f65 in SNPSee_57415c5b07ec5e8b8118f96e6212a2c42c69fd3f49376c0d ()
#16 0x000000001af9bb97 in SNPSee_1ac40924fdff8310f5184d6eb67c5798036a89169a27d790 ()
#17 0x0000000018f44ced in SNPSee_1c61c950c93d6db4 ()
#18 0x0000000003114c0d in SNPSee_f62f668e245f79efe54b5f2d03f931ad7ecaf9af860d20f7fc9433e6683c3d2550553c364392ee8bf9937794559c9a886d0ea8372cd75f1132a336b671e9947a5f0dbce46d0e1ca0 ()
#19 0x0000000018f7e398 in SNPSee_b33c09d91ce56faf32f307b3d0d7bfe6a81ece2db4e646fc7bfea8b89aa8d21c72b1b5fed030f4a7deda4e3278b32b4526a3d89237fa738f85fb51d28c1446d9b729f7d279808157 ()
#20 0x0000000018f47d70 in SNPSee_18ae1188a5a6482452f3b67abbc891010269f13ce0e30d67 ()
#21 0x000000001af96f65 in SNPSee_57415c5b07ec5e8b8118f96e6212a2c42c69fd3f49376c0d ()
#22 0x000000001af9bb97 in SNPSee_1ac40924fdff8310f5184d6eb67c5798036a89169a27d790 ()
#23 0x000000001af9dc55 in SNPSee_a00aeeb47fd325df3eff4946e57739a1 ()
#24 0x0000000018f6316f in SNPSee_5b9e0c983f97901fa4e0af164abe7efeb24c5f4c6136879c869b2b88ca4e2632196f4df311f74be6 ()
#25 0x0000000018f3253a in SNPSee_59511b0144537c36c6614840eb25b067 ()
#26 0x0000000018f3b300 in SNPSee_dfcfd18c870f576645dec230cc55940481eea9a4962927b3b2419a5f9f3803d6e6d6151e8a6657b75c63db485ae230e97b8a0dd27c2cdfedd6e7ab8b3504080f ()
#27 0x0000000018f47d70 in SNPSee_18ae1188a5a6482452f3b67abbc891010269f13ce0e30d67 ()
#28 0x000000001af96f65 in SNPSee_57415c5b07ec5e8b8118f96e6212a2c42c69fd3f49376c0d ()
#29 0x000000001af9bb97 in SNPSee_1ac40924fdff8310f5184d6eb67c5798036a89169a27d790 ()
#30 0x000000001af9dc55 in SNPSee_a00aeeb47fd325df3eff4946e57739a1 ()
#31 0x0000000018f6316f in SNPSee_5b9e0c983f97901fa4e0af164abe7efeb24c5f4c6136879c869b2b88ca4e2632196f4df311f74be6 ()
#32 0x0000000018f3253a in SNPSee_59511b0144537c36c6614840eb25b067 ()
#33 0x0000000018f3b300 in SNPSee_dfcfd18c870f576645dec230cc55940481eea9a4962927b3b2419a5f9f3803d6e6d6151e8a6657b75c63db485ae230e97b8a0dd27c2cdfedd6e7ab8b3504080f ()
#34 0x0000000018f47d70 in SNPSee_18ae1188a5a6482452f3b67abbc891010269f13ce0e30d67 ()
#35 0x000000001af96f65 in SNPSee_57415c5b07ec5e8b8118f96e6212a2c42c69fd3f49376c0d ()
#36 0x000000001af9bb97 in SNPSee_1ac40924fdff8310f5184d6eb67c5798036a89169a27d790 ()
#37 0x0000000018f4692e in SNPSee_c9aef8ff45700e7498f09e7fe7ec58c036cd580d7ddf92c3 ()
#38 0x00000000184ce4a2 in SNPSee_b3a63ca9beb66366a2beecdfa325f5f82e97f016bca0535ab6b710a4b29d1994183f15d5fef68fa1042cada8f5593cce ()
#39 0x00000000184d30da in SNPSee_b3a63ca9beb66366a2beecdfa325f5f850e37c16b964335ba934f8a7afefeaf1 ()
#40 0x000000000056ded3 in SNPSee_6188b3f9a7e769c7eb2dc22ab181ff5c0260e7bf3c6e6c5b6dd310362dd3e58b19a33122e2a80c1014bca5a076370ba0686492d474ef148ca36ababef5945158a888f7e536545dec88d039942c447aad829ec3c9a13ccf1352c7f068f1dc0d713b949058f841385ce96831542394be36f2ec7e463409336ff9646fa385cc5a553df93f9156ead7f8 ()
#41 0x00000000005707f8 in SNPSee_5a24f30b88271223 ()
#42 0x00007fa75d7fa545 in __libc_start_main () from /lib64/libc.so.6
#43 0x00000000012e9f7d in SNPSee_d06eed713327be76 ()

The tool has just encountered a fatal error:

If you encountered this fatal error when using the most recent
Synopsys release, submit the above stack trace and a test case that
reproduces the problem to the Synopsys Support Center by using
Enter A Call at http://solvnet.synopsys.com/EnterACall.

* For information about the latest software releases, go to the Synopsys
  SolvNet Release Library at http://solvnet.synopsys.com/ReleaseLibrary.

* For information about required Operating System patches, go to
  http://www.synopsys.com/support


Fatal: Internal system error, cannot recover.
Error code=11

Release = 'P-2019.03-SP1'  Architecture = 'linux64'  Program = 'IC Compiler II'
Exec = '/afs/eos.ncsu.edu/dist/synopsys_apps/icc2_vP-2019.03-SP1/linux64/nwtn/bin/dgcom_exec'

'383289823 140356804994032 96510516 96524400 90841817 66110511 418898840 418676080 452554597 452574103 418663661 418621053 418676080 452554597 452574103 418663661 51465229 418898840 418676080 452554597 452574103 452582485 418787695 418587962 418624256 418676080 452554597 452574103 452582485 418787695 418587962 418624256'
