STIL 1.0 {
    Design 2005;
}
Header {
    Title "Minimal STIL for design `MulDiv'";
    Date "Tue Oct 15 17:42:55 2019";
    Source "DFT Compiler P-2019.03-SP1";
}
Signals {
    "clock" In;
    "io_kill" In;
    "io_req_bits_dw" In;
    "io_req_bits_fn[0]" In;
    "io_req_bits_fn[1]" In;
    "io_req_bits_fn[2]" In;
    "io_req_bits_fn[3]" In;
    "io_req_bits_in1[0]" In;
    "io_req_bits_in1[10]" In;
    "io_req_bits_in1[11]" In;
    "io_req_bits_in1[12]" In;
    "io_req_bits_in1[13]" In;
    "io_req_bits_in1[14]" In;
    "io_req_bits_in1[15]" In;
    "io_req_bits_in1[16]" In;
    "io_req_bits_in1[17]" In;
    "io_req_bits_in1[18]" In;
    "io_req_bits_in1[19]" In;
    "io_req_bits_in1[1]" In;
    "io_req_bits_in1[20]" In;
    "io_req_bits_in1[21]" In;
    "io_req_bits_in1[22]" In;
    "io_req_bits_in1[23]" In;
    "io_req_bits_in1[24]" In;
    "io_req_bits_in1[25]" In;
    "io_req_bits_in1[26]" In;
    "io_req_bits_in1[27]" In;
    "io_req_bits_in1[28]" In;
    "io_req_bits_in1[29]" In;
    "io_req_bits_in1[2]" In;
    "io_req_bits_in1[30]" In;
    "io_req_bits_in1[31]" In;
    "io_req_bits_in1[32]" In;
    "io_req_bits_in1[33]" In;
    "io_req_bits_in1[34]" In;
    "io_req_bits_in1[35]" In;
    "io_req_bits_in1[36]" In;
    "io_req_bits_in1[37]" In;
    "io_req_bits_in1[38]" In;
    "io_req_bits_in1[39]" In;
    "io_req_bits_in1[3]" In;
    "io_req_bits_in1[40]" In;
    "io_req_bits_in1[41]" In;
    "io_req_bits_in1[42]" In;
    "io_req_bits_in1[43]" In;
    "io_req_bits_in1[44]" In;
    "io_req_bits_in1[45]" In;
    "io_req_bits_in1[46]" In;
    "io_req_bits_in1[47]" In;
    "io_req_bits_in1[48]" In;
    "io_req_bits_in1[49]" In;
    "io_req_bits_in1[4]" In;
    "io_req_bits_in1[50]" In;
    "io_req_bits_in1[51]" In;
    "io_req_bits_in1[52]" In;
    "io_req_bits_in1[53]" In;
    "io_req_bits_in1[54]" In;
    "io_req_bits_in1[55]" In;
    "io_req_bits_in1[56]" In;
    "io_req_bits_in1[57]" In;
    "io_req_bits_in1[58]" In;
    "io_req_bits_in1[59]" In;
    "io_req_bits_in1[5]" In;
    "io_req_bits_in1[60]" In;
    "io_req_bits_in1[61]" In;
    "io_req_bits_in1[62]" In;
    "io_req_bits_in1[63]" In;
    "io_req_bits_in1[6]" In;
    "io_req_bits_in1[7]" In;
    "io_req_bits_in1[8]" In;
    "io_req_bits_in1[9]" In;
    "io_req_bits_in2[0]" In;
    "io_req_bits_in2[10]" In;
    "io_req_bits_in2[11]" In;
    "io_req_bits_in2[12]" In;
    "io_req_bits_in2[13]" In;
    "io_req_bits_in2[14]" In;
    "io_req_bits_in2[15]" In;
    "io_req_bits_in2[16]" In;
    "io_req_bits_in2[17]" In;
    "io_req_bits_in2[18]" In;
    "io_req_bits_in2[19]" In;
    "io_req_bits_in2[1]" In;
    "io_req_bits_in2[20]" In;
    "io_req_bits_in2[21]" In;
    "io_req_bits_in2[22]" In;
    "io_req_bits_in2[23]" In;
    "io_req_bits_in2[24]" In;
    "io_req_bits_in2[25]" In;
    "io_req_bits_in2[26]" In;
    "io_req_bits_in2[27]" In;
    "io_req_bits_in2[28]" In;
    "io_req_bits_in2[29]" In;
    "io_req_bits_in2[2]" In;
    "io_req_bits_in2[30]" In;
    "io_req_bits_in2[31]" In;
    "io_req_bits_in2[32]" In;
    "io_req_bits_in2[33]" In;
    "io_req_bits_in2[34]" In;
    "io_req_bits_in2[35]" In;
    "io_req_bits_in2[36]" In;
    "io_req_bits_in2[37]" In;
    "io_req_bits_in2[38]" In;
    "io_req_bits_in2[39]" In;
    "io_req_bits_in2[3]" In;
    "io_req_bits_in2[40]" In;
    "io_req_bits_in2[41]" In;
    "io_req_bits_in2[42]" In;
    "io_req_bits_in2[43]" In;
    "io_req_bits_in2[44]" In;
    "io_req_bits_in2[45]" In;
    "io_req_bits_in2[46]" In;
    "io_req_bits_in2[47]" In;
    "io_req_bits_in2[48]" In;
    "io_req_bits_in2[49]" In;
    "io_req_bits_in2[4]" In;
    "io_req_bits_in2[50]" In;
    "io_req_bits_in2[51]" In;
    "io_req_bits_in2[52]" In;
    "io_req_bits_in2[53]" In;
    "io_req_bits_in2[54]" In;
    "io_req_bits_in2[55]" In;
    "io_req_bits_in2[56]" In;
    "io_req_bits_in2[57]" In;
    "io_req_bits_in2[58]" In;
    "io_req_bits_in2[59]" In;
    "io_req_bits_in2[5]" In;
    "io_req_bits_in2[60]" In;
    "io_req_bits_in2[61]" In;
    "io_req_bits_in2[62]" In;
    "io_req_bits_in2[63]" In;
    "io_req_bits_in2[6]" In;
    "io_req_bits_in2[7]" In;
    "io_req_bits_in2[8]" In;
    "io_req_bits_in2[9]" In;
    "io_req_bits_tag[0]" In;
    "io_req_bits_tag[1]" In;
    "io_req_bits_tag[2]" In;
    "io_req_bits_tag[3]" In;
    "io_req_bits_tag[4]" In;
    "io_req_valid" In;
    "io_resp_ready" In;
    "reset" In;
    "io_req_ready" Out;
    "io_resp_bits_data[0]" Out;
    "io_resp_bits_data[10]" Out;
    "io_resp_bits_data[11]" Out;
    "io_resp_bits_data[12]" Out;
    "io_resp_bits_data[13]" Out;
    "io_resp_bits_data[14]" Out;
    "io_resp_bits_data[15]" Out;
    "io_resp_bits_data[16]" Out;
    "io_resp_bits_data[17]" Out;
    "io_resp_bits_data[18]" Out;
    "io_resp_bits_data[19]" Out;
    "io_resp_bits_data[1]" Out;
    "io_resp_bits_data[20]" Out;
    "io_resp_bits_data[21]" Out;
    "io_resp_bits_data[22]" Out;
    "io_resp_bits_data[23]" Out;
    "io_resp_bits_data[24]" Out;
    "io_resp_bits_data[25]" Out;
    "io_resp_bits_data[26]" Out;
    "io_resp_bits_data[27]" Out;
    "io_resp_bits_data[28]" Out;
    "io_resp_bits_data[29]" Out;
    "io_resp_bits_data[2]" Out;
    "io_resp_bits_data[30]" Out;
    "io_resp_bits_data[31]" Out;
    "io_resp_bits_data[32]" Out;
    "io_resp_bits_data[33]" Out;
    "io_resp_bits_data[34]" Out;
    "io_resp_bits_data[35]" Out;
    "io_resp_bits_data[36]" Out;
    "io_resp_bits_data[37]" Out;
    "io_resp_bits_data[38]" Out;
    "io_resp_bits_data[39]" Out;
    "io_resp_bits_data[3]" Out;
    "io_resp_bits_data[40]" Out;
    "io_resp_bits_data[41]" Out;
    "io_resp_bits_data[42]" Out;
    "io_resp_bits_data[43]" Out;
    "io_resp_bits_data[44]" Out;
    "io_resp_bits_data[45]" Out;
    "io_resp_bits_data[46]" Out;
    "io_resp_bits_data[47]" Out;
    "io_resp_bits_data[48]" Out;
    "io_resp_bits_data[49]" Out;
    "io_resp_bits_data[4]" Out;
    "io_resp_bits_data[50]" Out;
    "io_resp_bits_data[51]" Out;
    "io_resp_bits_data[52]" Out;
    "io_resp_bits_data[53]" Out;
    "io_resp_bits_data[54]" Out;
    "io_resp_bits_data[55]" Out;
    "io_resp_bits_data[56]" Out;
    "io_resp_bits_data[57]" Out;
    "io_resp_bits_data[58]" Out;
    "io_resp_bits_data[59]" Out;
    "io_resp_bits_data[5]" Out;
    "io_resp_bits_data[60]" Out;
    "io_resp_bits_data[61]" Out;
    "io_resp_bits_data[62]" Out;
    "io_resp_bits_data[63]" Out;
    "io_resp_bits_data[6]" Out;
    "io_resp_bits_data[7]" Out;
    "io_resp_bits_data[8]" Out;
    "io_resp_bits_data[9]" Out;
    "io_resp_bits_tag[0]" Out;
    "io_resp_bits_tag[1]" Out;
    "io_resp_bits_tag[2]" Out;
    "io_resp_bits_tag[3]" Out;
    "io_resp_bits_tag[4]" Out;
    "io_resp_valid" Out;
    "test_si" In;
    "test_se" In;
}
SignalGroups {
    "_si" = '"test_si"' {
        ScanIn;
    }
    "_so" = '"io_resp_bits_tag[4]"' {
        ScanOut;
    }
    "_clk" = '"clock" + "reset"';
    "all_inputs" = '"clock" + "io_kill" + "io_req_bits_dw" + "io_req_bits_fn[0]" 
    + "io_req_bits_fn[1]" + "io_req_bits_fn[2]" + "io_req_bits_fn[3]" + 
    "io_req_bits_in1[0]" + "io_req_bits_in1[10]" + "io_req_bits_in1[11]" + 
    "io_req_bits_in1[12]" + "io_req_bits_in1[13]" + "io_req_bits_in1[14]" + 
    "io_req_bits_in1[15]" + "io_req_bits_in1[16]" + "io_req_bits_in1[17]" + 
    "io_req_bits_in1[18]" + "io_req_bits_in1[19]" + "io_req_bits_in1[1]" + 
    "io_req_bits_in1[20]" + "io_req_bits_in1[21]" + "io_req_bits_in1[22]" + 
    "io_req_bits_in1[23]" + "io_req_bits_in1[24]" + "io_req_bits_in1[25]" + 
    "io_req_bits_in1[26]" + "io_req_bits_in1[27]" + "io_req_bits_in1[28]" + 
    "io_req_bits_in1[29]" + "io_req_bits_in1[2]" + "io_req_bits_in1[30]" + 
    "io_req_bits_in1[31]" + "io_req_bits_in1[32]" + "io_req_bits_in1[33]" + 
    "io_req_bits_in1[34]" + "io_req_bits_in1[35]" + "io_req_bits_in1[36]" + 
    "io_req_bits_in1[37]" + "io_req_bits_in1[38]" + "io_req_bits_in1[39]" + 
    "io_req_bits_in1[3]" + "io_req_bits_in1[40]" + "io_req_bits_in1[41]" + 
    "io_req_bits_in1[42]" + "io_req_bits_in1[43]" + "io_req_bits_in1[44]" + 
    "io_req_bits_in1[45]" + "io_req_bits_in1[46]" + "io_req_bits_in1[47]" + 
    "io_req_bits_in1[48]" + "io_req_bits_in1[49]" + "io_req_bits_in1[4]" + 
    "io_req_bits_in1[50]" + "io_req_bits_in1[51]" + "io_req_bits_in1[52]" + 
    "io_req_bits_in1[53]" + "io_req_bits_in1[54]" + "io_req_bits_in1[55]" + 
    "io_req_bits_in1[56]" + "io_req_bits_in1[57]" + "io_req_bits_in1[58]" + 
    "io_req_bits_in1[59]" + "io_req_bits_in1[5]" + "io_req_bits_in1[60]" + 
    "io_req_bits_in1[61]" + "io_req_bits_in1[62]" + "io_req_bits_in1[63]" + 
    "io_req_bits_in1[6]" + "io_req_bits_in1[7]" + "io_req_bits_in1[8]" + 
    "io_req_bits_in1[9]" + "io_req_bits_in2[0]" + "io_req_bits_in2[10]" + 
    "io_req_bits_in2[11]" + "io_req_bits_in2[12]" + "io_req_bits_in2[13]" + 
    "io_req_bits_in2[14]" + "io_req_bits_in2[15]" + "io_req_bits_in2[16]" + 
    "io_req_bits_in2[17]" + "io_req_bits_in2[18]" + "io_req_bits_in2[19]" + 
    "io_req_bits_in2[1]" + "io_req_bits_in2[20]" + "io_req_bits_in2[21]" + 
    "io_req_bits_in2[22]" + "io_req_bits_in2[23]" + "io_req_bits_in2[24]" + 
    "io_req_bits_in2[25]" + "io_req_bits_in2[26]" + "io_req_bits_in2[27]" + 
    "io_req_bits_in2[28]" + "io_req_bits_in2[29]" + "io_req_bits_in2[2]" + 
    "io_req_bits_in2[30]" + "io_req_bits_in2[31]" + "io_req_bits_in2[32]" + 
    "io_req_bits_in2[33]" + "io_req_bits_in2[34]" + "io_req_bits_in2[35]" + 
    "io_req_bits_in2[36]" + "io_req_bits_in2[37]" + "io_req_bits_in2[38]" + 
    "io_req_bits_in2[39]" + "io_req_bits_in2[3]" + "io_req_bits_in2[40]" + 
    "io_req_bits_in2[41]" + "io_req_bits_in2[42]" + "io_req_bits_in2[43]" + 
    "io_req_bits_in2[44]" + "io_req_bits_in2[45]" + "io_req_bits_in2[46]" + 
    "io_req_bits_in2[47]" + "io_req_bits_in2[48]" + "io_req_bits_in2[49]" + 
    "io_req_bits_in2[4]" + "io_req_bits_in2[50]" + "io_req_bits_in2[51]" + 
    "io_req_bits_in2[52]" + "io_req_bits_in2[53]" + "io_req_bits_in2[54]" + 
    "io_req_bits_in2[55]" + "io_req_bits_in2[56]" + "io_req_bits_in2[57]" + 
    "io_req_bits_in2[58]" + "io_req_bits_in2[59]" + "io_req_bits_in2[5]" + 
    "io_req_bits_in2[60]" + "io_req_bits_in2[61]" + "io_req_bits_in2[62]" + 
    "io_req_bits_in2[63]" + "io_req_bits_in2[6]" + "io_req_bits_in2[7]" + 
    "io_req_bits_in2[8]" + "io_req_bits_in2[9]" + "io_req_bits_tag[0]" + 
    "io_req_bits_tag[1]" + "io_req_bits_tag[2]" + "io_req_bits_tag[3]" + 
    "io_req_bits_tag[4]" + "io_req_valid" + "io_resp_ready" + "reset" + 
    "test_si" + "test_se"';
    "all_outputs" = '"io_req_ready" + "io_resp_bits_data[0]" + 
    "io_resp_bits_data[10]" + "io_resp_bits_data[11]" + "io_resp_bits_data[12]" 
    + "io_resp_bits_data[13]" + "io_resp_bits_data[14]" + 
    "io_resp_bits_data[15]" + "io_resp_bits_data[16]" + "io_resp_bits_data[17]" 
    + "io_resp_bits_data[18]" + "io_resp_bits_data[19]" + "io_resp_bits_data[1]" 
    + "io_resp_bits_data[20]" + "io_resp_bits_data[21]" + 
    "io_resp_bits_data[22]" + "io_resp_bits_data[23]" + "io_resp_bits_data[24]" 
    + "io_resp_bits_data[25]" + "io_resp_bits_data[26]" + 
    "io_resp_bits_data[27]" + "io_resp_bits_data[28]" + "io_resp_bits_data[29]" 
    + "io_resp_bits_data[2]" + "io_resp_bits_data[30]" + "io_resp_bits_data[31]" 
    + "io_resp_bits_data[32]" + "io_resp_bits_data[33]" + 
    "io_resp_bits_data[34]" + "io_resp_bits_data[35]" + "io_resp_bits_data[36]" 
    + "io_resp_bits_data[37]" + "io_resp_bits_data[38]" + 
    "io_resp_bits_data[39]" + "io_resp_bits_data[3]" + "io_resp_bits_data[40]" + 
    "io_resp_bits_data[41]" + "io_resp_bits_data[42]" + "io_resp_bits_data[43]" 
    + "io_resp_bits_data[44]" + "io_resp_bits_data[45]" + 
    "io_resp_bits_data[46]" + "io_resp_bits_data[47]" + "io_resp_bits_data[48]" 
    + "io_resp_bits_data[49]" + "io_resp_bits_data[4]" + "io_resp_bits_data[50]" 
    + "io_resp_bits_data[51]" + "io_resp_bits_data[52]" + 
    "io_resp_bits_data[53]" + "io_resp_bits_data[54]" + "io_resp_bits_data[55]" 
    + "io_resp_bits_data[56]" + "io_resp_bits_data[57]" + 
    "io_resp_bits_data[58]" + "io_resp_bits_data[59]" + "io_resp_bits_data[5]" + 
    "io_resp_bits_data[60]" + "io_resp_bits_data[61]" + "io_resp_bits_data[62]" 
    + "io_resp_bits_data[63]" + "io_resp_bits_data[6]" + "io_resp_bits_data[7]" 
    + "io_resp_bits_data[8]" + "io_resp_bits_data[9]" + "io_resp_bits_tag[0]" + 
    "io_resp_bits_tag[1]" + "io_resp_bits_tag[2]" + "io_resp_bits_tag[3]" + 
    "io_resp_bits_tag[4]" + "io_resp_valid"';
    "all_ports" = '"all_inputs" + "all_outputs"';
    "_pi" = '"clock" + "io_kill" + "io_req_bits_dw" + "io_req_bits_fn[0]" + 
    "io_req_bits_fn[1]" + "io_req_bits_fn[2]" + "io_req_bits_fn[3]" + 
    "io_req_bits_in1[0]" + "io_req_bits_in1[10]" + "io_req_bits_in1[11]" + 
    "io_req_bits_in1[12]" + "io_req_bits_in1[13]" + "io_req_bits_in1[14]" + 
    "io_req_bits_in1[15]" + "io_req_bits_in1[16]" + "io_req_bits_in1[17]" + 
    "io_req_bits_in1[18]" + "io_req_bits_in1[19]" + "io_req_bits_in1[1]" + 
    "io_req_bits_in1[20]" + "io_req_bits_in1[21]" + "io_req_bits_in1[22]" + 
    "io_req_bits_in1[23]" + "io_req_bits_in1[24]" + "io_req_bits_in1[25]" + 
    "io_req_bits_in1[26]" + "io_req_bits_in1[27]" + "io_req_bits_in1[28]" + 
    "io_req_bits_in1[29]" + "io_req_bits_in1[2]" + "io_req_bits_in1[30]" + 
    "io_req_bits_in1[31]" + "io_req_bits_in1[32]" + "io_req_bits_in1[33]" + 
    "io_req_bits_in1[34]" + "io_req_bits_in1[35]" + "io_req_bits_in1[36]" + 
    "io_req_bits_in1[37]" + "io_req_bits_in1[38]" + "io_req_bits_in1[39]" + 
    "io_req_bits_in1[3]" + "io_req_bits_in1[40]" + "io_req_bits_in1[41]" + 
    "io_req_bits_in1[42]" + "io_req_bits_in1[43]" + "io_req_bits_in1[44]" + 
    "io_req_bits_in1[45]" + "io_req_bits_in1[46]" + "io_req_bits_in1[47]" + 
    "io_req_bits_in1[48]" + "io_req_bits_in1[49]" + "io_req_bits_in1[4]" + 
    "io_req_bits_in1[50]" + "io_req_bits_in1[51]" + "io_req_bits_in1[52]" + 
    "io_req_bits_in1[53]" + "io_req_bits_in1[54]" + "io_req_bits_in1[55]" + 
    "io_req_bits_in1[56]" + "io_req_bits_in1[57]" + "io_req_bits_in1[58]" + 
    "io_req_bits_in1[59]" + "io_req_bits_in1[5]" + "io_req_bits_in1[60]" + 
    "io_req_bits_in1[61]" + "io_req_bits_in1[62]" + "io_req_bits_in1[63]" + 
    "io_req_bits_in1[6]" + "io_req_bits_in1[7]" + "io_req_bits_in1[8]" + 
    "io_req_bits_in1[9]" + "io_req_bits_in2[0]" + "io_req_bits_in2[10]" + 
    "io_req_bits_in2[11]" + "io_req_bits_in2[12]" + "io_req_bits_in2[13]" + 
    "io_req_bits_in2[14]" + "io_req_bits_in2[15]" + "io_req_bits_in2[16]" + 
    "io_req_bits_in2[17]" + "io_req_bits_in2[18]" + "io_req_bits_in2[19]" + 
    "io_req_bits_in2[1]" + "io_req_bits_in2[20]" + "io_req_bits_in2[21]" + 
    "io_req_bits_in2[22]" + "io_req_bits_in2[23]" + "io_req_bits_in2[24]" + 
    "io_req_bits_in2[25]" + "io_req_bits_in2[26]" + "io_req_bits_in2[27]" + 
    "io_req_bits_in2[28]" + "io_req_bits_in2[29]" + "io_req_bits_in2[2]" + 
    "io_req_bits_in2[30]" + "io_req_bits_in2[31]" + "io_req_bits_in2[32]" + 
    "io_req_bits_in2[33]" + "io_req_bits_in2[34]" + "io_req_bits_in2[35]" + 
    "io_req_bits_in2[36]" + "io_req_bits_in2[37]" + "io_req_bits_in2[38]" + 
    "io_req_bits_in2[39]" + "io_req_bits_in2[3]" + "io_req_bits_in2[40]" + 
    "io_req_bits_in2[41]" + "io_req_bits_in2[42]" + "io_req_bits_in2[43]" + 
    "io_req_bits_in2[44]" + "io_req_bits_in2[45]" + "io_req_bits_in2[46]" + 
    "io_req_bits_in2[47]" + "io_req_bits_in2[48]" + "io_req_bits_in2[49]" + 
    "io_req_bits_in2[4]" + "io_req_bits_in2[50]" + "io_req_bits_in2[51]" + 
    "io_req_bits_in2[52]" + "io_req_bits_in2[53]" + "io_req_bits_in2[54]" + 
    "io_req_bits_in2[55]" + "io_req_bits_in2[56]" + "io_req_bits_in2[57]" + 
    "io_req_bits_in2[58]" + "io_req_bits_in2[59]" + "io_req_bits_in2[5]" + 
    "io_req_bits_in2[60]" + "io_req_bits_in2[61]" + "io_req_bits_in2[62]" + 
    "io_req_bits_in2[63]" + "io_req_bits_in2[6]" + "io_req_bits_in2[7]" + 
    "io_req_bits_in2[8]" + "io_req_bits_in2[9]" + "io_req_bits_tag[0]" + 
    "io_req_bits_tag[1]" + "io_req_bits_tag[2]" + "io_req_bits_tag[3]" + 
    "io_req_bits_tag[4]" + "io_req_valid" + "io_resp_ready" + "reset" + 
    "test_si" + "test_se"';
    "_po" = '"io_req_ready" + "io_resp_bits_data[0]" + "io_resp_bits_data[10]" + 
    "io_resp_bits_data[11]" + "io_resp_bits_data[12]" + "io_resp_bits_data[13]" 
    + "io_resp_bits_data[14]" + "io_resp_bits_data[15]" + 
    "io_resp_bits_data[16]" + "io_resp_bits_data[17]" + "io_resp_bits_data[18]" 
    + "io_resp_bits_data[19]" + "io_resp_bits_data[1]" + "io_resp_bits_data[20]" 
    + "io_resp_bits_data[21]" + "io_resp_bits_data[22]" + 
    "io_resp_bits_data[23]" + "io_resp_bits_data[24]" + "io_resp_bits_data[25]" 
    + "io_resp_bits_data[26]" + "io_resp_bits_data[27]" + 
    "io_resp_bits_data[28]" + "io_resp_bits_data[29]" + "io_resp_bits_data[2]" + 
    "io_resp_bits_data[30]" + "io_resp_bits_data[31]" + "io_resp_bits_data[32]" 
    + "io_resp_bits_data[33]" + "io_resp_bits_data[34]" + 
    "io_resp_bits_data[35]" + "io_resp_bits_data[36]" + "io_resp_bits_data[37]" 
    + "io_resp_bits_data[38]" + "io_resp_bits_data[39]" + "io_resp_bits_data[3]" 
    + "io_resp_bits_data[40]" + "io_resp_bits_data[41]" + 
    "io_resp_bits_data[42]" + "io_resp_bits_data[43]" + "io_resp_bits_data[44]" 
    + "io_resp_bits_data[45]" + "io_resp_bits_data[46]" + 
    "io_resp_bits_data[47]" + "io_resp_bits_data[48]" + "io_resp_bits_data[49]" 
    + "io_resp_bits_data[4]" + "io_resp_bits_data[50]" + "io_resp_bits_data[51]" 
    + "io_resp_bits_data[52]" + "io_resp_bits_data[53]" + 
    "io_resp_bits_data[54]" + "io_resp_bits_data[55]" + "io_resp_bits_data[56]" 
    + "io_resp_bits_data[57]" + "io_resp_bits_data[58]" + 
    "io_resp_bits_data[59]" + "io_resp_bits_data[5]" + "io_resp_bits_data[60]" + 
    "io_resp_bits_data[61]" + "io_resp_bits_data[62]" + "io_resp_bits_data[63]" 
    + "io_resp_bits_data[6]" + "io_resp_bits_data[7]" + "io_resp_bits_data[8]" + 
    "io_resp_bits_data[9]" + "io_resp_bits_tag[0]" + "io_resp_bits_tag[1]" + 
    "io_resp_bits_tag[2]" + "io_resp_bits_tag[3]" + "io_resp_bits_tag[4]" + 
    "io_resp_valid"';
}
ScanStructures {
    ScanChain "1" {
        ScanLength 214;
        ScanIn "test_si";
        ScanOut "io_resp_bits_tag[4]";
        ScanEnable "test_se";
        ScanMasterClock "clock";
    }
}
Timing {
    WaveformTable "_default_WFT_" {
        Period '100ns';
        Waveforms {
            "all_inputs" {
                0 {
                    '0ns' D;
                }
            }
            "all_inputs" {
                1 {
                    '0ns' U;
                }
            }
            "all_inputs" {
                Z {
                    '0ns' Z;
                }
            }
            "all_inputs" {
                N {
                    '0ns' N;
                }
            }
            "all_outputs" {
                X {
                    '0ns' X;
                    '40ns' X;
                }
            }
            "all_outputs" {
                H {
                    '0ns' X;
                    '40ns' H;
                }
            }
            "all_outputs" {
                T {
                    '0ns' X;
                    '40ns' T;
                }
            }
            "all_outputs" {
                L {
                    '0ns' X;
                    '40ns' L;
                }
            }
            "clock" {
                P {
                    '0ns' D;
                    '45ns' U;
                    '55ns' D;
                }
            }
            "reset" {
                P {
                    '0ns' D;
                    '45ns' U;
                    '55ns' D;
                }
            }
        }
    }
    WaveformTable "_multiclock_capture_WFT_" {
        Period '100ns';
        Waveforms {
            "all_inputs" {
                0 {
                    '0ns' D;
                }
            }
            "all_inputs" {
                1 {
                    '0ns' U;
                }
            }
            "all_inputs" {
                Z {
                    '0ns' Z;
                }
            }
            "all_inputs" {
                N {
                    '0ns' N;
                }
            }
            "all_outputs" {
                X {
                    '0ns' X;
                    '40ns' X;
                }
            }
            "all_outputs" {
                H {
                    '0ns' X;
                    '40ns' H;
                }
            }
            "all_outputs" {
                T {
                    '0ns' X;
                    '40ns' T;
                }
            }
            "all_outputs" {
                L {
                    '0ns' X;
                    '40ns' L;
                }
            }
            "clock" {
                P {
                    '0ns' D;
                    '45ns' U;
                    '55ns' D;
                }
            }
            "reset" {
                P {
                    '0ns' D;
                    '45ns' U;
                    '55ns' D;
                }
            }
        }
    }
    WaveformTable "_allclock_capture_WFT_" {
        Period '100ns';
        Waveforms {
            "all_inputs" {
                0 {
                    '0ns' D;
                }
            }
            "all_inputs" {
                1 {
                    '0ns' U;
                }
            }
            "all_inputs" {
                Z {
                    '0ns' Z;
                }
            }
            "all_inputs" {
                N {
                    '0ns' N;
                }
            }
            "all_outputs" {
                X {
                    '0ns' X;
                    '40ns' X;
                }
            }
            "all_outputs" {
                H {
                    '0ns' X;
                    '40ns' H;
                }
            }
            "all_outputs" {
                T {
                    '0ns' X;
                    '40ns' T;
                }
            }
            "all_outputs" {
                L {
                    '0ns' X;
                    '40ns' L;
                }
            }
            "clock" {
                P {
                    '0ns' D;
                    '45ns' U;
                    '55ns' D;
                }
            }
            "reset" {
                P {
                    '0ns' D;
                    '45ns' U;
                    '55ns' D;
                }
            }
        }
    }
    WaveformTable "_allclock_launch_WFT_" {
        Period '100ns';
        Waveforms {
            "all_inputs" {
                0 {
                    '0ns' D;
                }
            }
            "all_inputs" {
                1 {
                    '0ns' U;
                }
            }
            "all_inputs" {
                Z {
                    '0ns' Z;
                }
            }
            "all_inputs" {
                N {
                    '0ns' N;
                }
            }
            "all_outputs" {
                X {
                    '0ns' X;
                    '40ns' X;
                }
            }
            "all_outputs" {
                H {
                    '0ns' X;
                    '40ns' H;
                }
            }
            "all_outputs" {
                T {
                    '0ns' X;
                    '40ns' T;
                }
            }
            "all_outputs" {
                L {
                    '0ns' X;
                    '40ns' L;
                }
            }
            "clock" {
                P {
                    '0ns' D;
                    '45ns' U;
                    '55ns' D;
                }
            }
            "reset" {
                P {
                    '0ns' D;
                    '45ns' U;
                    '55ns' D;
                }
            }
        }
    }
    WaveformTable "_allclock_launch_capture_WFT_" {
        Period '100ns';
        Waveforms {
            "all_inputs" {
                0 {
                    '0ns' D;
                }
            }
            "all_inputs" {
                1 {
                    '0ns' U;
                }
            }
            "all_inputs" {
                Z {
                    '0ns' Z;
                }
            }
            "all_inputs" {
                N {
                    '0ns' N;
                }
            }
            "all_outputs" {
                X {
                    '0ns' X;
                    '40ns' X;
                }
            }
            "all_outputs" {
                H {
                    '0ns' X;
                    '40ns' H;
                }
            }
            "all_outputs" {
                T {
                    '0ns' X;
                    '40ns' T;
                }
            }
            "all_outputs" {
                L {
                    '0ns' X;
                    '40ns' L;
                }
            }
            "clock" {
                P {
                    '0ns' D;
                    '45ns' U;
                    '55ns' D;
                }
            }
            "reset" {
                P {
                    '0ns' D;
                    '45ns' U;
                    '55ns' D;
                }
            }
        }
    }
}
Procedures {
    "multiclock_capture" {
        W "_multiclock_capture_WFT_";
        C {
            "all_inputs" = 0 \r141 N 0NN;
            "all_outputs" = \r71 X;
        }
        V {
            "_pi" = \r145 #;
            "_po" = \r71 #;
        }
    }
    "allclock_capture" {
        W "_allclock_capture_WFT_";
        C {
            "all_inputs" = 0 \r141 N 0NN;
            "all_outputs" = \r71 X;
        }
        V {
            "_pi" = \r145 #;
            "_po" = \r71 #;
        }
    }
    "allclock_launch" {
        W "_allclock_launch_WFT_";
        C {
            "all_inputs" = 0 \r141 N 0NN;
            "all_outputs" = \r71 X;
        }
        V {
            "_pi" = \r145 #;
            "_po" = \r71 #;
        }
    }
    "allclock_launch_capture" {
        W "_allclock_launch_capture_WFT_";
        C {
            "all_inputs" = 0 \r141 N 0NN;
            "all_outputs" = \r71 X;
        }
        V {
            "_pi" = \r145 #;
            "_po" = \r71 #;
        }
    }
    "load_unload" {
        W "_default_WFT_";
        C {
            "all_inputs" = 0 \r141 N 0NN;
            "all_outputs" = \r71 X;
        }
        "Internal_scan_pre_shift" : V {
            "test_se" = 1;
        }
        Shift {
            V {
                "_clk" = P0;
                "_si" = #;
                "_so" = #;
            }
        }
    }
}
MacroDefs {
    "test_setup" {
        W "_default_WFT_";
        C {
            "all_inputs" = \r145 N;
            "all_outputs" = \r71 X;
        }
        V {
            "clock" = 0;
            "reset" = 0;
        }
        V {
        }
    }
}

