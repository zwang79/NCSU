####################################################################################
# Synopsys(R) Design Compiler(R) Reference Methodology Release Notes
# Version: P-2019.03-SP2 
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
####################################################################################

P-2019.03-SP2
=============
Design Compiler Reference Methodology version P-2019.03-SP2 provides the following new features, enhancements, and changes.

* Beginning with the P-2019.03-SP2 release, use the 
  set_app_var compile_enable_total_power_optimization true variable to enable total power 
  optimization (TPO).

Updated Files
------------
* dc(_top).tcl

* Added the set_app_var compile_enable_total_power_optimization true variable

Updated Files
------------
* dc_setup.tcl

* Added the set_app_var compile_enable_total_power_optimization true variable


P-2019.03
=============
Design Compiler Reference Methodology version P-2019.03 provides the following new features, enhancements, and changes.

* Beginning with the P-2019.03 release, you can use dcnxt_shell as the default shell. 
  The Design Compiler NXT tool is script-compatible with the Design Compiler tool, which 
  means you can seamlessly transition to the new shell


Updated Files
------------
* dc.tcl

Common Changes in dc.tcl
------------------------------
* Added comments to include High Performance Cores Megaswitch if needed for DC-NXT

 # Use the set_technology and set_hpc_options commands either before the compile_ultra 
 # command or before the compile_ultra -incremental command to set the core- and stage-specific
 # settings for high performance cores. 
 # See the "Applying Required Settings for High Performance Cores"
 # section in the Design Compiler User Guide for details.
 # Note: This is a Design Compiler NXT feature and is not supported in other flavors of the tool.
 # set_hpc_options -core <core> -stage compile_inc
 # Any individual settings applied after using the set_hpc_options command
 # override the recommended settings.

Updated Files
------------
* dc(_top).tcl

* Changed the set_host_options command to use 8 cores for the Design Compiler NXT tool

Updated Files
------------
* dc_setup.tcl

* Changed the set_host_options command to use 8 cores (set_host_options -max_cores 8) for the Design Compiler NXT tool


O-2018.06-SP4
=============
Design Compiler Reference Methodology version O-2018.06-SP4 provides the following new features, enhancements, and changes.

Updated Files
------------
*  dc(_top).tcl

Common Changes in dc(_top).tcl
------------------------------
* Added comments to update the saif_map database if a SAIF file is not available and a PrimePower mapping file is still required for a design. This can be achieved by using the following settings: 
       set track_reg [get_object_name [all_registers]]  
       foreach map_reg $track_regs { 
       set RTL_NAME [regsub  {_reg} $map_reg {}] 
       saif_map -add_name $RTL_NAME $map_reg 
       }



O-2018.06-SP2 
=============

This release of the Design Compiler Reference Methodology does not include
any product-specific changes.


O-2018.06 
=============
Design Compiler Reference Methodology version O-2018.06 provides the following new features, enhancements, and changes.

Updated Files
------------
*  dc(_top).tcl

Common Changes in dc(_top).tcl
------------------------------
* Added the command to specify how densely the tool can pack cells in uncongested  
  regions to remove congestion in congested regions.
  
  set_congestion_options -max_util 0.90

* Added the critical range to determine which multibit registers to rework on for 
  timing optimization.
  
  set_multibit_options -mode timing_only -critical_range 0.1

* Added the Shift Power Control Groups feature to DFTMAX ULTRA flows

N-2017.09-SP4
=============
Design Compiler Reference Methodology version N-2017.09-SP4 provides the following new features, enhancements, and changes.

Updated Files
------------
*  dc(_top).tcl

Common Changes in dc(_top).tcl
------------------------------

* Added the "set_app_var hdlin_enable_hier_map true" HDL variable to help verification when there are differences between Design Compiler and Formality while inferring logical hierarchies.
* Added a comment to enable the compile_timing_high_effort variable in the default RM flow to improve timing at the cost of runtime.
* Initialized the SAIF name mapping database

Updated Files
------------
* dc_setup.tcl

* Changed the set_host_options command to use 4 cores (set_host_options -max_cores 4) and enable multicore optimization for runtime improvement


N-2017.09-SP2
=============
Design Compiler Reference Methodology version N-2017.09-SP2 provides the following new features, enhancements, and changes:

Updated Files
------------
*  dc(_top).tcl

Common Changes in dc(_top).tcl
------------------------------

* Added support to write out verbose supplemental UPF for the save_upf command.
* Multibit banking reporting is now default in the hplp flow.

Updated Files
------------
*  fm(_top).tcl

Common Changes in fm(_top).tcl
------------------------------
* Changed the load_upf command to use the -target dc_netlist option instead of the dc_pg_netlist option to support logical netlists with supplemental verbose

N-2017.09
=============
Design Compiler Reference Methodology version N-2017.09 provides the following new features, enhancements, and changes:

* Changed the default for UPF from Golden to Prime


M-2016.12-SP4
=============
Design Compiler Reference Methodology version M-2016.12-SP4 provides the following 
new features, enhancements, and changes.

Updated Files
------------
*  dc(_top).tcl

Common Changes in dc(_top).tcl
------------------------------
* Added the placer_tns_driven variable which helps to reduce the total negative slack 
  of a design during first compile in the high-performance low-power (hplp) flow.

* Added the compile_register_replication_across_hierarchy variable to enable 
  register replication across hierarchies to improve the timing of the design 
  during first compile in the high-performance low-power (hplp) flow.

* Added the placer_max_cell_density_threshold variable that enables a coarse placement mode 
  in which cells can clump together. The value is set to 0.75 for better QOR. 
  The setting is added before first compile in the high-performance low-power (hplp) flow.

* Added the -allow_physical_cells option to the extract_physical_constraints command for 
  the high-performance low-power (hplp) flow.


M-2016.12-SP2
=============
Design Compiler Reference Methodology version M-2016.12-SP2 provides the following 
new features, enhancements, and changes.


Updated Files
------------
*  dc_setup.tcl
*  dc(_top).tcl

Changes in dc_setup.tcl
------------------------------
*  Added support to handle Synopsys logic library dont_use lists for optimization

Common Changes in dc(_top).tcl
------------------------------
* Added the psynopt_tns_high_effort variable to enable high-effort optimization to fix total negative slack 
  during the first compile in the High Performance Low Power (hplp) flow.
* Enabled congestion-driven placement during incremental compile in
  the high-performance low-power (hplp) flow.
* In the high-performance low-power (hplp) flow, physically aware multibit banking 
  is moved to just after the first compile_ultra.
* Changed the set_preserve_clock_gating command name to set_preserve_clock_gate.
* Changed the report_multibit -hierarchy command name to report_multibit -hierarchical.

M-2016.12
=============

This release of the Design Compiler Reference Methodology does not include
any product-specific changes.

L-2016.03-SP4
=============
Design Compiler Reference Methodology version L-2016.03-SP4 provides the following 
new features, enhancements, and changes.

Updated Files
------------
*  common_setup.tcl
*  dc_setup.tcl
*  dc(_top).tcl
*  dc_setup_filenames.tcl

Changes in common_setup.tcl
------------------------------
* Added support to handle custom dont_use lists for optimization

Changes in dc_setup.tcl
-----------------------
* Added support for RM+ flow in Design Compiler RM. The flows that are supported are:
  - High-performance low-power (hplp)
  - High connectivity (hc)
  - Runtime exploration (rtm_exp)

Changes in dc_setup_filenames.tcl
------------------------------
* Added support for DesignWare reporting

Common Changes in dc(_top).tcl
------------------------------
* Added support for RM+ flow 
* Added DFTMAX Compression support for insertion of shift power groups to reduce power consumption during scan shift
* Added reports for DesignWare


L-2016.03-SP2
=============
Design Compiler Reference Methodology version L-2016.03-SP2 provides the following 
new features, enhancements, and changes.

Updated Files
------------
*  dc(_top).tcl
*  dc_setup_filenames.tcl

Common Changes in dc(_top).tcl
------------------------------
*  Added comment to enable RTL multibit inference flow and reporting of
multibit register banks for all Design Compiler flows.
*  Added comment to enable placement-aware multibit banking for physical guidance flow.
* compile_ultra -incremental -scan has been added to all non-DFT flows.
* write_icc2_files has been moved to after the change_names command.


Common Changes in dc_setup_filenames.tcl
----------------------------------------
* Added file names in multibit reports for all Design Compiler flows.
* Added file names in placement-aware multibit banking script for physical
guidance flow.

L-2016.03
=============
Design Compiler Reference Methodology version L-2016.03 provides the following new features, enhancements, and changes.

Updated Files
------------
*  dc(_top).tcl

Common Changes in dc(_top).tcl
------------------------------
* compile_ultra -incremental -scan has been added to the non-DFT physical guidance flow.


K-2015.06-SP4
=============
This releases of the Design Compiler Reference Methodology does not include
any product-specific changes.


K-2015.06-SP2
=============
Design Compiler Reference Methodology version K-2015.06-SP2 provides the following 
new features, enhancements, and changes.

Updated Files
------------
*  dc(_top).tcl
*  dc_setup_filenames.tcl

Common Changes in dc(_top).tcl
------------------------------
* Simplified Verilog output naming to keep PG Verilog and non-PG Verilog file
choices consistent for tools that cannot handle a PG Verilog file.

* Added pipelined scan data configuration for all DFTMAX and DFTMAX Ultra flows.  

* Added streaming DFT planner to allow the visualization of DFTMAX Ultra architecture.

* Fixed how multicorner-multimode designs save their constraints to ensure that all scenarios
are saved and not just the active scenarios.

Changes in dc_setup_filenames.tcl
---------------------------------

* The DCRM_FINAL_DESIGN_ICC2 variable has been added to provide the ASCII files
needed for customers using IC Compiler II.

* The DCRM_FINAL_PG_VERILOG_OUTPUT_FILE variable has been added to write out the
PG version of the Verilog netlist to simplify scripting.


K-2015.06
=========
Design Compiler Reference Methodology version K-2015.06 provides the following
new features, enhancements, and changes.

Updated Files
------------
*  dc(_top).tcl
*  dc_setup_filenames.tcl

Common Changes in dc(_top).tcl
------------------------------

In the golden UPF flow, the non-PG Verilog netlist is also written out for
tools that do not support a PG Verilog netlist, for example TetraMAX.  

Changes in dc_setup_filenames.tcl
---------------------------------

The DCRM_FINAL_NONPG_VERILOG_OUTPUT_FILE command has been added to write out the
non-PG version of the Verilog netlist for tools that do not support a PG
netlist.


J-2014.09-SP2
=============

Design Compiler Reference Methodology version J-2014.09-SP2 provides the following
new features, enhancements, and changes.

Updated Files
-------------

*  dc(_top).tcl
*  dc_setup.tcl

General Updates
---------------

*  The QoR Strategy option has been removed from RMgen.

   The -timing_high_effort_script option is ignored in the compile_ultra command.

*  A comment explaining how to enable the Synopsys Milkyway(TM) extended layer mode 
   support has been added.

*  In the multicorner-multimode flow, for each active scenario, the active scenario 
   is set before the Standard Parasitic Exchange Format (SPEF), Standard Delay 
   Format (SDF), and Synopsys Design Constraints (SDC) files are saved.

*  In the hierarchical multivoltage IEEE 1801 flow, block designs do not need to 
   be removed to save the top-only UPF file.
   
   IEEE 1801 is also known as Unified Power Format (UPF).

Common Changes in dc(_top).tcl
------------------------------

In the multicorner-multimode flow, to correctly save the information for each 
active scenario, the active scenario is set before the SPEF, SDF, and SDC files 
are saved.

Unique Changes in dc_top.tcl
----------------------------

In the multivoltage UPF flow, the hierarchical designs are not removed when the 
top-only UPF file is saved because the tool automatically skips the physical 
hierarchy blocks and Design Compiler block abstractions.

Changes in dc_setup.tcl
-----------------------

A comment explaining how to enable the Milkyway extended layer mode support has 
been added.

Lynx Compatibility
------------------

This release provides enhancements in the Lynx-compatible reference
methodology flow. For information about these enhancements, see the
file named Release_Notes.LynxCompatible-RM.txt.


J-2014.09
=========

Design Compiler Reference Methodology version J-2014.09 provides the following
new features, enhancements, and changes.

Updated Files
-------------

*  dc(_top).tcl
*  fm(_top).tcl
*  dc_setup.tcl
*  dc_setup_filenames.tcl
*  dc.mcmm.scenarios.tcl
*  vclp(_top).tcl, formerly vsi(_top).tcl

General Updates
---------------

*  Interface logic model (ILM) support has been removed from the scripts.

*  The Leakage Power option has been removed from RMgen.

   Leakage power optimization is now enabled by default in the Design Compiler tool.

*  Low-power placement flow support has been added to the scripts.

   To enable this flow, set the new Low-Power Placement option to TRUE in RMgen.

*  XOR self-gating flow support has been added to the scripts.

   To enable this flow, set the new XOR Self-Gating option to TRUE in RMgen.

*  Information about Synopsys DesignWare(R) datapath extraction has been added to 
   the scripts.

*  Information about top-down design-for-test (DFT) insertion with partitions and 
   defining multiple test modes for the DFT synthesis flow has been added to the 
   scripts.

*  The name of the Synopsys Verdi(R) Signoff-LP Low Power Static Signoff Reference 
   Methodology has been changed to Synopsys Verification Compiler(TM) Low Power 
   Static Signoff Reference Methodology to match the new tool name. For more 
   information, see the file named Release_Notes.VCLP-RM.txt.

Common Changes in dc(_top).tcl
------------------------------

*  Information about top-down DFT insertion with partitions and defining multiple 
   test modes for the DFT synthesis flow has been added to the scripts.

*  The set_leakage_optimization command has been removed from the scripts.

*  The set_dynamic_optimization command has been added to the scripts to control 
   the low-power placement flow.

*  XOR self-gating flow support has been added to the scripts:

   o  The -self_gating option is added to the compile_ultra command when the XOR 
      self-gating flow is enabled.

   o  The set_self_gating_options command has been added to the scripts.
   
      The -interaction_with_clock_gating option setting is controlled by the new 
      Clock-Gating Interaction option in RMgen.

   o  The report_self_gating command is included in the scripts. 

*  A comment has been added to enable DesignWare datapath extraction through the
   analyze_datapath_extraction command.

Unique Changes in dc.tcl
------------------------

*  The create_ilm command has been removed from the script.

*  The compare_interface_timing command has been removed from the script.

*  For SystemVerilog designs in the hierarchical flow, the wrapper strategy has
   been implemented in the scripts to elaborate the block designs correctly.

Unique Changes in dc_top.tcl
----------------------------

*  The read_test_model command has been removed from the script. 

*  The link_portname_allow_period_to_match_underscore variable setting has been 
   added to the script as a comment. 

   In the hierarchical flow, this variable enables the linker to allow a period (.) 
   as an alternative to an underscore (_) during port name matching on SystemVerilog 
   designs with interface ports.

*  After the elaboration of the top design, the removal of the hierarchical blocks 
   that were read uses the hdl_template attribute to identify correctly which 
   design to remove. 

Common Changes in fm(_top).tcl
------------------------------

The hdlin_error_on_mismatch_message variable setting has been updated to the
remove_mismatch_message_filter all command to control simulation-synthesis 
mismatch messages.

Changes in dc_setup.tcl
-----------------------

*  The DC_ILM_HIER_DESIGNS and ICC_ILM_HIER_DESIGNS variables have been removed
   from the script.

*  For the hierarchical flow, the SV_WRAPPER_DESIGN_NAME variable has been defined 
   to specify the wrapper design name on SystemVerilog block designs with interface 
   ports.
   
   When this variable is set, the block design is elaborated by using the 
   SystemVerilog wrapper strategy described in Synopsys SolvNet(R) article 039318, 
   "Building SystemVerilog Designs Using a Bottom-Up Approach," at 
   https://solvnet.synopsys.com/retrieve/039318.html.

Changes in dc_setup_filenames.tcl
---------------------------------

*  The DCRM_ANALYZE_DATAPATH_EXTRACTION_REPORT variable has been defined to point
   to the report file generated by the analyze_datapath_extraction command.

*  The DCRM_FINAL_ILM_INTERFACE_TIMING_REPORT, 
   DCRM_FINAL_ILM_CHECK_INTERFACE_TIMING_REPORT, and DCRM_FINAL_ILM_DDC_OUTPUT_FILE 
   variable definitions have been removed from the script.

Changes in dc.mcmm.scenarios.tcl
--------------------------------

A comment about the set_scenario_options command has been added for the low-power 
placement flow.

Lynx Compatibility
------------------

This release provides enhancements in the Lynx-compatible reference
methodology flow. For information about these enhancements, see the
file named Release_Notes.LynxCompatible-RM.txt.


I-2013.12-SP4
=============

Design Compiler Reference Methodology version I-2013.12-SP4 provides the following
new features, enhancements, and changes.

Updated Files
-------------

*  dc(_top).tcl
*  dc_setup.tcl
*  dc_setup_filenames.tcl

General Updates
---------------

*  Support has been added for the Synopsys DC Explorer tool.

   To generate dc.tcl and dc_top.tcl scripts that are compatible with both the 
   Design Compiler and DC Explorer tools, set the new DC Explorer Compatible 
   option to TRUE in RMgen.

   The DC Explorer compatible versions of these scripts might issue some DESH or 
   CMD messages when you run them with the DC Explorer tool. For more information 
   about these messages, see the DC Explorer User Guide.

   When you perform early RTL exploration, the netlist that the DC Explorer tool 
   generates in some particular flows might not be verifiable by the Synopsys 
   Formality(R) tool. For more information, see the DC Explorer User Guide.

*  The support of via resistance in RC estimations has been enabled by default for 
   the physical guidance flow by setting spg_enable_via_resistance_support to TRUE.

Common Changes in dc(_top).tcl
------------------------------

*  For the physical guidance flow, via resistance support in RC estimations is now
   enabled by default.
   
   The spg_enable_via_resistance_support variable is set to TRUE.

*  The new DC Explorer compatible versions of the scripts perform the following 
   tasks:

   o  For the multicorner-multimode flow, the scripts check to verify that 
      Design Compiler is running in topographical mode or that the physical flow 
      has been enabled in DC Explorer.
      
      Otherwise, the script execution ends.

   o  For a multivoltage IEEE 1801 flow (golden UPF or UPF-prime) in DC Explorer,
      the scripts execute the generate_rtl_upf command only to create a modified 
      version of the UPF input file.
      
      IEEE is also known as Unified Power Format (UPF).

   o  For the multivoltage UPF-prime flow, when the shell is running in exploration 
      mode, the scripts
    
       -- Include the power and ground information when saving the Verilog netlist

       -- Execute the save_upf command with the -supplemental option

   o  For the DFT synthesis flow, the scripts verify that the shell is running in
      exploration mode before executing the following commands:

      preview_dft
      insert_dft
      compile_ultra -incremental
      write_scan_def
      check_scan_def
      write_test_model
      report_dft_signal
      write_test_protocol
      current_test_mode
      report_scan_path
      dft_drc
      set_dft_drc_configuration

   o  In the DFT synthesis flow, the scripts re-create the default path groups 
      only when the shell is not running in exploration mode.

   o  The scripts execute the optimize_netlist command only when the shell is not 
      running in exploration mode.

   o  The scripts execute the report_area -physical command and the 
      report_congestion command only when Design Compiler is running in 
      topographical mode or the physical flow is enabled in DC Explorer.

   o  The scripts execute the report_missing_constraints and report_design_mismatch 
      commands only when the shell is running in exploration mode.

Unique Changes in dc_top.tcl
----------------------------

The DC Explorer compatible version of the script marks Synopsys logical database 
(.ddc) blocks as physical hierarchies only when Design Compiler is running in 
topographical mode or the physical flow is enabled in DC Explorer.

Changes in dc_setup.tcl
-----------------------

For the DC Explorer compatible version of the Design Compiler Reference Methodology 
scripts:

*  The Design Compiler or DC Explorer setup variable is executed only if 
   $synopsys_program_name is "dc_shell" or "de_shell"
  
*  A comment has been added showing how to enable the DC Explorer physical flow by
   setting de_enable_physical_flow to true

*  For the multivoltage UPF flow, a comment has been added showing you how to use 
   top-level signal ports instead of an isolation power controller by setting the
   upf_auto_iso_enable_source variable to top_level_port

Changes in dc_setup_filenames.tcl
---------------------------------

For the DC Explorer compatible version of the Design Compiler Reference Methodology 
scripts, the following variables have been declared to define report file names:

*  To save the report from the report_missing_constraints command, 
   DCRM_DCE_MISSING_CONSTRAINTS_REPORT is set to 
   ${DESIGN_NAME}.missing_constraints.rpt.

*  To save the report from the report_design_mismatch command, 
   DCRM_DCE_DESIGN_MISMATCH_REPORT is set to ${DESIGN_NAME}.design_mismatch.rpt.

Lynx Compatibility
------------------

This release provides enhancements in the Lynx-compatible reference
methodology flow. For information about these enhancements, see the
file named Release_Notes.LynxCompatible-RM.txt.


I-2013.12-SP2
=============

Design Compiler Reference Methodology version I-2013.12-SP2 provides the following
new features, enhancements, and changes.

Updated Files
-------------

*  dc(_top).tcl
*  fm(_top).tcl
*  dc_setup.tcl
*  dc_setup_filenames.tcl


General Updates
---------------

*  Support has been added for the Synopsys golden UPF flow, which is an alternative 
   method for maintaining the IEEE 1801 multivoltage power intent of the design. 
   IEEE 1801 is also known as Unified Power Format (UPF).

   o  A new option, UPF Flow, has been added to the RMgen interface on the 
      Synopsys SolvNet(R) online support site.

      The UPF Flow option is set to GOLDEN by default to enable the golden UPF flow. 
      Set this option to PRIME if you need to use the UPF-prime (traditional) flow. 
      The UPF Flow option is available only when the Multi-Voltage UPF option is 
      set to TRUE. 
      
   o  You can use the Synopsys Design Compiler Reference Methodology and the 
      Synopsys Formality(R) Reference Methodology to perform the golden UPF 
      synthesis flow.

      The final Verilog netlist includes the power and ground (PG) nets and ports.

   o  In this release, the Synopsys MVRC Static Verification Reference Methodology 
      and Synopsys Verdi(R) Signoff-LP Low Power Static Signoff Reference 
      Methodology scripts are available only for the UPF-prime (traditional) flow.

*  In order to ensure that synthesis object names follow the same naming 
   convention used by other tools at the RTL level, the 
   hdlin_enable_upf_compatible_naming variable is set to true for the
   multivoltage UPF flow.

*  The optimize_netlist -area command has been added to the scripts.

   This commands performs  monotonic gate-to-gate optimization on mapped designs,
   thus improving area without degrading timing or leakage. 

*  The quality of results (QoR) snapshot report command, create_qor_snapshot, 
   has been added to the scripts.

Common Changes in dc(_top).tcl
------------------------------

*  The optimize_netlist -area command has been added to the scripts.

*  For the golden UPF flow,

   o  The supplemental UPF file is created by the save_upf command
   o  The final Verilog netlist includes the PG nets and ports

*  The QoR snapshot report command, create_qor_snapshot, has been added 
   to the scripts.

Common Changes in fm(_top).tcl
------------------------------

*  For multivoltage UPF flows, the implementation design is loaded from the
   final Verilog netlist created by the Design Compiler Reference Methodology
   scripts.

*  For the golden UPF flow only,

   o  The implementation UPF file is loaded by reading the golden 
      ($DCRM_MV_UPF_INPUT_FILE) and supplemental ($DCRM_MV_FINAL_UPF_OUTPUT_FILE) 
      UPF files

   o  The implementation design netlist used for verification includes the 
      PG information

Changes in dc_setup.tcl
-----------------------

*  For the multivoltage UPF flow, the hdlin_enable_upf_compatible_naming variable
   is set to true.

*  To enable the golden UPF flow, the enable_golden_upf variable is set to true 
   when the UPF Flow option is set to GOLDEN in RMgen.

Changes in dc_setup_filenames.tcl
---------------------------------

*  For the golden UPF flow, the DCRM_MV_FINAL_UPF_OUTPUT_FILE variable is set to 
   ${DESIGN_NAME}.supplement.upf.
   
   For the UPF-prime flow, this variable is set to ${DESIGN_NAME}.mapped.upf.

*  The DCRM_DCT_FINAL_QOR_SNAPSHOT_FOLDER and DCRM_DCT_FINAL_QOR_SNAPSHOT_REPORT
   variables have been defined to save the QoR snapshot report.

Lynx Compatibility
------------------

This release provides enhancements in the Lynx-compatible reference
methodology flow. For information about these enhancements, see the
file named Release_Notes.LynxCompatible-RM.txt.


I-2013.12
=========

Design Compiler Reference Methodology version I-2013.12 provides the following
new features, enhancements, and changes.

General Updates
---------------

*  The MVRC Static Verification Reference Methodology scripts have been enhanced. 
   For details, see the file named Release_Notes.MVRC-RM.txt.

*  The new Synopsys Verdi(R) Signoff-LP Low Power Static Signoff Reference 
   Methodology scripts are included in this release. For details, see the file 
   named Release_Notes.VSI-RM.txt.

*  Support has been added for Synopsys DFTMAX(TM) Ultra compression.

*  Pin-limited compression support has been removed from the scripts.

*  Fuzzy name matching has been replaced with enhanced rule-based object matching.

*  The standard cell physical guidance is now created to support physical guidance 
   ASCII handoff to IC Compiler by the write_def command.


Common Changes in dc(_top).tcl
---------------------------------

*  Fuzzy name matching has been replaced with enhanced rule-based object matching:

   o  The set_fuzzy_query_options command has been replace with the 
      set_query_rules command.

   o  The fuzzy_matching_enabled variable has been replace with the 
      enable_rule_based_query variable.

*  A comment has been added explaining how to enable physically-aware clock gating 
   for physical guidance in Design Compiler Graphical.

*  Information has been added about enabling via resistance support for 
   RC estimation, to improve the timing correlation with IC Compiler, by using
   the spg_enable_via_resistance_support variable.

*  Information has been added about how to stop constant propagation by using 
   the set_compile_directives command.

*  The DFTMAX Ultra configuration is included in the scripts as part of the
   support for the DFTMAX Ultra tool.

*  Standard cell physical guidance is now created by the write_def command, 
   replacing the start_icc_dp call.

*  Information has been added about the usage of Zroute for estimating and 
   reporting routing-related congestion.


Unique Changes in dc_top.tcl
----------------------------

*  Information has been added about the -block_update_setup_script option of the 
   set_top_implementation_options command.

*  The compile_enable_constant_propagation_with_no_boundary_opt variable has been 
   added to prevent upward constant propagation.

*  Hierarchical designs are now removed using a single remove_design command.

*  The remove_design command is now executed before each write command to exclude 
   GTECH versions of hierarchical designs.

*  The Verilog netlist is now saved first, before saving the Synopsys logical 
   database format (.ddc) netlist, to minimize the number of remove_design commands 
   that are performed.


Lynx Compatibility
------------------

This release provides enhancements in the Lynx-compatible reference
methodology flow. For information about these enhancements, see the
file named Release_Notes.LynxCompatible-RM.txt.


H-2013.03-SP2
=============

Design Compiler Reference Methodology version H-2013.03-SP2 provides the following
new features, enhancements, and changes.

General Updates
---------------

*  The Dynamic Power option in the Low Power Optimization section has been removed
   from RMgen on the Synopsys SolvNet(R) online support site.

*  The Leakage Power option in the Low Power Optimization section has been updated:

   o  The TRUE and FALSE settings enable and disable leakage power optimization 
      respectively

   o  The COUNT setting has been removed

*  The Synopsys Formality(R) hierarchical multivoltage verification flow now 
   supports Formality power models, enabling complete and accurate power-aware 
   verification in a bottom-up IEEE 1801 flow. 

   IEEE 1801 is also known as Unified Power Format (UPF).

*  The autoread flow has been improved, reducing the number of modifications
   needed in the generated RTL script used to read the RTL into the reference
   container in the Formality tool.

Common Changes in dc(_top).tcl
------------------------------

*  A comment has been added to set the threshold voltage groups in the libraries
   for multithreshold designs.

*  A comment has been added to report the number, area, and percentage of cells
   for each threshold voltage group in the design.

*  A comment has been added that can guide you to identify and report instantiated 
   clock gates in the Clock Gating Setup section.

*  The DFT configuration has been updated to set the set_scan_configuration
   -preserve_multibit_segment option to false. 

   This command treats the cells inside a multibit component as discrete sequential 
   cells, which improves scan chain balancing.

*  The autoread flow has been updated. 

   The read_file -autoread command has been replaced with the analyze -autoread 
   command and the corresponding elaborate command to generate the Formality 
   autoread RTL script without the set_top command.

Unique Changes in dc_top.tcl
----------------------------

The UPF files for full-chip RTL UPF and full-chip mapped UPF are no longer generated 
because hierarchical multivoltage verification is now performed using Formality 
power models.

Common Changes in fm(_top).tcl
------------------------------

The autoread flow has been updated to execute the set_top command for the reference 
container from the fm(_top).tcl script instead of the autoread RTL script.

Unique Changes in fm.tcl
------------------------

For hierarchical multivoltage verification, power models are now created for each
hierarchical design.

Unique Changes in fm_top.tcl
----------------------------

For hierarchical multivoltage verification, power models are now read in for each 
hierarchical design.

Changes in dc_setup_filenames.tcl
---------------------------------

*  The new DCRM_THRESHOLD_VOLTAGE_GROUP_REPORT variable specifies the name of the
   report file for the report_threshold_voltage_group command results.

*  The new DCRM_INSTANTIATE_CLOCK_GATES_REPORT variable specifies the name of the
   report file for the report_clock_gating -multi_stage command results.

Lynx Compatibility
------------------

This release provides enhancements in the Lynx-compatible reference
methodology flow. For information about these enhancements, see the
file named Release_Notes.LynxCompatible-RM.txt.


H-2013.03
=========

Design Compiler Reference Methodology version H-2013.03 provides the following 
new features, enhancements, and changes.

General Updates
---------------

*  Duplicate reference methodology version banners have been removed from the 
   Lynx-compatible scripts for the Design Compiler and Synopsys Formality(R) tools.

*  The Synopsys Milkyway(TM) library setup variables--MW_POWER_NET, MW_POWER_PORT, 
   MW_GROUND_NET, and MW_GROUND_PORT--have been removed from common_setup.tcl and 
   are now defined in icc_setup.tcl.

Common Changes in dc(_top).tcl
------------------------------

*  A comment about the set_self_gating_options command has been added in order
   to specify self-gating options.

*  A comment about the compile_ultra -layer_optimization option has been
   added.

   You can use this option to improve the accuracy of certain net delays
   during optimization.

*  The set_svf off command has been moved to improve Formality guidance and
   now follows the commands that save the design data.

*  A typographical error has been fixed in the dft_drc verbose command.

*  The duplicate reference methodology version banner has been removed from
   the Lynx-compatible scripts.

Common Changes in fm(_top).tcl
------------------------------

The duplicate reference methodology version banner has been removed from the 
Lynx-compatible scripts.

Changes in common_setup.tcl
---------------------------

The following Milkyway library setup variables have been removed:

*  MW_POWER_NET
*  MW_POWER_PORT
*  MW_GROUND_NET
*  MW_GROUND_PORT

These variables are now defined in icc_setup.tcl for the IC Compiler Reference 
Methodology.

Changes in dc_setup.tcl
-----------------------

The following Milkyway-related variable declarations have been removed:

*  mw_logic0_net
*  mw_logic1_net

Lynx Compatibility
------------------

This release provides enhancements in the Lynx-compatible reference
methodology flow. For information about these enhancements, see the
file named Release_Notes.LynxCompatible-RM.txt.


G-2012.06-SP4
=============

The following sections describe new features, changes, and enhancements in the
Design Compiler Reference Methodology version G-2012.06-SP4.

General Updates
---------------

*  Support has been added for Design Compiler block abstractions.

*  The recommended -macro option for the IC Compiler write_def command, used 
   to create the Design Exchange Format (DEF) file, has been replaced with the 
   -fixed option to pass floorplan information with fixed standard cells back 
   to Design Compiler.

*  The set_port_location command has been replaced with the create_terminal
   command to include port locations in the floorplan information.

*  Support has been added for shared codec I/O pins with on-chip clocking in
   DFTMAX. 

Changes in dc_setup_filenames.tcl
---------------------------------

The tool command language (Tcl) procedures dcrm_compile_ultra_tio_filename and 
dcrm_mapped_tio_filename are now included to control the naming of updated 
Design Compiler block abstractions after transparent interface optimization.

Changes in dc_setup.tcl
-----------------------

*  The DC_BLOCK_ABSTRACTION_DESIGNS variable has been defined to list the 
   Design Compiler block abstraction hierarchical designs without transparent
   interface optimization.

*  The DC_BLOCK_ABSTRACTION_DESIGNS_TIO variable has been defined to list the 
   Design Compiler block abstraction hierarchical designs with transparent 
   interface Optimization.

*  Conditional checks have been added to avoid incorrect settings because
   block abstractions and interface logic models (ILMs) are not supported in the
   same session.

Common Changes in dc(_top).tcl
------------------------------

*  In the write_def command, the -macro option has been replaced with the 
   -fixed option.

*  Updated Design Compiler blocks are now saved after the first compile.

*  The set_port_location command has been replaced with the create_terminal
   command to include port locations in the floorplan information.

Unique Changes in dc.tcl
------------------------

The create_block_abstraction command is now included to support Design
Compiler block abstractions.

Unique Changes in dc_top.tcl
----------------------------

*  The set_top_implementation_options command has been added to specify
   the blocks that should be read as block abstractions, based on the
   ${DC_BLOCK_ABSTRACTION_DESIGNS} and ${DC_BLOCK_ABSTRACTION_DESIGNS_TIO} 
   variables.

*  The check_block_abstraction command has been added to check for design
   errors.

*  Updated Design Compiler blocks with transparent interface optimization 
   are now saved in Synopsys logical database format (.ddc).

Lynx Compatibility 
------------------

This release provides enhancements in the Lynx-compatible reference 
methodology flow. For information about these enhancements, see the 
file named Release_Notes.LynxCompatible-RM.txt.


G-2012.06
=========

The following sections describe new features, changes, and enhancements in the
Design Compiler Reference Methodology version G-2012.06.

General Updates
---------------

*  The hierarchical flow now supports physical guidance.

*  Support has been added for IC Compiler block abstractions.

*  Scan compression is now enabled by default when you include a DFT flow.

*  Design Compiler and the reference methodology scripts now create supply set 
   handles by default.
   
   The primary, default isolation, and default retention supply set handles are 
   created when the power domains are created.

*  A comment about how to access Visual UPF in Design Vision has been added.

   You can use Visual UPF to generate an IEEE 1801 template for your design. 
   IEEE 1801 is also known as Unified Power Format (UPF).

*  The dc.upf file has been updated to include the following examples:

   o  Example 1: UPF using supply set handles and supply sets
   o  Example 2: UPF using domain-dependent supply nets


Changes in dc_setup_filenames.tcl
---------------------------------

*  The DCRM_DCT_SPG_PLACEMENT_OUTPUT_FILE definition has been included, as a
   comment, to enable the standard cell placement output in the physical
   guidance flow.

*  The DCRM_FINAL_SELF_GATING_REPORT variable specifies the name of the report file 
   for the XOR self-gating results.

*  The DCRM_DFT_DRC_CONFIGURED_SUMMARY_REPORT variable has been removed.

   Only verbose reports are saved. Summary reports for dft_drc are included 
   in the Design Compiler execution.


Changes in dc_setup.tcl
-----------------------

*  The ICC_BLOCK_ABSTRACTION_DESIGNS variable has been defined to list IC Compiler
   block abstraction hierarchical design names.

*  A comment has been added to set upf_create_implicit_supply_sets to false when 
   your UPF specification has domain-dependent supply nets.
   
   By default, the tool creates supply set handles.


Common Changes in dc(_top).tcl
------------------------------

*  The -congestion option for the compile_ultra command has been removed from 
   the flow.

   You can use physical guidance instead.

*  The physical guidance flow now supports ASCII output of the standard cell 
   placement information for input to the IC Compiler Reference Methodology. 
   
   This capability requires an extra Design Compiler Graphical license or an 
   IC Compiler Design Planning license. To enable the file creation, uncomment 
   the DCRM_DCT_SPG_PLACEMENT_OUTPUT_FILE variable definition in 
   dc_setup_filenme.tcl.

*  You can now use ${DCRM_SDC_INPUT_FILE}, ${DCRM_CONSTRAINTS_INPUT_FILE}, or both 
   to constrain the design. The tool reads both files if they exist.

*  Ports being created during insert_dft are added to path groups to improve
   optimization results.

*  Information about how to use enable XOR self-gating has been added to the script.

*  Information and an example that show how to create timing constraints for 
   serialized compressed scan have been added to the script.


Unique Changes in dc_top.tcl
----------------------------

*  The set_top_implementation_options command has been added to specify 
   the blocks that should be read as block abstractions, based on the 
   ${ICC_BLOCK_ABSTRACTION_DESIGNS} variable.

*  Reports have been added for block abstraction settings and usage.

*  Core Test Language (CTL) test models for IC Compiler block abstractions are now 
   read in to ensure that the design-for-test (DFT) information is present.

*  Information about how to use Shared Codec I/O pins in DFTMAX has been
   included in the script.


Common Changes in fm(_top).tcl
------------------------------

Information has been added about how the automated setup mode, with the verification
setup file, automatically sets the hdlin_dwroot variable to the top level of the 
Design Compiler tree used for synthesis.


Lynx Compatibility
------------------

This release provides enhancements in the Lynx-compatible reference methodology 
flow. For information about these enhancements, see the file named 
Release_Notes.LynxCompatible-RM.txt.


F-2011.09-SP4
=============

The following sections describe new features, changes, and enhancements in the 
Design Compiler Reference Methodology version F-2011.09-SP4.

Common Changes in dc(_top).tcl
------------------------------

*  A comment has been added about using the set_congestion_optimization command 
   to control congestion optimization when using the -congestion option with
   the compile_ultra command.

*  Information and support has been added for the secondary floorplan file
   written by Design Compiler. This file allows you to recreate physical-only
   objects in the design prior to reading in the main floorplan file.


Lynx Compatibility 
------------------

This release provides enhancements in the Lynx-compatible reference methodology 
flow that were added for the F-2011.09-SP2 release, in which the Design Compiler 
Reference Methodology did not participate. For information about these enhancements, 
see the file named Release_Notes.LynxCompatible-RM.txt.


F-2011.09
=========

General Updates
---------------

*  IC Compiler interface logic model (ILM) support has been added for the 
   hierarchical multivoltage flow.

*  User interface changes have been made for leakage and dynamic power optimization.

*  A new option, Pin-Limited Compression, has been added to the RMgen interface 
   on SolvNet.

   Set this option to TRUE to insert serialized compressed scan, which is 
   recommended to improve the ATPG quality of results (QoR) for designs or 
   blocks with a limited number of top-level scan ports.

*  Information has been added about forcing IEEE 1801 supplies for Formality 
   verification in UPF flows.
   
   IEEE 1801 is also known as Unified Power Format (UPF).


Lynx Compatibility 
-------------------

This release provides enhancements in the Lynx-compatible reference 
methodology flow. For information about these enhancements, see the 
file named Release_Notes.LynxCompatible-RM.txt.


Changes in dc_setup.tcl
-----------------------

*  You can now specify the list of IC Compiler ILMs when using a hierarchical
   multivoltage flow.

*  You no longer need to add IC Compiler ILMs to the link_library variable.  
   The tool automatically finds IC Compiler ILMs that are included in the list 
   of Milkyway reference libraries defined in common_setup.tcl.


Common Changes in dc(_top).tcl
------------------------------

*  Reference methodology generated error and warning messages now have the
   following prefixes: RM-Error and RM-Warning.

*  The -type option has been added to the set_multi_vth_constraint command used 
   to limit the number of low-threshold-voltage cells in the design.

*  The commands used to enable leakage power optimization and dynamic power 
   optimization have been changed:
 
   o  set_leakage_optimization true
   o  set_dynamic_optimization true

*  For a multicorner-multimode flow, dynamic power optimization is now scenario 
   independent and you can enable it in the main Design Compiler script.

*  The write_environment -consistency command in the multicorner-multimode flow now 
   uses the correct tool command language (Tcl) procedure name, dcrm_mcmm_filename, 
   instead of the incorrect name mcmm_file.

*  Support has been added for pin-limited scan compression.

   Set the new Pin-Limited Compression option to TRUE if you want RMgen to generate 
   scripts that include serialized compressed scan insertion in a DFT flow with 
   adaptive scan.


Unique changes in dc_top.tcl
----------------------------

The hierarchical multivoltage flow now includes scripting that supports IC Compiler 
ILMs in the flow.


Changes in dc.mcmm.scenarios.tcl
--------------------------------

* The set_scenario_options command no longer includes the -dynamic_power option.

* The set_max_leakage_power command has been removed from the leakage scenario.

  You should use only the set_scenario_options command to define the type of 
  scenario for optimization purposes.


Common Changes in fm(_top).tcl
------------------------------

Information has been added about the verification_force_upf_supplies_on variable.

*  The default value of this variable has been changed to true in Formality 
   version F-2011.09.

*  Set this variable to false if you want to revert back to the previous 
   verification behavior for UPF supplies.
