


                              IC Compiler II (TM)

             Version P-2019.03-SP1 for linux64 - Apr 25, 2019 -SLE

                    Copyright (c) 1988 - 2019 Synopsys, Inc.
   This software and the associated documentation are proprietary to Synopsys,
 Inc. This software may only be used in accordance with the terms and conditions
 of a written license agreement with Synopsys, Inc. All other use, reproduction,
            or distribution of this software is strictly prohibited.

##########################################################################################
# Tool: IC Compiler II
# Script: route_auto.tcl
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
source -echo ./rm_setup/icc2_pnr_setup.tcl 
puts "RM-info : Running script [info script]\n"
RM-info : Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/rm_setup/icc2_pnr_setup.tcl

##########################################################################################
# Tool: IC Compiler II
# Script: icc2_pnr_setup.tcl
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
source -echo ./rm_setup/icc2_common_setup.tcl 
puts "RM-info : Running script [info script]\n"
RM-info : Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/rm_setup/icc2_common_setup.tcl

set TECH_HOME "/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech"
set DCRM_RESULTS_DIR "../dcrm/results"
##########################################################################################
# Tool: IC Compiler II
# Script: icc2_common_setup.tcl
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
##########################################################################################
## Required variables
## These variables must be correctly filled in for the flow to run properly
##########################################################################################
set DESIGN_NAME 		"CORTEXM0DS" ;# Required; name of the design to be worked on; also used as the block name when scripts save or copy a block
set LIBRARY_SUFFIX		"" ;# Suffix for the design library name ; default is unspecified   
set DESIGN_LIBRARY 		"${DESIGN_NAME}${LIBRARY_SUFFIX}" ;# Name of the design library; default is ${DESIGN_NAME}${LIBRARY_SUFFIX}
set REFERENCE_LIBRARY 		"${TECH_HOME}/ece720/Nangate_15nm_OCL_ICC2_LibPrep_v2014_06/icc2_cell_lib/NanGate_15nm_OCL.ndm"	;# Required; a list of reference libraries for the design library.
;#	for library configuration flow (LIBRARY_CONFIGURATION_FLOW set to true below): 
;#		- specify the list of physical source files to be used for library configuration during create_lib
;# 	for hierarchical designs using bottom-up flows: include subblock design libraries in the list;
;# 	for hierarchical designs using ETMs: include the ETM library in the list.
;# 		- If unpack_rm_dirs.pl is used to create dir structures for hierarchical designs, 
;#		  in order to transition between hierarchical DP and hierarchical PNR flows properly, 
;#		  absolute paths are a requirement.
set COMPRESS_LIBS               "false" ;# Save libs as compressed NDM; only used in DP.
set VERILOG_NETLIST_FILES	"${DCRM_RESULTS_DIR}/${DESIGN_NAME}.mapped.v"	;# Verilog netlist files;
;# 	for DP: required
;# 	for PNR: required if INIT_DESIGN_INPUT is ASCII in icc2_pnr_setup.tcl; not required for DC_ASCII or DP_RM_NDM
set UPF_FILE 			""	;# A UPF file
;# 	for DP: required
;# 	for PNR: required if INIT_DESIGN_INPUT is ASCII in icc2_pnr_setup.tcl; not required for DC_ASCII or DP_RM_NDM
;#          for hierarchical designs using ETMs, load the block upf file
;#          for each sub-block linked to ETM, include the following line in the UPF_FILE 
;#              load_upf block.upf -scope block_instance_name
set UPF_SUPPLEMENTAL_FILE	""      ;# The supplemental UPF file. Only needed if you are running golden UPF flow, in which case, you need both UPF_FILE and this.
;# 	for DP: required
;# 	for PNR: required if INIT_DESIGN_INPUT is ASCII in icc2_pnr_setup.tcl; not required for DC_ASCII or DP_RM_NDM
;#	    If UPF_SUPPLEMENTAL_FILE is specified, scripts assume golden UPF flow. load_upf and save_upf commands will be different.	
set TCL_PARASITIC_SETUP_FILE	""	;# Specify a Tcl script to read in your TLU+ files by using the read_parasitic_tech command;
;# refer to the example in templates/init_design.read_parasitic_tech_example.tcl 
set TCL_MCMM_SETUP_FILE		"${DCRM_RESULTS_DIR}/ICC2_files/${DESIGN_NAME}.MCMM/top.tcl"	;# Specify a Tcl script to create your corners, modes, scenarios and load respective constraints;
;# two examples are provided in templates/: 
;# init_design.mcmm_example.explicit.tcl: provide mode, corner, and scenario constraints; create modes, corners, 
;# and scenarios; source mode, corner, and scenario constraints, respectively 
;# init_design.mcmm_example.auto_expanded.tcl: provide constraints for the scenarios; create modes, corners, 
;# and scenarios; source scenario constraints which are then expanded to associated modes and corners
;# 	for DP: required
;# 	for PNR: required if INIT_DESIGN_INPUT is ASCII in icc2_pnr_setup.tcl; not required for DC_ASCII or DP_RM_NDM
set TECH_FILE 			"${TECH_HOME}/ece720/Nangate_15nm_OCL_Milkyway_v2014_06/FreePDK15.tf" 	;# A technology file; TECH_FILE and TECH_LIB are mutually exclusive ways to specify technology information; 
;# TECH_FILE is recommended, although TECH_LIB is also supported in ICC2 RM. 
set TECH_LIB			""	;# Specify the reference library to be used as a dedicated technology library;
;# as a best practice, please list it as the first library in the REFERENCE_LIBRARY list 
set TECH_LIB_INCLUDES_TECH_SETUP_INFO true 
;# Indicate whether TECH_LIB contains technology setup information such as routing layer direction, offset, 
;# site default, and site symmetry, etc. TECH_LIB may contain this information if loaded during library prep.
;# true|false; this variable is associated with TECH_LIB. 
set TCL_TECH_SETUP_FILE		"init_design.tech_setup.tcl"
;# Specify a TCL script for setting routing layer direction, offset, site default, and site symmetry list, etc.
;# init_design.tech_setup.tcl is the default. Use it as a template or provide your own script.
;# This script will only get sourced if the following conditions are met: 
;# (1) TECH_FILE is specified (2) TECH_LIB is specified && TECH_LIB_INCLUDES_TECH_SETUP_INFO is false 
set ROUTING_LAYER_DIRECTION_OFFSET_LIST "   {M1 vertical 0.0}   {MINT1 horizontal 0.0}   {MINT2 vertical 0.0}   {MINT3 horizontal 0.0}   {MINT4 vertical 0.0}   {MINT5 horizontal 0.0}   {MSMG1 vertical 0.0}   {MSMG2 horizontal 0.0}   {MSMG3 vertical 0.0}   {MSMG4 horizontal 0.0}   {MSMG5 vertical 0.0}   {MG1 horizontal 0.0}   {MG2 vertical 0.0} "
;# Specify the routing layers as well as their direction and offset in a list of space delimited pairs;
;# This variable should be defined for all metal routing layers in technology file;
;# Syntax is "{metal_layer_1 direction offset} {metal_layer_2 direction offset} ...";
;# It is required to at least specify metal layers and directions. Offsets are optional. 
;# Example1 is with offsets specified: "{M1 vertical 0.2} {M2 horizontal 0.0} {M3 vertical 0.2}"
;# Example2 is without offsets specified: "{M1 vertical} {M2 horizontal} {M3 vertical}"
##########################################################################################
## Optional variables
## Specify these variables if the corresponding functions are desired 
##########################################################################################
set DESIGN_LIBRARY_SCALE_FACTOR	"1000"	;# Specify the length precision for the library. Length precision for the design
;# library and its ref libraries must be identical. Tool default is 10000, which
;# implies one unit is one Angstrom or 0.1nm.
set UPF_UPDATE_SUPPLY_SET_FILE	""	;# A UPF file to resolve UPF supply sets
set DEF_FLOORPLAN_FILES		""	;# DEF files which contain the floorplan information;
;# 	for DP: not required
;# 	for PNR: required if INIT_DESIGN_INPUT = ASCII in icc2_pnr_setup.tcl and neither TCL_FLOORPLAN_FILE or 
;#		 initialize_floorplan is used; DEF_FLOORPLAN_FILES and TCL_FLOORPLAN_FILE are mutually exclusive;
;# 	         not required if INIT_DESIGN_INPUT = DC_ASCII or DP_RM_NDM
set DEF_SCAN_FILE		"${DCRM_RESULTS_DIR}/${DESIGN_NAME}.mapped.scandef"	;# A scan DEF file for scan chain information;
;# 	for PNR: not required if INIT_DESIGN_INPUT = DC_ASCII or DP_RM_NDM, as SCANDEF is expected to be loaded already
set DEF_SITE_NAME_PAIRS		{}	;# A list of site name pairs for read_def -convert; 
;# specify site name pairs with from_site first followed by to_site;
;# Example: set DEF_SITE_NAME_PAIRS {{from_site_1 to_site_1} {from_site_2 to_site_2}} 	
set SITE_DEFAULT		""	;# Specify the default site name if there are multiple site defs in the technology file;
;# this is to be used by initialize_floorplan command; example: set SITE_DEFAULT "unit";
;# this is applied in the init_design.tech_setup.tcl script 
set SITE_SYMMETRY_LIST	""		;# Specify a list of site def and its symmetry value;
;# this is to be used by read_def or initialize_floorplan command to control the site symmetry;
;# example: set SITE_SYMMETRY_LIST "{unit Y} {unit1 Y}"; this is applied in the init_design.tech_setup.tcl script 
set MIN_ROUTING_LAYER		"M1"	;# Min routing layer name; normally should be specified; otherwise tool can use all metal layers
set MAX_ROUTING_LAYER		"MINT5"	;# Max routing layer name; normally should be specified; otherwise tool can use all metal layers
set LIBRARY_CONFIGURATION_FLOW	false	;# Set it to true enables library configuration flow which calls the library manager under the hood to generate .nlibs, 
;# save them to disk, and automatically link them to the design.
;# Requires LINK_LIBRARY to be specified with .db files and REFERENCE_LIBRARY to be specified with physical
;# source files for the library configuration flow. Also search_path (in icc2_pnr_setup.tcl) should include paths 
;# to these .db and physical source files.
set LINK_LIBRARY		""	;# Specify .db files;
;# 	for running VC-LP (vc_lp.tcl) and Formality (fm.tcl): required
;# 	for ICC-II without LIBRARY_CONFIGURATION_FLOW enabled: not required
;#	for ICC-II with LIBRARY_CONFIGURATION_FLOW enabled: required; 
;#      	- the .db files specified will be used for the library configuration under the hood during create_lib 
##########################################################################################
## Variables related to flow controls of flat PNR, hierarchical PNR and transition with DP
##########################################################################################
set DESIGN_STYLE		"flat"	;# Specify the design style; flat|hier; default is flat; 
;# specify flat for a totally flat flow (flat PNR for short) and 
;# specify hier for a hierarchical flow (hier PNR for short);
;# 	for hier PNR: required and auto set if unpack_rm_dirs.pl is used; (see README.unpack_rm_dirs.txt for details)
;# 	for flat PNR: this should set to flat (default)
;#	for DP: not used 
set PHYSICAL_HIERARCHY_LEVEL	"" 	;# Specify the current level of hierarchy for the hierarchical PNR flow; top|intermediate|bottom;
;# 	for hier PNR: required and auto set if unpack_rm_dirs.pl is used; (see README.unpack_rm_dirs.txt for details)
;# 	for flat PNR and for DP: not used.
set RELEASE_DIR_DP		"" 	;# Specify the release directory of DP RM; 
;# this is where init_design.tcl of PNR flow gets DP RM released libraries;
;# 	for hier PNR: required and auto set if unpack_rm_dirs.pl is used; (see README.unpack_rm_dirs.txt for details)
;# 	for flat PNR: required if INIT_DESIGN_INPUT = DP_RM_NDM, as init_design.tcl needs to know where DP RM libraries are
;#	for DP: not used 
set RELEASE_LABEL_NAME_DP 	"for_pnr"	
;# Specify the label name of the block in the DP RM released library;
;# this is the label name which init_design.tcl of PNR flow will open. 
set RELEASE_DIR_PNR		"" 	;# Specify the release directory of PNR RM; 
;# this is where the init_design.tcl of hierarchical PNR flow gets the sub-block libraries;	
;# 	for hier PNR: required and auto set if unpack_rm_dirs.pl is used; (see README.unpack_rm_dirs.txt for details)
;# 	for flat PNR and for DP: not used.
##########################################################################################
## Variables related to REDHAWK ANALYSIS FUSION
##########################################################################################
set REDHAWK_SEARCH_PATH		"" 	;# Required. Search path to the NDM, reference libraries, and etc.
puts "RM-info : Completed script [info script]\n"
RM-info : Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/rm_setup/icc2_common_setup.tcl

########################################################################################## 
## Variables for init_design inputs (used by init_design.tcl)
##########################################################################################
set INIT_DESIGN_INPUT 		"ASCII"	;# Specify one of the 3 options: ASCII | DC_ASCII | DP_RM_NDM; default is ASCII.
;# 1.ASCII: assumes all design input files are ASCII and will read them in individually.
;# 2.DC_ASCII: for design transfer from DC using the write_icc2_files command;
;#   sources ${DCRM_RESULTS_DIR}/${DCRM_FINAL_DESIGN_ICC2}/${DESIGN_NAME}.icc2_script.tcl;
;#   you can change the default of DC_RESULTS_DIR and DCRM_FINAL_DESIGN_ICC2 below;
;#   commonly used in combination with SPG flow (set PLACE_OPT_SPG_FLOW true below)  
;# 3.DP_RM_NDM: if ICC2-DP-RM is completed, you can take its NDM outputs and skip the design creation steps;
;#   for PNR flat (DESIGN_STYLE set to flat), script copies the design library from ICC2-DP-RM release 
;#   area (specified by RELEASE_DIR_DP) and opens design;    
;#   for PNR hier flow (DESIGN_STYLE set to hier), script will either copy design library 
;#   from ICC2-DP-RM release area or in addition to that, copy design library of the child blocks from PNR
;#   release area (specified by RELEASE_DIR_PNR), and then open design.
#set DCRM_RESULTS_DIR  		"./results" ;# used by DC_ASCII to specify DC-RM output directory. Default is results.   
;# (Rhett Davis) Moved this variable to icc2_common_setup.tcl for use with DP flow
set DCRM_FINAL_DESIGN_ICC2 	"ICC2_files" ;# output directory name generated by DC-RM's write_icc2_files command;
;# only valid if you specify DC_ASCII for INIT_DESIGN_INPUT;
;# The directory contains verilog, floorplan, scenario settings, and constraints from DC
;# in a format that IC Compiler II can source.    
set POCV_CORNER_FILE_MAPPING_LIST 	"" ;# a list of corner and its associated POCV file in pairs, as POCV is corner dependant;
;# same corner can have multiple corresponding files;
;# example: set POCV_CORNER_FILE_MAPPING_LIST "{corner1 file1a} {corner1 file1b} {corner2 file2}";
;# in the example, file1a and file1b will be loaded for corner1, file2 will be loaded for corner2.
;# Note: POCV_CORNER_FILE_MAPPING_LIST will take precedence if AOCV_CORNER_TABLE_MAPPING_LIST is also specified
set AOCV_CORNER_TABLE_MAPPING_LIST 	"" ;# a list of corner and its associated AOCV table in pairs, as AOCV is corner dependant;
;# same corner can have multiple corresponding tables;
;# example: set AOCV_CORNER_TABLE_MAPPING_LIST "{corner1 table1a} {corner1 table1b} {corner2 table2}";
;# in the example, table1a and table1b will be loaded for corner1, table2 will be loaded for corner2.
set TCL_PAD_CONSTRAINTS_FILE		"" ;# a Tcl script for your pad constraint commands used by place_io of 
;# templates/init_design.flat_design_planning_example.tcl sourced by init_design.tcl
set TCL_MV_SETUP_FILE			"" ;# a Tcl script placeholder for your MV setup commands,such as create_voltage_area, 
;# placement bound, power switch creation and level shifter insertion, etc;
;# refer to templates/init_design.power_switch_example.tcl for sample commands   
set TCL_PG_CREATION_FILE		"" ;# a Tcl script placeholder for your power ground network creation commands,
;# such as create_pg*, set_pg_strategy, compile_pg, etc;
set TCL_FLOORPLAN_FILE			"rm_setup/floorplan.tcl" ;# Tcl floorplan file written by the write_floorplan command; for example, floorplan/floorplan.tcl;
;# TCL_FLOORPLAN_FILE and DEF_FLOORPLAN_FILES are mutually exclusive; please specify only one of them;
;# Not effective if INIT_DESIGN_INPUT = DC_ASCII or DP_RM_NDM.
;# The write_floorplan command writes a floorplan.tcl Tcl script and a floorplan.def DEF file;
;# reading floorplan.tcl alone can restore the entire floorplan - refer to write_floorplan man for more details  
set TCL_ADDITIONAL_FLOORPLAN_FILE 	"" ;# a supplementary Tcl constraint file; sourced after DEF_FLOORPLAN_FILE or TCL_FLOORPLAN_FILE is read, 
;# or initialize_floorplan is done; can be used to cover additional floorplan constructs, 
;# such as bounds, pin guides, or route guides, etc; not valid if INIT_DESIGN_INPUT = DC_ASCII or DP_RM_NDM.
set TCL_USER_INIT_DESIGN_POST_SCRIPT ""	;# An optional Tcl file to be sourced at the very end of init_design.tcl before save_block.
########################################################################################## 
## Variables for constraints or settings that impact multiple steps (used across flow)
##########################################################################################
set TCL_PLACEMENT_SPACING_LABEL_RULE_FILE "" ;# A file to specify your placement spacing labels and rules.
;# Example : set_placement_spacing_label -name X -side both -lib_cells [get_lib_cells -of [get_cells]]
;# Example : set_placement_spacing_rule -labels {X SNPS_BOUNDARY} {0 1}
set SAIF_FILE				"" ;# Specify a SAIF file for accurate power computation for features such as
;# total power (opt.power.mode set to total) and enhanced low power placement (place.coarse.enhanced_low_power_effort).
;# sourced at the beginning of place_opt.tcl
set SAIF_FILE_POWER_SCENARIO		"" ;# SAIF_FILE related; specify a power scenario where the SAIF is to be applied
set SAIF_FILE_SOURCE_INSTANCE		"" ;# SAIF_FILE related; name of the instance of the current design as it appears in SAIF file.
set SAIF_FILE_TARGET_INSTANCE		"" ;# SAIF_FILE related; name of the target instance on which activity is to be annotated.
set OPTIMIZATION_FREEZE_PORT_LIST 	"" ;# List of cells (for ex, clock gen modules, or customized logics that should not be touched) to which freeze_clock_ports 
;# and freeze_data_ports attribute will be set to prevent optimization from modifying their port signature; 
;# especially useful if you do formal verification by modules. 
;# Sets opt.dft.hier_preservation to true and runs set_freeze_port -all on the specified cells.
set TCL_USER_CONNECT_PG_NET_SCRIPT ""	;# An optional Tcl file for customized connect_pg_net command and options, such as for bias pins of cells added by opto;
;# sourced by all the main scripts prior to the save_block command
# ---------------------------------
# Lib cell purpose restrictions
# ---------------------------------
set TCL_LIB_CELL_PURPOSE_FILE 		"set_lib_cell_purpose.tcl" ;# A Tcl file which applies lib cell purpose related restrictions;
;# You can specify it with your own customized script	
;# RM default is set_lib_cell_purpose.tcl which includes the following restrictions, each controlled by
;# an individual variable : dont use cells (TCL_LIB_CELL_DONT_USE_FILE), tie cells (TIE_LIB_CELL_PATTERN_LIST), 
;# hold fixing (HOLD_FIX_LIB_CELL_PATTERN_LIST), CTS (CTS_LIB_CELL_PATTERN_LIST) and CTS-exclusive cells (CTS_ONLY_LIB_CELL_PATTERN_LIST). 
## The following 5 *_LIB_CELL_* variables are only applicable if set_lib_cell_purpose.tcl is used for lib cell purpose restrictions.
#  If you do not plan to use set_lib_cell_purpose.tcl, specify TCL_LIB_CELL_PURPOSE_FILE with your own file and you don't have to specify the following variables.
set TCL_LIB_CELL_DONT_USE_FILE 		"" ;# A Tcl file for customized don't use ("set_lib_cell_purpose -exclude <purpose>" commands).
;# The file is to be sourced in set_lib_cell_purpose.tcl, which is the default script for handling lib cell 
;# purpose restrictions specified by the variable TCL_LIB_CELL_PURPOSE_FILE above.
;# It only takes effect if TCL_LIB_CELL_PURPOSE_FILE is set to the default value set_lib_cell_purpose.tcl
set TIE_LIB_CELL_PATTERN_LIST 		"" ;# A list of TIE lib cell patterns to be included for optimization;
;# Example : set TIE_LIB_CELL_PATTERN_LIST "*/TIE* */ttt*"
set HOLD_FIX_LIB_CELL_PATTERN_LIST 	"" ;# A list of hold time fixing lib cell patterns to be included only for hold
set CTS_LIB_CELL_PATTERN_LIST 		"" ;# List of CTS lib cell patterns to be used by CTS; 
;# please include repeaters, always-on repeaters (for MV-CTS), 
;# and gates (for sizing pre-existing gates)/always-on buffers;
;# Please also include flops as CCD can size flops to improve timing.
;# example : set CTS_LIB_CELL_PATTERN_LIST "*/NBUF* */AOBUF* */AOINV* */SDFF*"
set CTS_ONLY_LIB_CELL_PATTERN_LIST 	"" ;# List of CTS lib cell patterns to be used by CTS "exclusively", such as clock specific
;# buffers and inverters. Please be aware that these cells will be applied with only cts 
;# purpose and nothing else. If you want to use these lib cells for other purposes, 
;# such as optimization and hold, specify them in CTS_LIB_CELL_PATTERN_LIST instead
# ---------------------------------
# Clock NDR
# ---------------------------------
set TCL_CTS_NDR_RULE_FILE 		"cts_ndr.tcl" ;# Specify a script for clock NDR creation and association, to be sourced at place_opt
;# By default the variable is set to cts_ndr.tcl, which is an RM provided example.
;# Important: to use the example script, you must also specify CTS_NDR_RULE_NAME, CTS_INTERNAL_NDR_RULE_NAME,
;# or CTS_LEAF_NDR_RULE_NAME (see below for details), otherwise the script won't do anything.
## Note: the CTS_*NDR* variables below are only applicable if TCL_CTS_NDR_RULE_FILE is set to the RM provided example script. 
## If you specify your own script for TCL_CTS_NDR_RULE_FILE, variables below will not be used.
## For root clock nets
set CTS_NDR_RULE_NAME			"" ;# Specify a clock NDR rule for root nets;
;# required for the example script to work on the root and internal nets.
;# Below are the 3 predefined rules supported:  
;# rm_2w2s : double width double spacing 
;# rm_2w2s_shield_default : double width double spacing + shielding with default width and spacing
;# rm_2w2s_shield_list : double width double spacing + shielding with customized per layer width and spacing
set CTS_NDR_SHIELDING_LAYER_WIDTH_LIST 	"" ;# A list of layer_name shield_width ,for ex, "M1 0.1 M2 0.1 M3 0.1";
;# required if you specify rm_2w2s_shield_list as CTS_NDR_RULE_NAME.
set CTS_NDR_SHIELDING_LAYER_SPACING_LIST "" ;# A list of layer_name shield_spacing, for ex, "M1 0.1 M2 0.1 M3 0.1";
;# required if you specify rm_2w2s_shield_list as CTS_NDR_RULE_NAME.
set CTS_NDR_MIN_ROUTING_LAYER		"" ;# Min routing layer for set_clock_routing_rules to which CTS_NDR_RULE_NAME is applied. 
set CTS_NDR_MAX_ROUTING_LAYER		"" ;# Max routing layer for set_clock_routing_rules to which CTS_NDR_RULE_NAME is applied.
## For internal clock nets (by default same values as with the root clock nets)
set CTS_INTERNAL_NDR_RULE_NAME		"$CTS_NDR_RULE_NAME" ;# Specify a clock NDR rule for internal nets; default is same as CTS_NDR_RULE_NAME;
;# required for the example script to work on the internal nets.
;# Below are the 3 predefined rules supported:  
;# rm_2w2s : double width double spacing 
;# rm_2w2s_shield_default : double width double spacing + shielding with default width and spacing
;# rm_2w2s_shield_list : double width double spacing + shielding with customized per layer width and spacing
set CTS_INTERNAL_NDR_SHIELDING_LAYER_WIDTH_LIST "$CTS_NDR_SHIELDING_LAYER_WIDTH_LIST" ;# A list of layer_name shield_width ,for ex, "M1 0.1 M2 0.1 M3 0.1";
;# required if you specify rm_2w2s_shield_list as CTS_INTERNAL_NDR_RULE_NAME.
set CTS_INTERNAL_NDR_SHIELDING_LAYER_SPACING_LIST "$CTS_NDR_SHIELDING_LAYER_SPACING_LIST" ;# A list of layer_name shield_spacing, for ex, "M1 0.1 M2 0.1 M3 0.1";
;# required if you specify rm_2w2s_shield_list as CTS_INTERNAL_NDR_RULE_NAME.
set CTS_INTERNAL_NDR_MIN_ROUTING_LAYER "$CTS_NDR_MIN_ROUTING_LAYER" ;# Min routing layer for set_clock_routing_rules to which CTS_INTERNAL_NDR_RULE_NAME is applied. 
set CTS_INTERNAL_NDR_MAX_ROUTING_LAYER "$CTS_NDR_MAX_ROUTING_LAYER" ;# Max routing layer for set_clock_routing_rules to which CTS_INTERNAL_NDR_RULE_NAME is applied.
## For leaf clock nets
set CTS_LEAF_NDR_RULE_NAME 		"" ;# Specify rm_leaf as the predefined rule for the example script to prepare a default rule for leaf nets
set CTS_LEAF_NDR_MIN_ROUTING_LAYER 	$CTS_NDR_MIN_ROUTING_LAYER ;# Min routing layer for set_clock_routing_rules to which rm_leaf is applied.
set CTS_LEAF_NDR_MAX_ROUTING_LAYER 	$CTS_NDR_MAX_ROUTING_LAYER ;# Max routing layer for set_clock_routing_rules to which rm_leaf is applied.
# ---------------------------------
# Preroute optimizations
# ---------------------------------
set PREROUTE_PLACEMENT_MAX_DENSITY	"" ;# specify a float value between 0 and 1; tool default unspecified; optional in RM;	
;# If specified, sets place.coarse.max_density to limit local density to be less than the value.
;# if unspecified, place.coarse.max_density remains at tool default 0; 
;# now if $PREROUTE_PLACEMENT_AUTO_DENSITY is also true, tool will auto determine a appropriate value; 
;# while if $PREROUTE_PLACEMENT_AUTO_DENSITY is false, tool will try to spread cells evenly
set PREROUTE_PLACEMENT_MAX_UTIL		"" ;# specify a float value between 0 and 1; tool default unspecified; optional in RM;
;# sets place.coarse.congestion_driven_max_util to control how densely the tool can pack cells in uncongested 
;# regions, in order to remove congestion in congested regions
;# if unspecified, place.coarse.congestion_driven_max_util remains at tool default 0.93
set PREROUTE_PLACEMENT_AUTO_DENSITY	true ;# true|false; tool default true; optional in RM to set it to false if you want to disable the feature; 
;# sets place.coarse.auto_density_control to control coarse placement automatic density control;
;# if you do not specify either of the above two settings (max density and max util) and keep the tool defaults, 
;# the automatic density control selects the value for max density and max util based on the design stage;
;# message PLACE-027 is issued to report the chosen settings
set PREROUTE_PLACEMENT_ENHANCED_AUTO_DENSITY false ;# false|true, tool default false; optional in RM;
;# sets place.coarse.enhanced_auto_density_control;
;# automaticlly selects max density based on the design stage as well as design utilization;
;# automatically selects max util based on the design stage as well as design tchnology
set PREROUTE_PLACEMENT_TARGET_ROUTING_DENSITY "" ;# specify a float value between 0 and 1; tool default unspecified; optional in RM;	
;# sets place.coarse.target_routing_density to control target routing density for congestion-driven placement; 
;# if left unspecified, place.coarse.target_routing_density remains at tool default 0 
set PREROUTE_PLACEMENT_PIN_DENSITY_AWARE false ;# false|true; tool default false; optional in RM;
;# sets app option place.coarse.pin_density_aware to control maximum local pin density;
set PREROUTE_NDR_OPTIMIZATION 		false ;# false|true, tool default false; optional in RM;
;# sets place_opt/clock_opt.flow.optimize_ndrs to true enables NDR optimization
set PREROUTE_CTS_POWER_AWARE_PRUNING	false ;# false|true; tool default false; RM default false;
;# sets cts.common.power_aware_pruning to allow selection of repeater cells to also consider 
;# internal and leakage power in order to reduce dynamic and also leakage power of the clock trees;
;# impacts place_opt trial CTS/optimize icgs and clock_opt build_clock phase 
set PREROUTE_CTS_LOW_POWER_TECHNIQUE	"" ;# gate_relocation|low_power_targets|all; RM default is unspecified;
;# impacts place_opt trial CTS/optimize icgs and clock_opt build_clock phase; 
;# gate_relocation: sets cts.compile.power_opt_mode to gate_relocation to enable activity aware gate 
;#                  relocation (moves cells with low input clock toggling rates closer to their drivers)
;#		    at the end of gate by gate clock tree synthesis;
;# low_power_targets: sets cts.compile.power_opt_mode to low_power_targets for CTS to relax certain
;#                    internal constraints and build clock trees with less area and power;
;# all: sets cts.compile.power_opt_mode to all to enable both the above features
########################################################################################## 
## Variables for the place_opt step (used by place_opt.tcl and settings.place_opt.tcl)
##########################################################################################
set PLACE_OPT_ACTIVE_SCENARIO_LIST	"" ;# A subset of scenarios to be made active during place_opt step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
;# include CTS scenarios if you are enabling CTS related features during place_opt,
;# such as PLACE_OPT_OPTIMIZE_ICGS, PLACE_OPT_TRIAL_CTS, or PLACE_OPT_MSCTS
set PLACE_OPT_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created by place_opt; default "" which means no user prefix
set TCL_USER_PLACE_OPT_PRE_SCRIPT 	"" ;# An optional Tcl file for place_opt.tcl to be sourced before place_opt.
set TCL_USER_PLACE_OPT_SCRIPT 		"" ;# An optional Tcl file for place_opt.tcl to replace pre-existing place_opt commands.
set TCL_USER_PLACE_OPT_POST_SCRIPT 	"" ;# An optional Tcl file for place_opt.tcl to be sourced after place_opt.
set PLACE_OPT_SPG_FLOW 			false ;# false|true; RM default false; set it to true to enable SPG input handling flow in place_opt.tcl;
;# which skips the first pass of the two-pass placement;
;# recommended to go with DC-ASCII inputs (set INIT_DESIGN_INPUT DC_ASCII)
set PLACE_OPT_TRIAL_CTS 		false ;# false|true; tool default false; optional in RM;
;# sets place_opt.flow.trial_clock_tree to enables early clock tree synthesis;
;# useful for low power placement and ICG optimization flow (PLACE_OPT_OPTIMIZE_ICGS). 
;# Propagated clocks will be used through-out place_opt flow.
;# Note: when PLACE_OPT_OPTIMIZE_ICGS is set to true, trial CTS will be automatically enabled, 
;# regardless of the setting of PLACE_OPT_TRIAL_CTS. So you don't have to manually enable it.
set PLACE_OPT_OPTIMIZE_ICGS 		false ;# false|true; tool default false; optional in RM;
;# sets place_opt.flow.optimize_icgs for place_opt to run automatic ICG optimization that performs trial CTS, 
;# timing-aware ICG splitting and clock-aware placement for critical enable paths.
;# The aggressiveness of splitting can be controlled by the PLACE_OPT_OPTIMIZE_ICGS_CRITICAL_RANGE. 
set PLACE_OPT_OPTIMIZE_ICGS_CRITICAL_RANGE "" ;# specify a value between 0 and 1; default unspecified; 
;# sets place_opt.flow.optimize_icgs_critical_range to the value specified; tool default is 0.75.
;# When set to X, only ICGs enable slack within {EN_WNS, EN_WNS*(1-X)} will be considered for splitting;
;# for example, 0.75 means only ICG with enable pin violations between 1*EN_WNS and 0.25*EN_WNS will be split,
;# while the ICG enable slack below 0.25*EN_WNS will be skipped. Larger value means more splitting. 
set PLACE_OPT_MERGE_ICGS		true ;# false|true; tool default true; optional in RM to set it to false;
;# sets place_opt.flow.merge_clock_gates to control whether the OBD ICG merging is enabled or not;
;# when set to true, ICG merging (merge_clock_gates) runs internally inside place_opt as a first step in initial_place stage;
set PLACE_OPT_ICG_AUTO_BOUND		false ;# false|true; tool default false; optional in RM;
;# sets place.coarse.icg_auto_bound to enable use of automatically created group bounds
set PLACE_OPT_CLOCK_AWARE_PLACEMENT	false ;# false|true; tool default false; optional in RM;
;# sets place_opt.flow.clock_aware_placement to guide placement with ICG's enable timing criticality; 
;# place_opt will try to improve ICG enable timing by placing the timing critical ICGs and their fanout cells 
;# at better locations for ICG enable paths.
;# Note: when PLACE_OPT_OPTIMIZE_ICGS is set to true, clock-aware placement will be automatically enabled, 
;# regardless of the setting of PLACE_OPT_CLOCK_AWARE_PLACEMENT. So you don't have to manually enable it.
set PLACE_OPT_MSCTS			false ;# false|true; enables MSCTS (regular) at place_opt step; requires TCL_REGULAR_MSCTS_FILE to be specified;
;# It runs in two parts: first part runs at place_opt step to source TCL_REGULAR_MSCTS_FILE;
;# second part runs at clock_opt_cts step, skips TCL_REGULAR_MSCTS_FILE, propagates clocks, and runs mesh simulation;
;# By default, the features runs in ideal clock mode. However if if PLACE_OPT_OPTIMIZE_ICGS or PLACE_OPT_TRIAL_CTS 
;# are also enabled, then propagated clocks will be used during the place_opt step;
;# If set to false (RM default), RM runs MSCTS only at clock_opt_cts step.
set PLACE_OPT_MSCTS_CRITICAL_SCENARIO	"" ;# Specify a scenario with worst RC and most visible sinks for place_opt MSCTS to base on;
;# script will record current scenario, switch to the specified scenario before MSCTS, and then
;# restore the original current scenario after MSCTS. Only valid if PLACE_OPT_MSCTS is set to true
set TCL_USER_SPARE_CELL_PRE_SCRIPT	"" ;# An optional Tcl file for spare cell insertion to be sourced before place_opt;
;# refer to templates/place_opt.spare_cell.tcl for an example
set TCL_USER_SPARE_CELL_POST_SCRIPT	"" ;# An optional Tcl file for spare cell insertion to be sourced after place_opt;
;# refer to templates/place_opt.spare_cell.tcl for an example
set TCL_NON_CLOCK_NDR_RULES_FILE 	"" ;# Specify a NDR rules file for signal nets (Clock NDR rules are specified by CTS_NDR_* variables above)
set PLACE_OPT_MULTIBIT_BANKING 		false ;# tool default false; optional in RM;
;# sets place_opt.flow.enable_multibit_banking to enable multibit banking during place_opt;
;# takes effect during place_opt initial_opto 
set PLACE_OPT_MULTIBIT_DEBANKING 	false ;# tool default false; optional in RM;
;# sets place_opt.flow.enable_multibit_debanking to enables multibit debanking during place_opt;
;# takes effect during place_opt final_opto
########################################################################################## 
## Variables for the clock_opt step 
## (used by settings.clock_opt_cts.tcl, clock_opt_cts.tcl, and clock_opt_opto.tcl)
##########################################################################################
set CLOCK_OPT_CTS_ACTIVE_SCENARIO_LIST  "" ;# A subset of scenarios to be made active during clock_opt_cts step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set CLOCK_OPT_CTS_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created by clock_opt build_clock; default "" which means no user prefix
set TCL_USER_CLOCK_OPT_CTS_PRE_SCRIPT 	"" ;# An optional Tcl file for clock_opt_cts.tcl to be sourced before clock_opt.
set TCL_USER_CLOCK_OPT_CTS_SCRIPT 	"" ;# An optional Tcl file for clock_opt_cts.tcl to replace pre-existing clock_opt commands.
set TCL_USER_CLOCK_OPT_CTS_POST_SCRIPT 	"" ;# An optional Tcl file for clock_opt_cts.tcl to be sourced after clock_opt.
set CLOCK_OPT_OPTO_ACTIVE_SCENARIO_LIST "" ;# A subset of scenarios to be made active during clock_opt_opto step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set CLOCK_OPT_OPTO_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created by clock_opt final_opto; default "" which means no user prefix
set TCL_USER_CLOCK_OPT_OPTO_PRE_SCRIPT 	"" ;# An optional Tcl file for clock_opt_opto.tcl to be sourced before clock_opt.
set TCL_USER_CLOCK_OPT_OPTO_SCRIPT 	"" ;# An optional Tcl file for clock_opt_opto.tcl to replace pre-existing clock_opt commands.
set TCL_USER_CLOCK_OPT_OPTO_POST_SCRIPT "" ;# An optional Tcl file for clock_opt_opto.tcl to be sourced after clock_opt.
set CLOCK_OPT_MSCTS_CRITICAL_SCENARIO	"" ;# Specify a scenario with worst RC and most visible sinks for MSCTS to base on;
;# script will record current scenario, switch to the specified scenario before MSCTS, and then
;# restore the original current scenario after MSCTS.
set TCL_REGULAR_MSCTS_FILE		"" ;# Specify a Tcl script for regular multisource clock tree synthesis setup and creation,
;# which will be sourced prior to the "place_opt" if PLACE_OPT_MSCTS is true in place_opt.tcl
;# and before "clock_opt -from build_clock -to route_clock" command in clock_opt_cts.tcl
;# RM provided script: mscts.regular.tcl
set TCL_STRUCTURAL_MSCTS_FILE		"" ;# Specify a Tcl script for structural multisource clock tree synthesis setup and creation,
;# which will be sourced prior to the "clock_opt -from build_clock -to route_clock" command
;# in clock_opt_cts.tcl;
;# RM provided script: mscts.structural.tcl
set PREROUTE_CTS_POWER_AWARE_PRUNING	false ;# false|true; tool default false; RM default false;
;# sets cts.common.power_aware_pruning to allow selection of repeater cells to also consider 
;# internal and leakage power in order to reduce dynamic and also leakage power of the clock trees 
set PREROUTE_CTS_LOW_POWER_TECHNIQUE	"" ;# gate_relocation|low_power_targets|all; RM default is unspecified;
;# gate_relocation: sets cts.compile.power_opt_mode to gate_relocation to enable activity aware gate 
;#                  relocation (moves cells with low input clock toggling rates closer to their drivers)
;#		    at the end of gate by gate clock tree synthesis;
;# low_power_targets: sets cts.compile.power_opt_mode to low_power_targets for CTS to relax certain
;#                    internal constraints and build clock trees with less area and power;
;# all: sets cts.compile.power_opt_mode to all to enable both the above features
set CLOCK_OPT_OPTO_CTO 			false ;# Default false; enables post-route clock tree optimization in clock_opt_opto.tcl
set CLOCK_OPT_OPTO_CTO_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created by CTO; default "" which means no user prefix
########################################################################################## 
## Variables for route_auto and route_opt related settings 
## (Used by settings.route_auto.tcl, settings.route_opt.tcl, route_auto.tcl, and route_opt.tcl)
##########################################################################################
set ROUTE_AUTO_ACTIVE_SCENARIO_LIST 	"" ;# A subset of scenarios to be made active during route_auto step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set ROUTE_AUTO_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created suring route_auto; default "" which means no user prefix
set TCL_USER_ROUTE_AUTO_PRE_SCRIPT 	"" ;# An optional Tcl file for route_auto.tcl to be sourced before route_auto.
set TCL_USER_ROUTE_AUTO_SCRIPT 		"" ;# An optional Tcl file for route_auto.tcl to replace pre-existing routing commands.
set TCL_USER_ROUTE_AUTO_POST_SCRIPT 	"" ;# An optional Tcl file for route_auto.tcl to be sourced after route_auto.
set ROUTE_OPT_ACTIVE_SCENARIO_LIST 	"" ;# A subset of scenarios to be made active during route_opt step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set ROUTE_OPT_USER_INSTANCE_NAME_PREFIX "" ;# Specify the prefix for new cells created during route_opt; default "" which means no user prefix
set TCL_USER_ROUTE_OPT_PRE_SCRIPT 	"" ;# An optional Tcl file for route_opt.tcl to be sourced before route_opt.
set TCL_USER_ROUTE_OPT_SCRIPT 		"" ;# An optional Tcl file for route_opt.tcl to replace pre-existing route_opt commands.
set TCL_USER_ROUTE_OPT_POST_SCRIPT 	"" ;# An optional Tcl file for route_opt.tcl to be sourced after route_opt.
set CLOCK_OPT_GLOBAL_ROUTE_OPT		false ;# false|true; tool default false; optional in RM; 
;# enables Global Route Based Optimization by setting clock_opt.flow.enable_global_route_opt 
;# and route_opt.flow.enable_power to true, sources routing settings, and runs clock_opt -from global_route_opt;
;# this feature is added to route_auto.tcl; if enabled, it replaces route_global command;
set ROUTE_AUTO_USE_SINGLE_COMMAND	false ;# false|true; runs route_auto command instead of atomic commands (route_global+route_track+route_detail with update_timing in between)
set REDUNDANT_VIA_INSERTION		false ;# false|true; tool default false; optional in RM; enables redundant via insertion for post-route;
;# if you choose ESTABLISHED for TECHNOLOGY_NODE on RMgen download page,
;# RM is set up to run concurrent redundant via insertion during route_auto and route_opt
;# otherwise, RM is set up to reserve space and run standalone add_redundant_vias after route_auto and route_opt  
set TCL_USER_REDUNDANT_VIA_MAPPING_FILE "" ;# ICC-II via mapping file required for redundant via insertion; 
;# the file should include add_via_mapping commands.   
set TCL_USER_ICC_REDUNDANT_VIA_MAPPING_FILE "" ;# ICC style via mapping file required for redundant via insertion; 
;# the file should include define_zrt_redundant_vias commands.
;# This variable is mutually exclusive with TCL_USER_REDUNDANT_VIA_MAPPING_FILE
set ROUTE_AUTO_ANTENNA_FIXING		false ;# false|true; tool default false; optional in RM;
;# set true to enable route.detail.hop_layers_to_fix_antenna and source TCL_ANTENNA_RULE_FILE in route_auto.tcl 
;# to fix Antenna violations.
set TCL_ANTENNA_RULE_FILE	""	;# Antenna rule file; required if ROUTE_AUTO_ANTENNA_FIXING is set to true.
set ROUTE_AUTO_CREATE_SHIELDS 		"none" ;# none|before_route_auto|after_route_auto; default is none; optional in RM;
;# choose to create shields before or after route_auto; all nets with shielding rules will be shielded	
set ROUTE_OPT_PT_DELAY_CALCULATION_WITH_PBA false ;# Default false; sets time.pba_optimization_mode to path to enable PBA during second route_opt;
set ROUTE_OPT_STARRC_CONFIG_FILE ""	;# Specify the configuration file for StarRC in-design extraction for the second route_opt in route_opt.tcl;
;# required; refer to templates/route_opt.starrc_config_example.txt as an example
set ROUTE_OPT_RESHIELD 			"after_route_opt" ;# none|after_route_opt|incremental; default is after_route_opt; 
;# set after_route_opt to reshield nets after route_opt is done with create_shield command; 
;# set incremental to trigger reshield during all route_opt eco route sessions with an app option; 
;# note that ROUTE_OPT_RESHIELD only works if ROUTE_AUTO_CREATE_SHIELDS is set to a value other than none
set ROUTE_OPT_CTO 			"auto" ;# auto|always_on|always_off; tool default auto; RM default auto;
;# sets route_opt.flow.enable_ccd_clock_drc_fixing to the specified value for clock DRC fixing in route_opt;
;# Note: this feature affects both CCD and non-CCD route_opt;
;# if CCD is enabled, with auto, route_opt will enable the feature; set it to always_off if you want it disabled.
;# if CCD is not enabled, with auto, this feature won't be enabled; set it to always_on to enable the feature.
## The following 6 ROUTE_OPT_ECO_OPT* variables are for ECO fusion (eco_opt command) in route_opt.tcl
#  Note that once ROUTE_OPT_ECO_OPT_PT_PATH is specified, ECO fusion is enabled and the third route_opt will be skipped.
set ROUTE_OPT_ECO_OPT_PT_PATH		"" ;# Required by eco_opt; specify the path to pt_shell; for example: /u/mgr/bin/pt_shell
;# if specified, eco_opt
set ROUTE_OPT_ECO_OPT_DB_PATH		"" ;# Optional; specify the paths to .db files of the reference libraries for PT (if not already in your search path)
;# For eco_opt, PT needs to read db. 
set ROUTE_OPT_ECO_OPT_TYPE		"" ;# Optional; eco_opt fixing type; timing|setup|hold|drc|leakage_power|dynamic_power|total_power|buffer_removal
;# if not specified, works on all types
set ROUTE_OPT_ECO_OPT_STARRC_CONFIG_FILE "" ;# Optional; specify the configuration file for StarRC in-design extraction
set ROUTE_OPT_ECO_OPT_WORK_DIR		"" ;# Optional; specify the working directory for eco_opt where PT files and logs are generated;
;# if not specified, tool will automatically generate one
set ROUTE_OPT_ECO_OPT_PRE_LINK_SCRIPT	"" ;# Optional; specify the file that contains custom PT script, which is executed before linking in PrimeTime;
;# use PT commands that do not require the current design
set ROUTE_OPT_ECO_OPT_POST_LINK_SCRIPT	"" ;# Optional; specify the file that contains custom PT script, which is executed after linking in PrimeTime;
;# use PT commands that require the current design
########################################################################################## 
## Variables for chip finishing related settings (Used by chip_finish.tcl)
##########################################################################################
set CHIP_FINISH_ACTIVE_SCENARIO_LIST 	"" ;# A subset of scenarios to be made active during chip_finish step.
;# once set, the list of active scenarios is saved and carried over to subsequent steps.
set TCL_USER_CHIP_FINISH_PRE_SCRIPT 	"" ;# An optional Tcl file for chip_finish.tcl to be sourced before filler cell insertion.
set TCL_USER_CHIP_FINISH_POST_SCRIPT 	"" ;# An optional Tcl file for chip_finish.tcl to be sourced after metal fill insertion.
## Std cell filler and decap cells used by chip_finish step and post PT-ECO refill in pt_eco step
set CHIP_FINISH_METAL_FILLER_PREFIX 	"" ;# A string to specify the prefix for metal filler (decap) cells.
set CHIP_FINISH_NON_METAL_FILLER_PREFIX $CHIP_FINISH_METAL_FILLER_PREFIX ;# A string to specify the prefix for non-metal fillers.
set CHIP_FINISH_METAL_FILLER_LIB_CELL_LIST "" ;# A list of metal filler (decap) lib cells, including the library name, for ex, 
;# Example: "hvt/DCAP_HVT lvt/DCAP_LVT". Recommended to specify decaps from largest to smallest.
set CHIP_FINISH_NON_METAL_FILLER_LIB_CELL_LIST "" ;# A list of non-metal filler lib cells, including the library name, for ex,
;# Example: hvt/FILL_HVT lvt/FILL_LVT. Recommended to specify them from largest to smallest.
## Signal EM
set CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FORMAT "ITF" ;# Specify signal EM constraint format: ITF | ALF; string is uppercase and ITF is default
set CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FILE "" ;# A constraint file which contains signal electromigration constraints;
;# specify an ITF file if CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FORMAT is set to ITF, and specify an
;# ALF file if CHIP_FINISH_SIGNAL_EM_CONSTRAINT_FORMAT is set to ALF;
;# required for signal EM analysis and fixing to be enabled
set CHIP_FINISH_SIGNAL_EM_SAIF 		"" ;# An optional SAIF file for the signal EM analysis.
set CHIP_FINISH_SIGNAL_EM_SCENARIO 	"" ;# Specify an active scenario which is enabled for setup and hold analysis;
;# Required for signal EM analysis and fixing to proceed.
set CHIP_FINISH_SIGNAL_EM_FIXING 	false ;# Enable signal EM fixing; false | true; false is default
########################################################################################## 
## Variables for ICV in-design related settings (used by icv_in_design.tcl)
##########################################################################################
set ICV_IN_DESIGN_ACTIVE_SCENARIO_LIST 	"" ;# A subset of scenarios to be made active during icv_in_design step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set TCL_USER_ICV_IN_DESIGN_PRE_SCRIPT 	"" ;# An optional Tcl file for chip_finish.tcl to be sourced before signoff_check_drc.
set TCL_USER_ICV_IN_DESIGN_POST_SCRIPT 	"" ;# An optional Tcl file for chip_finish.tcl to be sourced after second signoff_check_drc.
## signoff_check_drc specific variables
set ICV_IN_DESIGN_DRC_CHECK_RUNSET 	"" ;# The foundry runset for ICV used by signoff_check_drc
set ICV_IN_DESIGN_DRC_CHECK_RUNDIR 	"z_check_drc" 
;# The working directory for the signoff_check_drc before signoff_fix_drc;
;# The directory that contains the initial DRC error database for signoff_fix_drc.
## singoff_fix_drc specific variables
set ICV_IN_DESIGN_ADR 			true ;# true|false; true enables signoff_fix_drc in addition to signoff_check_drc; default is true
set ICV_IN_DESIGN_ADR_RUNDIR 		"z_adr"	;# The working directory for signoff_fix_drc; only takes effect if ICV_IN_DESIGN_ADR is true
set ICV_IN_DESIGN_POST_ADR_RUNDIR 	"z_post_adr" ;# The working directory for signoff_check_drc after signoff_fix_drc is done; 
;# only takes effect if ICV_IN_DESIGN_ADR is true 
set ICV_IN_DESIGN_ADR_DPT_RULES 	"" ;# Specify your DPT rules for signoff_fix_drc fixing; only takes effect if ICV_IN_DESIGN_ADR is true
set ICV_IN_DESIGN_ADR_DPT_RUNDIR	"z_adr_with_dpt" ;# The working directory for signoff_check_drc with DPT rule fixing;
;# only takes effect if ICV_IN_DESIGN_ADR_DPT_RULES (DPR rules) is specified
set ICV_IN_DESIGN_POST_ADR_DPT_RUNDIR	"z_post_adr_with_dpt" ;# The working directory for signoff_check_drc after DPT rule fixing is done;
;# only takes effect if ICV_IN_DESIGN_ADR_DPT_RULES (DPR rules) is specified
## Metal fill specific variables
set ICV_IN_DESIGN_METAL_FILL 		false ;# Default false; set it to true to enable the metal fill creation feature.
set ICV_IN_DESIGN_METAL_FILL_RUNDIR	"z_icvFill" ;# The working directory for signoff_create_metal_fill. Optional. Default is z_icvFill.
set ICV_IN_DESIGN_METAL_FILL_TIMING_DRIVEN_THRESHOLD "" 
;# Specify the threshold for timing-driven metal fill.
;# If not specified, timing-driven is not enabled.
;# If specified, "-timing_preserve_setup_slack_threshold" option is added.
set ICV_IN_DESIGN_METAL_FILL_TRACK_BASED "off" ;# off | <a technology node> | generic; used for -track_fill option of signoff_create_metal_fill
;# for non-track-based : specify off 
;# for track-based : specify either a node (refer to man page) or generic 
set ICV_IN_DESIGN_METAL_FILL_RUNSET	"" ;# Specify the foundry runset for signoff_create_metal_fill command;
;# required only by non track-based metal fill (ICV_IN_DESIGN_METAL_FILL_TRACK_BASED set to off).
set ICV_IN_DESIGN_POST_METAL_FILL_RUNDIR "z_MFILL_after" 
;# The working directory for the signoff_check_drc after signoff_create_metal_fill is completed;
;# only takes effect if ICV_IN_DESIGN_METAL_FILL is true
set ICV_IN_DESIGN_METAL_FILL_TRACK_BASED_PARAMETER_FILE "auto" ;# auto | <a parameter file>; default is auto;
;# this variable is only for track-based metal fill;
;# specify auto to use ICC-II auto generated track_fill_params.rh file or your own paramter file.
########################################################################################## 
## Variables for settings related to write data (used by write_data.tcl)
##########################################################################################
## write_gds related
set WRITE_GDS_LAYER_MAP_FILE 		"" ;# A layer map file which provides a mapping between the tool and GDS layers
set WRITE_OASIS_LAYER_MAP_FILE 		"" ;# A layer map file which provides a mapping between the tool and OASIS layers
########################################################################################## 
## Variables for Functional ECO related settings (used by functional_eco.tcl)
##########################################################################################
set FUNCTIONAL_ECO_ACTIVE_SCENARIO_LIST	"" ;# Optional; a subset of scenarios to be made active during the step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set TCL_USER_FUNCTIONAL_ECO_PRE_SCRIPT	"" ;# An optional Tcl file to be sourced before ECO operations.
set TCL_USER_FUNCTIONAL_ECO_POST_SCRIPT	"" ;# An optional Tcl file to be sourced after route_eco.
set FUNCTIONAL_ECO_DISPLACEMENT_THRESHOLD "10" ;# A float to specify the maximum displacement threshold value for 
;# place_eco_cells -eco_changed_cells -legalize_mode minimum_physical_impact -displacement_threshold;
set FUNCTIONAL_ECO_VERILOG_FILE		"" ;# Required; a verilog file to be 
set FUNCTIONAL_ECO_MODE			"default" ;# Specify the preferred flow; default|freeze_silicon
;# default: sources $FUNCTIONAL_ECO_CHANGE_FILE and place_eco_cells in MPI mode
;# freeze_silicon: add_spare_cells, place_eco_cells, sources $FUNCTIONAL_ECO_CHANGE_FILE, and place_freeze_silicon
########################################################################################## 
## Variables for PT ECO related settings (used by pt_eco.tcl/pt_eco_incremental.tcl)
##########################################################################################
## The following variables apply to both pt_eco.tcl (classic PT-ECO flow) and pt_eco_incremental.tcl (Galaxy incremental ECO flow)
set PT_ECO_ACTIVE_SCENARIO_LIST 	"" ;# Optional; a subset of scenarios to be made active during the step;
;# once set, the list of active scenarios is saved and carried over to subsequent steps;
set TCL_USER_PT_ECO_PRE_SCRIPT 		"" ;# An optional Tcl file to be sourced before ECO operations.
set TCL_USER_PT_ECO_POST_SCRIPT 	"" ;# An optional Tcl file to be sourced after route_eco.
set PT_ECO_DISPLACEMENT_THRESHOLD 	"10" ;# A float to specify the maximum displacement threshold value for 
;# place_eco_cells -eco_changed_cells -legalize_mode minimum_physical_impact -displacement_threshold;
## The following variables only apply to pt_eco.tcl (classic PT-ECO flow)
set PT_ECO_CHANGE_FILE 			"" ;# Required; an ECO guidance file generated by the PT-SI write_changes command,
;# as an input to the pt_eco.tcl
set PT_ECO_MODE				"default" ;# Specify the preferred flow for the PT-ECO run; default|freeze_silicon
;# default: sources $PT_ECO_CHANGE_FILE and place_eco_cells in MPI mode
;# freeze_silicon: add_spare_cells, place_eco_cells, sources $PT_ECO_CHANGE_FILE, and place_freeze_silicon
########################################################################################## 
## Variables for Redhawk in-design related settings 
## (used by redhawk_in_design_pnr.tcl; SNPS_INDESIGN_RH_RAIL license required)
##########################################################################################
set REDHAWK_DIR 			"" ;# Specify the path to REDHAWK executable; required 
set REDHAWK_PAD_FILE 			"" ;# Default is top level pins.
set REDHAWK_ANALYSIS_NETS 		"" ;# Required. Specify the list of power and ground nets in pairs and in separate lines for the analysis;
;# for example, "VDD1 VSS1 VDD2 VSS2 VDD3 VSS3", where VDD* are power nets and VSS* are ground nets.
set REDHAWK_TECH_FILE 			"" ;# Required. Apache Technology File
set REDHAWK_MACROS 			"" ;# Optional. List of Macro names and macro directories in pairs and in separate lines;
;# for example, "macro1_name macro1_directory 
;#		    macro2_name macro2_directory 
;#		    macro3_name macro3_directory"
set REDHAWK_SWITCH_MODEL_FILES 		"" ;# Optional. List of switch model files;
;# for example: "switch_model_file1 
;#               switch_model_file2 
;#		    switch_model_file3"
set REDHAWK_LIB_FILES 			"" ;# Required. List of .lib files in separate lines.
;# for example: "/home/lib_1.lib 
;#               /home/lib_2.lib
;#               /home/lib_3.lib"
set REDHAWK_APL_FILES			"" ;# Required for dynamic analysis.  List of apl files in separate lines.
;# for example: "x.cdev cdev
;#               x.current current
;#               y.cdev cdev
;#               y.current current"
set REDHAWK_EXTRA_GSR 			"" ;# Optional. Provide a file with custom Redhawk settings.
set REDHAWK_ANALYSIS 			"" ;# Required. Specify of the analyses below:
;# For Static analysis: "static"
;# For Vector-based Dynamic analysis: "dynamic_vcd"
;# For Vectorless Dynamic analysis: "dynamic_vectorless"
;# For Effective Resistance analysis: "effective_resistance"
;# For Minimum path resistance analysis: "min_path_resistance"
;# For Integrity Check: "check_missing_via"
set REDHAWK_OUTPUT_REPORT 		"" ;# Optional. Specify a file name to have the output report produced:
;# For Static or dynamic analysis: the effective voltage drop is reported
;# For Effective Resistance analysis: the effective resistance is reported
;# For Minimum path resistance analysis: the minimum path resistance is reported
;# For Integrity Check: the missing vias are reported
set REDHAWK_EM_ANALYSIS 	   	false ;# Optional. Set to true if EM analysis to be performed with static or dynamic analysis.
set REDHAWK_EM_REPORT 			"" ;# Optional. Specify a file name to have the EM output report produced.
set REDHAWK_SCRIPT_FILE 		"" ;# Optional. Specify a file name for using Redhawk standalone run tcl file.
set REDHAWK_SWITCHING_ACTIVITY_FILE 	"" ;# Required for vector-based dynamic analysis.  Format is as follows:
;# {file_format [file_name] [strip_path]}
set REDHAWK_FIX_MISSING_VIAS       	false ;# Optional. Set to true to enable inserting vias to missing via locations after the check_missing_via flow is run.
set REDHAWK_MISSING_VIA_POS_THRESHOLD	"" ;# Optional. Set to positive voltage between two overlapped layers for filtering purpose.  Default is no filtering.
set REDHAWK_RAIL_DATABASE               RAIL_DATABASE  ; #Optional. Set ICC2 Redhawk Fusion output directory.
set REDHAWK_PGA_POWER_NET               "" ; #Required.  Set one power net for PGA.
set REDHAWK_PGA_GROUND_NET              "" ; #Required.  Set one ground net for PGA
set REDHAWK_PGA_NODE                    "" ; #Required. Set the technology node such as tsmc16.
set REDHAWK_PGA_ICV_DIR                 "" ; #Required. Set the path to the ICV binary.  Example: /global/apps/icv_2018.06
##########################################################################################
## System Variables and Settings (there's no need to change them)
##########################################################################################
## Reporting 
set REPORT_QOR				true ;# true|false; RM default true; runs various reporting commands at end of each step;
;# reporting commands vary by stage; set it to false to skip reporting
set REPORT_QOR_REPORT_POWER		true ;# true|false; RM default true;
;# set it to false to skip report_power and report_clock_qor -type power during reporting
set REPORT_QOR_REPORT_CONGESTION	true ;# true|false; RM default reports congestion with "route_global -congestion_map_only true"
;# at the end of preroute steps; set it to false to skip.
set search_path [list ./rm_icc2_pnr_scripts ./rm_setup ./templates $REDHAWK_SEARCH_PATH]
lappend search_path .
if {$synopsys_program_name == "icc2_shell"} {
	set_host_options -max_cores 8

	## Enable on-disk operation for copy_block to save block to disk right away
	set_app_option -name design.on_disk_operation -value true ;# default false and global-scoped
}
set sh_continue_on_error true
## Label names (while $DESIGN_NAME is the block name)
set INIT_DESIGN_BLOCK_NAME 		"init_design" 			;# Label name to be used when saving a block in init_design.tcl
set PLACE_OPT_BLOCK_NAME 		"place_opt" 			;# Label name to be used when saving a block in place_opt.tcl
set CLOCK_OPT_CTS_BLOCK_NAME 		"clock_opt_cts" 		;# Label name to be used when saving a block in clock_opt_cts.tcl
set CLOCK_OPT_OPTO_BLOCK_NAME 		"clock_opt_opto" 		;# Label name to be used when saving a block in clock_opt_opto.tcl
set ROUTE_AUTO_BLOCK_NAME 		"route_auto" 			;# Label name to be used when saving a block in route_auto.tcl
set ROUTE_OPT_BLOCK_NAME 		"route_opt" 			;# Label name to be used when saving a block in route_opt.tcl
set CHIP_FINISH_BLOCK_NAME 		"chip_finish" 			;# Label name to be used when saving a block in chip_finish.tcl
set ICV_IN_DESIGN_BLOCK_NAME 		"icv_in_design" 		;# Label name to be used when saving a block in icv_in_design.tcl
set WRITE_DATA_FROM_BLOCK_NAME 		$ICV_IN_DESIGN_BLOCK_NAME 	;# Label name of the source block in write_data.tcl;
set WRITE_DATA_BLOCK_NAME 		"write_data" 			;# Label name to be used when saving a block in write_data.tcl
;# default is ICV_IN_DESIGN_BLOCK_NAME
set FUNCTIONAL_ECO_FROM_BLOCK_NAME	$ROUTE_OPT_BLOCK_NAME 		;# Label name of the source block in functional_eco.tcl;
;# default is ROUTE_OPT_BLOCK_NAME
set FUNCTIONAL_ECO_BLOCK_NAME		"functional_eco"		;# Label name to be used when saving a block in functional_eco.tcl
set PT_ECO_FROM_BLOCK_NAME 		$ROUTE_OPT_BLOCK_NAME 		;# Label name of the source block in pt_eco.tcl;
;# default is ROUTE_OPT_BLOCK_NAME
set PT_ECO_BLOCK_NAME 			"pt_eco" 			;# Label name to be used when saving a block in pt_eco.tcl
set PT_ECO_INCREMENTAL_FROM_BLOCK_NAME 	$ROUTE_OPT_BLOCK_NAME 		;# Label name of the source block in pt_eco_incremental_1.tcl;
;# default is ROUTE_OPT_BLOCK_NAME; specify a different name if needed
set PT_ECO_INCREMENTAL_1_BLOCK_NAME 	"pt_eco_incremental_1" 		;# Label name to be used when saving a block in pt_eco_incremental_1.tcl
set PT_ECO_INCREMENTAL_2_BLOCK_NAME 	"pt_eco_incremental_2" 		;# Label name to be used when saving a block in pt_eco_incremental_2.tcl
set REDHAWK_IN_DESIGN_PNR_FROM_BLOCK_NAME $INIT_DESIGN_BLOCK_NAME	;# Label name of the starting block for redhawk_in_design_pnr.tcl;
;# default is INIT_DESIGN_BLOCK_NAME
## Directories
set OUTPUTS_DIR	"./outputs_icc2"	;# Directory to write output data files; mainly used by write_data.tcl
set REPORTS_DIR	"./rpts_icc2"		;# Directory to write reports; mainly used by report_qor.tcl
if !{[file exists $OUTPUTS_DIR]} {file mkdir $OUTPUTS_DIR} ;# do not change this line or directory may not be created properly
if !{[file exists $REPORTS_DIR]} {file mkdir $REPORTS_DIR} ;# do not change this line or directory may not be created properly
##########################################################################################
## Hierarchical PNR Variables (used by hierarchical PNR implementation)
##########################################################################################
## For designs where the blocks are bound to abstracts
set SUB_BLOCK_REFS                   	[list ] ;# If ABSTRACT_TYPE_FOR_MPH_BLOCKS == flattened , specify design names of the immediate child blocks
;# If ABSTRACT_TYPE_FOR_MPH_BLOCKS == nested , specify design names of the physical blocks in all lower levels of physical hierarchy
;# Include the blocks that will be bound to abstracts
set USE_ABSTRACTS_FOR_BLOCKS        	[list ] ;# design names of the physical blocks in the next lower level that will be bound to abstracts
## By default, abstracts created after icv_in_design step of lower-level are used to implement the current level
## Update the following variables if you want to use abstracts created after any other step 
set BLOCK_ABSTRACT_FOR_PLACE_OPT 	"$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_PLACE_OPT label for place_opt
set BLOCK_ABSTRACT_FOR_CLOCK_OPT_CTS    "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_CLOCK_OPT_CTS label for clock_opt_cts
set BLOCK_ABSTRACT_FOR_CLOCK_OPT_OPTO   "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_CLOCK_OPT_OPTO label for clock_opt_opto
set BLOCK_ABSTRACT_FOR_ROUTE_AUTO       "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_ROUTE_AUTO label for route_auto
set BLOCK_ABSTRACT_FOR_ROUTE_OPT        "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_ROUTE_OPT label for route_opt
set BLOCK_ABSTRACT_FOR_CHIP_FINISH      "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_CHIP_FINISH for chip_finish
set BLOCK_ABSTRACT_FOR_ICV_IN_DESIGN    "$ICV_IN_DESIGN_BLOCK_NAME" ;# Use blocks with $BLOCK_ABSTRACT_FOR_ICV_IN_DESIGN label for icv_in_design
set USE_ABSTRACTS_FOR_POWER_ANALYSIS 	false ;# Default false; false|true;
;# sets app option abstract.annotate_power that annotates power information in the abstracts
;# set this to true to perform power analysis inside subblocks modeled as abstracts
set USE_ABSTRACTS_FOR_SIGNAL_EM_ANALYSIS false ;# Default false; false|true;
;# sets app option abstract.enable_signal_em_analysis 
;# set this to true to perform signal em analysis inside abstracts
set ABSTRACT_TYPE_FOR_MPH_BLOCKS "flattened" ; # "nested | flattened", Default nested. Specifies the type of abstract to be created for MPH blocks (blocks with more than 1 level of physical hierarchy)
;# Allowed values are nested and flattened. 
;# when this variable is set to nested (default), preserve_block_instances option of create_abstract command is set to true (default value)
;# when this variable is set to flattened , preserve_block_instances option of create_abstract command is set to false
set CHECK_HIER_TIMING_CONSTRAINTS_CONSISTENCY true ;# Determines whether the consistency of top and block timing constraints is checked during the check_design command
;# The variable in turn sets the application option abstract.check_constraints_consistency to true
########################################################################################## 
## Hierarchical PNR Variables for clock_opt_cts related settings (used by clock_opt_cts.tcl)
##########################################################################################
set PROMOTE_CLOCK_BALANCE_POINTS	false ;# Default false. When implementing intermediate and top levels of physical hierarchy,
;# set this variable to true to promote clock balance points from sub-blocks.
;# Leave this variable to its default value, if the needed clock balance points for the pins
;# inside sub-blocks are applied from the top-level itself.
########################################################################################## 
## Hierarchical PNR Variables for designs where some of the blocks are bound to ETMs
##########################################################################################
set WRITE_DATA_FOR_ETM_GENERATION       false ;# Default false. Set it to true, for writing out required design data for ETM Generation in PrimeTime 
set WRITE_DATA_FOR_ETM_BLOCK_NAME       $ICV_IN_DESIGN_BLOCK_NAME ;# Name of the starting block for the write_data_for_etm step
## ICC2-RM provides additional files (flavors) to override RM default settings for high connectivity, run time and area/power focused designs.
#  These files are under rm_icc2_pnr_scripts/ :  
#  flavor.high_connectivity_high_congestion_focused.tcl, flavor.area_power_focused.tcl and flavor.run_time_focused.tcl
#  You can use the ADDITIONAL_FLAVOR variable to control whether to use these flavors.
set ADDITIONAL_FLAVOR "" 	;# default unspecified; if unspecified, runs RM default flow that works/balances all PPA
;# set it to high_connectivity_high_congestion for high connectivity design styles with heavy congestions
;# set it to area_power for extra area and power optimizations
;# set it to run_time if run time is the primary concern
puts "RM-info: Completed script [info script]\n"
RM-info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/rm_setup/icc2_pnr_setup.tcl

set REPORT_PREFIX $ROUTE_AUTO_BLOCK_NAME
route_auto
open_lib $DESIGN_LIBRARY
Information: Loading library file '/afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/CORTEXM0DS' (FILE-007)
Information: Loading library file '/afs/eos.ncsu.edu/lockers/research/ece/wdavis/tech/ece720/Nangate_15nm_OCL_ICC2_LibPrep_v2014_06/icc2_cell_lib/NanGate_15nm_OCL.ndm' (FILE-007)
{CORTEXM0DS}
copy_block -from ${DESIGN_NAME}/${CLOCK_OPT_OPTO_BLOCK_NAME} -to ${DESIGN_NAME}/${ROUTE_AUTO_BLOCK_NAME}
Information: User units loaded from library 'NanGate_15nm_OCL' (LNK-040)
Information: Saving block 'CORTEXM0DS:CORTEXM0DS/route_auto.design'
{CORTEXM0DS:CORTEXM0DS/route_auto.design}
current_block ${DESIGN_NAME}/${ROUTE_AUTO_BLOCK_NAME}
{CORTEXM0DS:CORTEXM0DS/route_auto.design}
link_block
Using libraries: CORTEXM0DS NanGate_15nm_OCL
Visiting block CORTEXM0DS:CORTEXM0DS/route_auto.design
Design 'CORTEXM0DS' was successfully linked.
1
## The following only applies to hierarchical designs
## Swap abstracts if abstracts specified for clock_opt_opto and route_auto are different
if {$DESIGN_STYLE == "hier"} {
	if {$USE_ABSTRACTS_FOR_BLOCKS != "" && ($BLOCK_ABSTRACT_FOR_ROUTE_AUTO != $BLOCK_ABSTRACT_FOR_CLOCK_OPT_OPTO)} {
		puts "RM-info: Swapping from $BLOCK_ABSTRACT_FOR_CLOCK_OPT_OPTO to $BLOCK_ABSTRACT_FOR_ROUTE_AUTO abstracts for all blocks."
		change_abstract -references $USE_ABSTRACTS_FOR_BLOCKS -label $BLOCK_ABSTRACT_FOR_ROUTE_AUTO
		report_abstracts
	}
}
if {$ROUTE_AUTO_ACTIVE_SCENARIO_LIST != ""} {
	set_scenario_status -active false [get_scenarios -filter active]
	set_scenario_status -active true $ROUTE_AUTO_ACTIVE_SCENARIO_LIST
}
source -echo settings.route_auto.tcl ;# step specific settings
puts "RM-info: Running script [info script]\n"
RM-info: Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/rm_icc2_pnr_scripts/settings.route_auto.tcl

##########################################################################################
# Tool: IC Compiler II
# Script: settings.route_auto.tcl 
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
## Prefix
if {$ROUTE_AUTO_USER_INSTANCE_NAME_PREFIX != ""} {
	set_app_options -name opt.common.user_instance_name_prefix -value $ROUTE_AUTO_USER_INSTANCE_NAME_PREFIX
}
## Noise threshold : used by router to identity the criticality of xtalk impact of the nets
#  Specify a lower number for the router to pick up more nets as xtalk critical nets.
#  For these nets, the router will try to reduce parallel routing as much as possible.
#	set_app_options -name route.common.threshold_noise_ratio -value 0.25
##########################################################################################
## Antenna settings
##########################################################################################
## To disables antenna analysis and fix
#	set_app_options -name route.detail.antenna -value false ;# default true
#  To disables layer hopping for antenna fix
#	set_app_options -name route.detail.hop_layers_to_fix_antenna -value false ;# default true
if {$ROUTE_AUTO_ANTENNA_FIXING} {
	if {[file exists [which $TCL_ANTENNA_RULE_FILE]]} {
		puts "RM-info: Sourcing [which $TCL_ANTENNA_RULE_FILE]"
		source $TCL_ANTENNA_RULE_FILE
	} elseif {$TCL_ANTENNA_RULE_FILE != ""} {
		puts "RM-error : ROUTE_AUTO_ANTENNA_FIXING is true but TCL_ANTENNA_RULE_FILE($TCL_ANTENNA_RULE_FILE) is invalid. Please correct it."
	}
}
##########################################################################################
## Redundant via insertion settings
##########################################################################################
## Redundant via concurrent insertion
## For established nodes, run concurrent redundant via insertion during route_auto and route_opt.
set_app_options -name route.common.post_detail_route_redundant_via_insertion -value medium ;# default off
## Redundant via insertion starting layers 
## To insert redundant vias starting from lower layers first then process higher layers, set the following.
## Depending on the design, redundant via insertion rates on DPT layers can be higher if insertion is done from lower to upper layers.
#	set_app_options -name route.detail.insert_redundant_vias_layer_order_low_to_high -value true ;# default false
## Redundant via insertion mapping
if {$REDUNDANT_VIA_INSERTION} {
	## Source ICC-II via mapping file for redundant via insertion
	if {[file exists [which $TCL_USER_REDUNDANT_VIA_MAPPING_FILE]]} {
		puts "RM-info: Sourcing [which $TCL_USER_REDUNDANT_VIA_MAPPING_FILE]"
		source $TCL_USER_REDUNDANT_VIA_MAPPING_FILE
		report_via_mapping
	## Source ICC via mapping file that contains define_zrt_redundant_vias commands
	} elseif {[file exists [which $TCL_USER_ICC_REDUNDANT_VIA_MAPPING_FILE]]} {
		puts "RM-info: Sourcing [which $TCL_USER_ICC_REDUNDANT_VIA_MAPPING_FILE]"
		add_via_mapping -from_icc_file $TCL_USER_ICC_REDUNDANT_VIA_MAPPING_FILE
		report_via_mapping
	} else {
		puts "RM-warning: No valid redundant via mapping file has been specified."
	}
}
##########################################################################################
## GRLB handling (RM default for GRLB: >=20nm is true; <=16nm is false)
##########################################################################################
## Prepare the design for final routing if GRLB (global route layer aware optimization) is enabled in preroute;
#  However if CLOCK_OPT_GLOBAL_ROUTE_OPT is also enabled along with GRLB, the following is not needed because
#  CLOCK_OPT_GLOBAL_ROUTE_OPT will automatically perform remove_route_aware_estimation
if {[get_app_option_value -name opt.common.use_route_aware_estimation] != "false" && !($CLOCK_OPT_GLOBAL_ROUTE_OPT == "true")} {
	remove_route_aware_estimation
}
Information: RDE mode is turned on. (TIM-124)
Information: Corner mode_norm.worst_low.RCmax: no PVT mismatches. (PVT-032)
Information: Corner mode_norm.slow.RCmax_bc: no PVT mismatches. (PVT-032)
Information: Corner mode_norm.fast.RCmin_bc: no PVT mismatches. (PVT-032)
Information: Corner mode_norm.slow.RCmax: no PVT mismatches. (PVT-032)
Information: Corner mode_norm.fast.RCmin: no PVT mismatches. (PVT-032)
Information: Corner mode_norm.worst_low.RCmax_bc: no PVT mismatches. (PVT-032)
Information: The stitching and editing of coupling caps is turned ON for design 'CORTEXM0DS:CORTEXM0DS/route_auto.design'. (TIM-125)
Information: Design CORTEXM0DS has 9011 nets, 0 global routed, 269 detail routed. (NEX-024)
Information: The RC mode used is CTO(RDE) for design 'CORTEXM0DS'. (NEX-022)
Information: Crosstalk analysis has been disabled. (TIM-114)
Information: Design Average RC for design CORTEXM0DS  (NEX-011)
Information: r = 44.845238 ohm/um, via_r = 3.722333 ohm/cut, c = 0.094479 ff/um, cc = 0.000000 ff/um (X dir) (NEX-017)
Information: r = 44.845238 ohm/um, via_r = 3.722334 ohm/cut, c = 0.089691 ff/um, cc = 0.000000 ff/um (Y dir) (NEX-017)
Information: Update timing completed net estimation for all the timing graph nets (TIM-111)
Information: Net estimation statistics: timing graph nets = 9009, routed nets = 269, across physical hierarchy nets = 0, parasitics cached nets = 9009, delay annotated nets = 0, parasitics annotated nets = 0, multi-voltage nets = 0. (TIM-112)
************************************************************
Timer Settings:
Delay Calculation Style:                   auto
Signal Integrity Analysis:                 enabled
Timing Window Analysis:                    enabled
Advanced Waveform Propagation:             disabled
Variation Type:                            fixed_derate
Clock Reconvergence Pessimism Removal:     enabled
Advanced Receiver Model:                   disabled
************************************************************
Information: The net parasitics of block CORTEXM0DS are cleared. (TIM-123)
Information: The stitching and editing of coupling caps is turned ON for design 'CORTEXM0DS:CORTEXM0DS/route_auto.design'. (TIM-125)
Information: Design CORTEXM0DS has 9011 nets, 0 global routed, 269 detail routed. (NEX-024)
Information: The RC mode used is CTO(RDE) for design 'CORTEXM0DS'. (NEX-022)
Information: Crosstalk analysis has been disabled. (TIM-114)
Information: Design Average RC for design CORTEXM0DS  (NEX-011)
Information: r = 44.845238 ohm/um, via_r = 3.722333 ohm/cut, c = 0.094479 ff/um, cc = 0.000000 ff/um (X dir) (NEX-017)
Information: r = 44.845238 ohm/um, via_r = 3.722334 ohm/cut, c = 0.089691 ff/um, cc = 0.000000 ff/um (Y dir) (NEX-017)
Information: Update timing completed net estimation for all the timing graph nets (TIM-111)
Information: Net estimation statistics: timing graph nets = 9009, routed nets = 269, across physical hierarchy nets = 0, parasitics cached nets = 9009, delay annotated nets = 0, parasitics annotated nets = 0, multi-voltage nets = 0. (TIM-112)
puts "RM-info: Completed script [info script]\n"
RM-info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/rm_icc2_pnr_scripts/settings.route_auto.tcl

source -echo settings.non_persistent.tcl ;# non-persistent settings to be re-applied in each session
puts "RM-info: Running script [info script]\n"
RM-info: Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/rm_icc2_pnr_scripts/settings.non_persistent.tcl

##########################################################################################
# Script: settings.non_persistent.tcl
# Description : Settings that need to be re-applied in each new ICC-II session are incldued below.
# Version: P-2019.03-SP2
# Copyright (C) 2014-2019 Synopsys, Inc. All rights reserved.
##########################################################################################
####################################
## Timer 
####################################
## set_app_options -name time.enable_preset_clear_arcs -value true ;# tool default false, global-scoped
####################################
## Keepout margin (lib cell based) 
####################################
## Lib cell based keepout margin is not persistent in the current release and must be re-applied in new ICC-II seccions.
#  Example : create_keepout_margin -outer {5 5 5 5} [get_lib_cells */lib_cell_name]
####################################
## set_threshold_voltage_group_type 
####################################
## Set your threshold_voltage_group attributes. These are persistent and can be simply defined in settings.place_opt.tcl. 
#  Listed here for your reference. For example:
#  	define_user_attribute -type string -class lib_cell threshold_voltage_group
#  	set_attribute -quiet [get_lib_cells -quiet */*LVT] threshold_voltage_group LVt
#  	set_attribute -quiet [get_lib_cells -quiet */*RVT] threshold_voltage_group RVt
#  	set_attribute -quiet [get_lib_cells -quiet */*HVT] threshold_voltage_group HVt
## set_threshold_voltage_group_type is not persistent and should be defined here:
#  	set_threshold_voltage_group_type -type low_vt LVt
#  	set_threshold_voltage_group_type -type normal_vt RVt
#  	set_threshold_voltage_group_type -type high_vt HVt
puts "RM-info: Completed script [info script]\n"
RM-info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/rm_icc2_pnr_scripts/settings.non_persistent.tcl

##########################################################################################
## Additional flavors (optional)
##########################################################################################
## ICC2-RM provides additional files (flavors) to override a small set of RM default settings for high connectivity, run time,
#  and area/power focused designs. This is controlled by ADDITIONAL_FLAVOR, which is by default unspecified; 
#  if unspecified, runs RM default flow that works/balances all PPA.
if {$ADDITIONAL_FLAVOR == "run_time"} {
	puts "RM-info: Sourcing [which flavor.run_time_focused.tcl]"
	source -echo flavor.run_time_focused.tcl
}
##########################################################################################
## Pre-route_auto customizations
##########################################################################################
if {[file exists [which $TCL_USER_ROUTE_AUTO_PRE_SCRIPT]]} {
	puts "RM-info: Sourcing [which $TCL_USER_ROUTE_AUTO_PRE_SCRIPT]"
	source -echo $TCL_USER_ROUTE_AUTO_PRE_SCRIPT
} elseif {$TCL_USER_ROUTE_AUTO_PRE_SCRIPT != ""} {
	puts "RM-error: TCL_USER_ROUTE_AUTO_PRE_SCRIPT($TCL_USER_ROUTE_AUTO_PRE_SCRIPT) is invalid. Please correct it."
}
redirect -tee -file ${REPORTS_DIR}/${REPORT_PREFIX}.report_app_options.start {report_app_options -non_default *}
****************************************
Report : app_option
           -non_default
Design : CORTEXM0DS
Version: P-2019.03-SP1
Date   : Thu Sep 26 23:31:52 2019
****************************************
Name                                                   Type       Value       User-default System-default Scope      Status     Source
------------------------------------------------------ ---------- ----------- ------------ -------------- ---------- ---------- ----------------------------------------------------------------------------------------------------
ccd.post_route_buffer_removal                          bool       true        --           false          block      normal     
design.on_disk_operation                               bool       true        true         false          global     normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/rm_setup/icc2_pnr_setup.tcl:552
extract.enable_coupling_cap                            bool       true        --           false          block      normal     
opt.area.effort                                        enum       high        {}           low            block      normal     
opt.common.advanced_logic_restructuring_mode           enum       area_timing {}           none           block      normal     
opt.common.buffer_area_effort                          enum       ultra       {}           low            block      normal     
opt.common.use_route_aware_estimation                  enum       true        {}           false          block      normal     
opt.port.eliminate_verilog_assign                      bool       true        --           false          block      normal     
opt.power.effort                                       enum       high        {}           low            block      normal     
opt.power.mode                                         enum       total       {}           none           block      normal     
opt.timing.effort                                      enum       high        {}           low            block      normal     
place_opt.final_place.effort                           enum       high        {}           medium         block      normal     
place_opt.initial_drc.global_route_based               enum       1           {}           false          block      normal     
place_opt.place.congestion_effort                      enum       high        {}           medium         block      normal     
route.common.post_detail_route_redundant_via_insertion enum       medium      {}           off            block      normal     /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/rm_icc2_pnr_scripts/settings.route_auto.tcl:41
route.detail.eco_max_number_of_iterations              integer    10          --           -1             block      normal     
route.detail.timing_driven                             bool       true        --           false          block      normal     
route.global.timing_driven                             bool       true        --           false          block      normal     
route.track.crosstalk_driven                           bool       true        --           false          block      normal     
route.track.timing_driven                              bool       true        --           false          block      normal     
time.enable_clock_to_data_analysis                     bool       true        --           false          block      normal     
time.enable_io_path_groups                             bool       true        --           false          block      normal     
time.remove_clock_reconvergence_pessimism              bool       true        --           false          block      normal     
time.si_enable_analysis                                bool       true        --           false          block      normal     
------------------------------------------------------ ---------- ----------- ------------ -------------- ---------- ---------- ----------------------------------------------------------------------------------------------------

There are additional internal differences with no available TBC source.
1
redirect -file ${REPORTS_DIR}/${REPORT_PREFIX}.report_lib_cell_purpose {report_lib_cell -objects [get_lib_cells] -column {full_name:20 valid_purposes}}
## Create shields before signal routing
if {$ROUTE_AUTO_CREATE_SHIELDS == "before_route_auto"} {
	create_shields ;# without specifying -nets option, all nets with shielding rules will be shielded 
	set_extraction_options -virtual_shield_extraction false
}
## The following only applies to designs with physical hierarchy
## Ignore the sub-blocks (bound to abstracts) internal timing paths
if {$DESIGN_STYLE == "hier" && $PHYSICAL_HIERARCHY_LEVEL != "bottom"} {
	set_timing_paths_disabled_blocks  -all_sub_blocks
}
##########################################################################################
## Routing flow
##########################################################################################
if {[file exists [which $TCL_USER_ROUTE_AUTO_SCRIPT]]} {
	puts "RM-info: Sourcing [which $TCL_USER_ROUTE_AUTO_SCRIPT]"
	source -echo $TCL_USER_ROUTE_AUTO_SCRIPT
} elseif {$TCL_USER_ROUTE_AUTO_SCRIPT != ""} {
	puts "RM-error: TCL_USER_ROUTE_AUTO_SCRIPT($TCL_USER_ROUTE_AUTO_SCRIPT) is invalid. Please correct it."
} else {

	if {!$ROUTE_AUTO_USE_SINGLE_COMMAND} {

		##########################################################################
		## Routing (atomic): global route
		##########################################################################
		if {!$CLOCK_OPT_GLOBAL_ROUTE_OPT} {

			## Global route (RM default)
			puts "RM-info: Running route_global"
			route_global

		} else {

			## Global route with optimization (optional)
			puts "RM-info: Setting clock_opt.flow.enable_global_route_opt to true (tool default false)"
			set_app_options -name clock_opt.flow.enable_global_route_opt -value true 
			
			## Enable power optimization during Global Route Based Optimization
			puts "RM-info: Setting route_opt.flow.enable_power true (tool default false)"
			set_app_options -name route_opt.flow.enable_power -value true ;# global-scoped
			
			## Include clock_opt_opto scenarios, if specified
			set RM_current_active_scenarios [get_scenarios -filter active]
			if {$CLOCK_OPT_OPTO_ACTIVE_SCENARIO_LIST == "rm_activate_all_scenarios"} {
				set_scenario_status -active true [all_scenarios]
			} elseif {$CLOCK_OPT_OPTO_ACTIVE_SCENARIO_LIST != ""} {
				set_scenario_status -active true $CLOCK_OPT_OPTO_ACTIVE_SCENARIO_LIST
			}
			
			puts "RM-info: Running clock_opt -from global_route_opt command"
			clock_opt -from global_route_opt
			
			## Restore the scenarios prior to the "clock_opt -from global_route_opt" command
			if {$CLOCK_OPT_OPTO_ACTIVE_SCENARIO_LIST != ""} {
				set_scenario_status -active false [get_scenarios -filter active]
				set_scenario_status -active true $RM_current_active_scenarios
			}

		}
		#save_block -as ${DESIGN_NAME}/${ROUTE_AUTO_BLOCK_NAME}_global_route
	
		##########################################################################
		## Routing (atomic): track assign
		##########################################################################
		puts "RM-info: Running update_timing and route_track"
		update_timing
		route_track
		#save_block -as ${DESIGN_NAME}/${ROUTE_AUTO_BLOCK_NAME}_track_assignment
	
		##########################################################################
		## Routing (atomic): detail route
		##########################################################################
		puts "RM-info: Running update_timing and route_detail"
		update_timing
		route_detail
		#save_block -as ${DESIGN_NAME}/${ROUTE_AUTO_BLOCK_NAME}_detail_route

	} else {

		##########################################################################
		## Routing (single command) (optional)
		##########################################################################
		puts "RM-info: Running route_auto"
		route_auto

	}
}
RM-info: Running route_global
Generating Timing information  
Design  Scenario mode_norm.worst_low.RCmax (Mode mode_norm.worst_low.RCmax Corner mode_norm.worst_low.RCmax)
Estimated unitRes/unitCap :
Layer M1 : Res  46.4286 ohm/um Cap  0.148637 ff/um
Layer MINT1 : Res  46.4286 ohm/um Cap  0.154683 ff/um
Layer MINT2 : Res  46.4286 ohm/um Cap  0.154827 ff/um
Layer MINT3 : Res  46.4286 ohm/um Cap  0.154839 ff/um
Layer MINT4 : Res  46.4286 ohm/um Cap  0.154828 ff/um
Layer MINT5 : Res  46.4286 ohm/um Cap  0.154674 ff/um
Layer MSMG1 : Res  8.03571 ohm/um Cap  0.196653 ff/um
Layer MSMG2 : Res  8.03571 ohm/um Cap  0.184306 ff/um
Layer MSMG3 : Res  8.03571 ohm/um Cap  0.18422 ff/um
Layer MSMG4 : Res  8.03571 ohm/um Cap  0.184207 ff/um
Layer MSMG5 : Res  8.03571 ohm/um Cap  0.184091 ff/um
Layer MG1 : Res  0.892857 ohm/um Cap  0.194736 ff/um
Layer MG2 : Res  0.892857 ohm/um Cap  0.177243 ff/um
Generating Timing information  ... Done
Information: The net parasitics of block CORTEXM0DS are cleared. (TIM-123)
Start Global Route ... 
[Init] Elapsed real time: 0:00:00 
[Init] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[Init] Stage (MB): Used    0  Alloctr    0  Proc    0 
[Init] Total (MB): Used    5  Alloctr    5  Proc 1735 
Printing options for 'route.common.*'
common.post_detail_route_redundant_via_insertion        :	 medium              

Printing options for 'route.global.*'
global.deterministic                                    :	 off                 
global.export_soft_congestion_maps                      :	 false               
global.timing_driven                                    :	 true                

Begin global routing.
Turn off antenna since no rule is specified
Cell Min-Routing-Layer = M1
Cell Max-Routing-Layer = MINT5
Skipping 1 internal pins that are not physical. Set route.common.verbose_level to > 0 and run routing command to get skipped pin names.
Info: number of net_type_blockage: 0 
Current Stage stats:
[End of Read DB] Elapsed real time: 0:00:00 
[End of Read DB] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[End of Read DB] Stage (MB): Used  144  Alloctr  145  Proc    0 
[End of Read DB] Total (MB): Used  149  Alloctr  150  Proc 1735 
Loading timing information to the router from design
Timing information loaded to the router.
Constructing data structure ...
Design statistics:
Design Bounding Box (0.00,0.00,76.74,77.57)
Number of routing layers = 13
layer M1, dir Ver, min width = 0.028, min space = 0.036 pitch = 0.064
layer MINT1, dir Hor, min width = 0.028, min space = 0.036 pitch = 0.064
layer MINT2, dir Ver, min width = 0.028, min space = 0.036 pitch = 0.064
layer MINT3, dir Hor, min width = 0.028, min space = 0.036 pitch = 0.064
layer MINT4, dir Ver, min width = 0.028, min space = 0.036 pitch = 0.064
layer MINT5, dir Hor, min width = 0.028, min space = 0.036 pitch = 0.064
layer MSMG1, dir Ver, min width = 0.056, min space = 0.056 pitch = 0.112
layer MSMG2, dir Hor, min width = 0.056, min space = 0.056 pitch = 0.112
layer MSMG3, dir Ver, min width = 0.056, min space = 0.056 pitch = 0.112
layer MSMG4, dir Hor, min width = 0.056, min space = 0.056 pitch = 0.112
layer MSMG5, dir Ver, min width = 0.056, min space = 0.056 pitch = 0.112
layer MG1, dir Hor, min width = 0.112, min space = 0.112 pitch = 0.224
layer MG2, dir Ver, min width = 0.112, min space = 0.112 pitch = 0.224
Current Stage stats:
[End of Build Tech Data] Elapsed real time: 0:00:00 
[End of Build Tech Data] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[End of Build Tech Data] Stage (MB): Used    0  Alloctr    0  Proc    0 
[End of Build Tech Data] Total (MB): Used  152  Alloctr  153  Proc 1735 
Net statistics:
Total number of nets     = 9011
Number of nets to route  = 8742
Number of nets with min-layer-mode soft = 12
Number of nets with min-layer-mode soft-cost-low = 12
269 nets are fully connected,
 of which 269 are detail routed and 0 are global routed.
Current Stage stats:
[End of Build All Nets] Elapsed real time: 0:00:00 
[End of Build All Nets] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[End of Build All Nets] Stage (MB): Used    3  Alloctr    4  Proc    0 
[End of Build All Nets] Total (MB): Used  155  Alloctr  157  Proc 1735 
Average gCell capacity  0.16	 on layer (1)	 M1
Average gCell capacity  10.51	 on layer (2)	 MINT1
Average gCell capacity  9.78	 on layer (3)	 MINT2
Average gCell capacity  11.76	 on layer (4)	 MINT3
Average gCell capacity  9.78	 on layer (5)	 MINT4
Average gCell capacity  11.76	 on layer (6)	 MINT5
Average gCell capacity  5.38	 on layer (7)	 MSMG1
Average gCell capacity  0.00	 on layer (8)	 MSMG2
Average gCell capacity  0.00	 on layer (9)	 MSMG3
Average gCell capacity  0.00	 on layer (10)	 MSMG4
Average gCell capacity  0.00	 on layer (11)	 MSMG5
Average gCell capacity  0.00	 on layer (12)	 MG1
Average gCell capacity  0.00	 on layer (13)	 MG2
Average number of tracks per gCell 12.00	 on layer (1)	 M1
Average number of tracks per gCell 12.01	 on layer (2)	 MINT1
Average number of tracks per gCell 12.00	 on layer (3)	 MINT2
Average number of tracks per gCell 12.01	 on layer (4)	 MINT3
Average number of tracks per gCell 12.00	 on layer (5)	 MINT4
Average number of tracks per gCell 12.01	 on layer (6)	 MINT5
Average number of tracks per gCell 6.86	 on layer (7)	 MSMG1
Average number of tracks per gCell 6.86	 on layer (8)	 MSMG2
Average number of tracks per gCell 6.86	 on layer (9)	 MSMG3
Average number of tracks per gCell 6.86	 on layer (10)	 MSMG4
Average number of tracks per gCell 6.86	 on layer (11)	 MSMG5
Average number of tracks per gCell 3.44	 on layer (12)	 MG1
Average number of tracks per gCell 3.43	 on layer (13)	 MG2
Number of gCells = 131300
Current Stage stats:
[End of Build Congestion map] Elapsed real time: 0:00:00 
[End of Build Congestion map] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[End of Build Congestion map] Stage (MB): Used    1  Alloctr    1  Proc    0 
[End of Build Congestion map] Total (MB): Used  157  Alloctr  159  Proc 1735 
Information: RC layer preference is turned off for this design. (ZRT-613)
Total stats:
[End of Build Data] Elapsed real time: 0:00:00 
[End of Build Data] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[End of Build Data] Stage (MB): Used    6  Alloctr    7  Proc    0 
[End of Build Data] Total (MB): Used  157  Alloctr  159  Proc 1735 
Current Stage stats:
[End of Blocked Pin Detection] Elapsed real time: 0:00:00 
[End of Blocked Pin Detection] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[End of Blocked Pin Detection] Stage (MB): Used   32  Alloctr   32  Proc    0 
[End of Blocked Pin Detection] Total (MB): Used  189  Alloctr  191  Proc 1735 
Information: Using 8 threads for routing. (ZRT-444)
multi gcell levels ON

Start GR phase 0
Current Stage stats:
[End of Initial Routing] Elapsed real time: 0:00:01 
[End of Initial Routing] Elapsed cpu  time: sys=0:00:00 usr=0:00:01 total=0:00:01
[End of Initial Routing] Stage (MB): Used    5  Alloctr    5  Proc    1 
[End of Initial Routing] Total (MB): Used  195  Alloctr  197  Proc 1736 
Initial. Routing result:
Initial. Both Dirs: Overflow =   343 Max = 4 GRCs =   342 (1.69%)
Initial. H routing: Overflow =    57 Max = 3 (GRCs =  1) GRCs =    88 (0.87%)
Initial. V routing: Overflow =   285 Max = 4 (GRCs =  1) GRCs =   254 (2.51%)
Initial. M1         Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
Initial. MINT1      Overflow =    57 Max = 3 (GRCs =  1) GRCs =    88 (0.87%)
Initial. MINT2      Overflow =   285 Max = 4 (GRCs =  1) GRCs =   254 (2.51%)
Initial. MINT3      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
Initial. MINT4      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
Initial. MINT5      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
Initial. MSMG1      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
Initial. MSMG2      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
Initial. MSMG3      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
Initial. MSMG4      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
Initial. MSMG5      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
Initial. MG1        Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
Initial. MG2        Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)


Density distribution:
Layer    0.0  0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  1.0  1.1  1.2  > 1.2 
M1       100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MINT1    29.6 5.19 4.30 9.36 6.54 17.3 11.7 6.79 6.08 1.77 1.15 0.03 0.02 0.00
MINT2    27.7 4.22 5.47 6.72 6.41 14.7 7.98 9.24 6.74 2.19 6.92 0.51 0.86 0.21
MINT3    47.4 14.7 14.2 11.4 7.10 4.41 0.54 0.17 0.01 0.00 0.00 0.00 0.00 0.00
MINT4    58.9 12.6 11.7 7.12 3.92 4.20 0.71 0.52 0.13 0.00 0.04 0.00 0.00 0.00
MINT5    88.3 8.64 2.83 0.15 0.04 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG1    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG2    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG3    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG4    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG5    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MG1      100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MG2      100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
Total    80.4 3.58 3.04 2.74 1.89 3.21 1.65 1.32 1.02 0.31 0.64 0.04 0.07 0.02


Initial. Total Wire Length = 55696.45
Initial. Layer M1 wire length = 0.00
Initial. Layer MINT1 wire length = 14732.24
Initial. Layer MINT2 wire length = 19174.64
Initial. Layer MINT3 wire length = 10058.24
Initial. Layer MINT4 wire length = 8488.46
Initial. Layer MINT5 wire length = 3242.86
Initial. Layer MSMG1 wire length = 0.00
Initial. Layer MSMG2 wire length = 0.00
Initial. Layer MSMG3 wire length = 0.00
Initial. Layer MSMG4 wire length = 0.00
Initial. Layer MSMG5 wire length = 0.00
Initial. Layer MG1 wire length = 0.00
Initial. Layer MG2 wire length = 0.00
Initial. Total Number of Contacts = 60328
Initial. Via V1_0 count = 26982
Initial. Via VINT1_0 count = 24717
Initial. Via VINT2_0 count = 4863
Initial. Via VINT3_0 count = 2721
Initial. Via VINT4_0 count = 1045
Initial. Via VINT5_0 count = 0
Initial. Via VSMG1_0 count = 0
Initial. Via VSMG2_0 count = 0
Initial. Via VSMG3_0 count = 0
Initial. Via VSMG4_0 count = 0
Initial. Via VSMG5_0 count = 0
Initial. Via VG1_0 count = 0
Initial. completed.

Start GR phase 1
Current Stage stats:
[End of Phase1 Routing] Elapsed real time: 0:00:01 
[End of Phase1 Routing] Elapsed cpu  time: sys=0:00:00 usr=0:00:01 total=0:00:01
[End of Phase1 Routing] Stage (MB): Used    0  Alloctr    0  Proc    2 
[End of Phase1 Routing] Total (MB): Used  195  Alloctr  197  Proc 1738 
phase1. Routing result:
phase1. Both Dirs: Overflow =     8 Max = 2 GRCs =    13 (0.06%)
phase1. H routing: Overflow =     5 Max = 2 (GRCs =  1) GRCs =     8 (0.08%)
phase1. V routing: Overflow =     2 Max = 1 (GRCs =  5) GRCs =     5 (0.05%)
phase1. M1         Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase1. MINT1      Overflow =     5 Max = 2 (GRCs =  1) GRCs =     8 (0.08%)
phase1. MINT2      Overflow =     2 Max = 1 (GRCs =  5) GRCs =     5 (0.05%)
phase1. MINT3      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase1. MINT4      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase1. MINT5      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase1. MSMG1      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase1. MSMG2      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase1. MSMG3      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase1. MSMG4      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase1. MSMG5      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase1. MG1        Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase1. MG2        Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)


Density distribution:
Layer    0.0  0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  1.0  1.1  1.2  > 1.2 
M1       100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MINT1    29.7 5.41 4.37 9.51 6.52 17.4 11.6 6.62 6.30 1.95 0.44 0.00 0.00 0.00
MINT2    27.7 4.22 5.80 6.73 6.45 15.4 8.64 10.3 6.86 2.29 5.47 0.00 0.02 0.00
MINT3    45.7 15.2 14.5 11.5 6.97 5.19 0.64 0.11 0.02 0.01 0.00 0.00 0.00 0.00
MINT4    56.4 12.4 11.9 7.57 4.26 4.92 1.13 0.88 0.35 0.02 0.05 0.00 0.00 0.00
MINT5    86.2 10.1 3.09 0.45 0.01 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG1    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG2    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG3    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG4    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG5    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MG1      100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MG2      100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
Total    80.0 3.72 3.11 2.81 1.90 3.37 1.73 1.40 1.06 0.33 0.47 0.00 0.00 0.00


phase1. Total Wire Length = 55956.32
phase1. Layer M1 wire length = 0.00
phase1. Layer MINT1 wire length = 14417.46
phase1. Layer MINT2 wire length = 18349.97
phase1. Layer MINT3 wire length = 10226.52
phase1. Layer MINT4 wire length = 9276.35
phase1. Layer MINT5 wire length = 3686.02
phase1. Layer MSMG1 wire length = 0.00
phase1. Layer MSMG2 wire length = 0.00
phase1. Layer MSMG3 wire length = 0.00
phase1. Layer MSMG4 wire length = 0.00
phase1. Layer MSMG5 wire length = 0.00
phase1. Layer MG1 wire length = 0.00
phase1. Layer MG2 wire length = 0.00
phase1. Total Number of Contacts = 61671
phase1. Via V1_0 count = 26969
phase1. Via VINT1_0 count = 24685
phase1. Via VINT2_0 count = 5404
phase1. Via VINT3_0 count = 3210
phase1. Via VINT4_0 count = 1403
phase1. Via VINT5_0 count = 0
phase1. Via VSMG1_0 count = 0
phase1. Via VSMG2_0 count = 0
phase1. Via VSMG3_0 count = 0
phase1. Via VSMG4_0 count = 0
phase1. Via VSMG5_0 count = 0
phase1. Via VG1_0 count = 0
phase1. completed.

Start GR phase 2
Current Stage stats:
[End of Phase2 Routing] Elapsed real time: 0:00:00 
[End of Phase2 Routing] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[End of Phase2 Routing] Stage (MB): Used    0  Alloctr    0  Proc    0 
[End of Phase2 Routing] Total (MB): Used  195  Alloctr  197  Proc 1738 
phase2. Routing result:
phase2. Both Dirs: Overflow =     3 Max = 1 GRCs =     6 (0.03%)
phase2. H routing: Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase2. V routing: Overflow =     3 Max = 1 (GRCs =  6) GRCs =     6 (0.06%)
phase2. M1         Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase2. MINT1      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase2. MINT2      Overflow =     3 Max = 1 (GRCs =  6) GRCs =     6 (0.06%)
phase2. MINT3      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase2. MINT4      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase2. MINT5      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase2. MSMG1      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase2. MSMG2      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase2. MSMG3      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase2. MSMG4      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase2. MSMG5      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase2. MG1        Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase2. MG2        Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)


Density distribution:
Layer    0.0  0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  1.0  1.1  1.2  > 1.2 
M1       100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MINT1    29.8 5.79 4.83 10.5 7.63 19.4 11.6 5.65 3.98 0.61 0.07 0.00 0.00 0.00
MINT2    27.6 4.16 5.70 6.69 6.42 15.1 8.65 10.1 6.94 2.43 6.06 0.00 0.03 0.00
MINT3    45.6 15.0 14.5 11.5 7.02 5.36 0.61 0.11 0.02 0.01 0.00 0.00 0.00 0.00
MINT4    56.3 12.4 11.9 7.63 4.42 4.90 1.12 0.84 0.39 0.02 0.06 0.00 0.00 0.00
MINT5    86.0 10.2 3.20 0.47 0.01 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG1    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG2    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG3    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG4    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG5    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MG1      100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MG2      100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
Total    80.0 3.74 3.15 2.89 2.00 3.51 1.73 1.31 0.89 0.24 0.48 0.00 0.00 0.00


phase2. Total Wire Length = 55954.24
phase2. Layer M1 wire length = 0.00
phase2. Layer MINT1 wire length = 14423.28
phase2. Layer MINT2 wire length = 18350.22
phase2. Layer MINT3 wire length = 10227.07
phase2. Layer MINT4 wire length = 9272.45
phase2. Layer MINT5 wire length = 3681.22
phase2. Layer MSMG1 wire length = 0.00
phase2. Layer MSMG2 wire length = 0.00
phase2. Layer MSMG3 wire length = 0.00
phase2. Layer MSMG4 wire length = 0.00
phase2. Layer MSMG5 wire length = 0.00
phase2. Layer MG1 wire length = 0.00
phase2. Layer MG2 wire length = 0.00
phase2. Total Number of Contacts = 61664
phase2. Via V1_0 count = 26969
phase2. Via VINT1_0 count = 24687
phase2. Via VINT2_0 count = 5402
phase2. Via VINT3_0 count = 3208
phase2. Via VINT4_0 count = 1398
phase2. Via VINT5_0 count = 0
phase2. Via VSMG1_0 count = 0
phase2. Via VSMG2_0 count = 0
phase2. Via VSMG3_0 count = 0
phase2. Via VSMG4_0 count = 0
phase2. Via VSMG5_0 count = 0
phase2. Via VG1_0 count = 0
phase2. completed.

Start GR phase 3
Current Stage stats:
[End of Phase3 Routing] Elapsed real time: 0:00:00 
[End of Phase3 Routing] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[End of Phase3 Routing] Stage (MB): Used    0  Alloctr    0  Proc    0 
[End of Phase3 Routing] Total (MB): Used  195  Alloctr  197  Proc 1738 
phase3. Routing result:
phase3. Both Dirs: Overflow =     3 Max = 1 GRCs =     6 (0.03%)
phase3. H routing: Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase3. V routing: Overflow =     3 Max = 1 (GRCs =  6) GRCs =     6 (0.06%)
phase3. M1         Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase3. MINT1      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase3. MINT2      Overflow =     3 Max = 1 (GRCs =  6) GRCs =     6 (0.06%)
phase3. MINT3      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase3. MINT4      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase3. MINT5      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase3. MSMG1      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase3. MSMG2      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase3. MSMG3      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase3. MSMG4      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase3. MSMG5      Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase3. MG1        Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)
phase3. MG2        Overflow =     0 Max = 0 (GRCs =  0) GRCs =     0 (0.00%)


Density distribution:
Layer    0.0  0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  1.0  1.1  1.2  > 1.2 
M1       100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MINT1    29.8 5.79 4.83 10.5 7.63 19.4 11.6 5.66 3.97 0.61 0.07 0.00 0.00 0.00
MINT2    27.6 4.16 5.70 6.69 6.42 15.1 8.65 10.1 6.94 2.43 6.06 0.00 0.03 0.00
MINT3    45.6 15.0 14.5 11.5 7.02 5.36 0.61 0.11 0.02 0.01 0.00 0.00 0.00 0.00
MINT4    56.3 12.4 11.9 7.63 4.42 4.90 1.12 0.84 0.39 0.02 0.06 0.00 0.00 0.00
MINT5    86.0 10.2 3.20 0.47 0.01 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG1    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG2    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG3    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG4    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MSMG5    100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MG1      100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
MG2      100. 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
Total    80.0 3.74 3.15 2.89 2.00 3.51 1.73 1.31 0.89 0.24 0.48 0.00 0.00 0.00


phase3. Total Wire Length = 55954.24
phase3. Layer M1 wire length = 0.00
phase3. Layer MINT1 wire length = 14423.28
phase3. Layer MINT2 wire length = 18350.22
phase3. Layer MINT3 wire length = 10227.07
phase3. Layer MINT4 wire length = 9272.45
phase3. Layer MINT5 wire length = 3681.22
phase3. Layer MSMG1 wire length = 0.00
phase3. Layer MSMG2 wire length = 0.00
phase3. Layer MSMG3 wire length = 0.00
phase3. Layer MSMG4 wire length = 0.00
phase3. Layer MSMG5 wire length = 0.00
phase3. Layer MG1 wire length = 0.00
phase3. Layer MG2 wire length = 0.00
phase3. Total Number of Contacts = 61664
phase3. Via V1_0 count = 26969
phase3. Via VINT1_0 count = 24687
phase3. Via VINT2_0 count = 5402
phase3. Via VINT3_0 count = 3208
phase3. Via VINT4_0 count = 1398
phase3. Via VINT5_0 count = 0
phase3. Via VSMG1_0 count = 0
phase3. Via VSMG2_0 count = 0
phase3. Via VSMG3_0 count = 0
phase3. Via VSMG4_0 count = 0
phase3. Via VSMG5_0 count = 0
phase3. Via VG1_0 count = 0
phase3. completed.
[End of Whole Chip Routing] Elapsed real time: 0:00:03 
[End of Whole Chip Routing] Elapsed cpu  time: sys=0:00:00 usr=0:00:04 total=0:00:04
[End of Whole Chip Routing] Stage (MB): Used   44  Alloctr   45  Proc    3 
[End of Whole Chip Routing] Total (MB): Used  195  Alloctr  197  Proc 1738 

Congestion utilization per direction:
Average vertical track utilization   = 21.91 %
Peak    vertical track utilization   = 90.00 %
Average horizontal track utilization = 19.78 %
Peak    horizontal track utilization = 63.89 %

Current Stage stats:
[GR: Done] Elapsed real time: 0:00:00 
[GR: Done] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[GR: Done] Stage (MB): Used   -2  Alloctr   -1  Proc    0 
[GR: Done] Total (MB): Used  193  Alloctr  195  Proc 1738 
GR Total stats:
[GR: Done] Elapsed real time: 0:00:03 
[GR: Done] Elapsed cpu  time: sys=0:00:00 usr=0:00:04 total=0:00:04
[GR: Done] Stage (MB): Used  188  Alloctr  190  Proc    3 
[GR: Done] Total (MB): Used  193  Alloctr  195  Proc 1738 
Updating the database ...
Updating congestion ...
Final total stats:
[End of Global Routing] Elapsed real time: 0:00:04 
[End of Global Routing] Elapsed cpu  time: sys=0:00:00 usr=0:00:04 total=0:00:05
[End of Global Routing] Stage (MB): Used   31  Alloctr   31  Proc    3 
[End of Global Routing] Total (MB): Used   36  Alloctr   37  Proc 1738 
RM-info: Running update_timing and route_track
Information: The stitching and editing of coupling caps is turned ON for design 'CORTEXM0DS:CORTEXM0DS/route_auto.design'. (TIM-125)
Begin building search trees for block CORTEXM0DS:CORTEXM0DS/route_auto.design
Done building search trees for block CORTEXM0DS:CORTEXM0DS/route_auto.design (time 0s)
Information: Design CORTEXM0DS has 9011 nets, 8740 global routed, 269 detail routed. (NEX-024)
NEX: gr/dr coup map average coverRate for layer#1: 0.321569
Information: build GR coup map successfully (NEX-012)
Information: The RC mode used is GR for design 'CORTEXM0DS'. (NEX-022)
Information: Delta delay estimation has been turned on. (TIM-214)
Information: Update timing completed net estimation for all the timing graph nets (TIM-111)
Information: Net estimation statistics: timing graph nets = 9009, routed nets = 9009, across physical hierarchy nets = 0, parasitics cached nets = 9009, delay annotated nets = 0, parasitics annotated nets = 0, multi-voltage nets = 0. (TIM-112)
Information: Freeing timing information from routing. (ZRT-574)
Generating Timing information  
Design  Scenario mode_norm.slow.RCmax (Mode mode_norm.slow.RCmax Corner mode_norm.slow.RCmax)
Warning: Currnet dominant scnenario mode_norm.slow.RCmax for timing driven route  is different from dominant scenario for the previous timing driven route which is mode_norm.worst_low.RCmax. (ZRT-647)
Estimated unitRes/unitCap :
Layer M1 : Res  46.4286 ohm/um Cap  0.148637 ff/um
Layer MINT1 : Res  46.4286 ohm/um Cap  0.154683 ff/um
Layer MINT2 : Res  46.4286 ohm/um Cap  0.154827 ff/um
Layer MINT3 : Res  46.4286 ohm/um Cap  0.154839 ff/um
Layer MINT4 : Res  46.4286 ohm/um Cap  0.154828 ff/um
Layer MINT5 : Res  46.4286 ohm/um Cap  0.154674 ff/um
Layer MSMG1 : Res  8.03571 ohm/um Cap  0.196653 ff/um
Layer MSMG2 : Res  8.03571 ohm/um Cap  0.184306 ff/um
Layer MSMG3 : Res  8.03571 ohm/um Cap  0.18422 ff/um
Layer MSMG4 : Res  8.03571 ohm/um Cap  0.184207 ff/um
Layer MSMG5 : Res  8.03571 ohm/um Cap  0.184091 ff/um
Layer MG1 : Res  0.892857 ohm/um Cap  0.194736 ff/um
Layer MG2 : Res  0.892857 ohm/um Cap  0.177243 ff/um
Generating Timing information  ... Done
Information: The net parasitics of block CORTEXM0DS are cleared. (TIM-123)

Start track assignment

Turn off antenna since no rule is specified
Cell Min-Routing-Layer = M1
Cell Max-Routing-Layer = MINT5
Skipping 1 internal pins that are not physical. Set route.common.verbose_level to > 0 and run routing command to get skipped pin names.
Info: number of net_type_blockage: 0 
Printing options for 'route.common.*'
common.debug_remove_extension_floating_shapes           :	 false               
common.post_detail_route_redundant_via_insertion        :	 medium              

Printing options for 'route.track.*'
track.crosstalk_driven                                  :	 true                
track.timing_driven                                     :	 true                

Loading timing information to the router from design
Timing information loaded to the router.
Information: Using 8 threads for routing. (ZRT-444)
Information: RC layer preference is turned off for this design. (ZRT-613)

[Track Assign: Read routes] Elapsed real time: 0:00:00 
[Track Assign: Read routes] Elapsed cpu  time: sys=0:00:00 usr=0:00:01 total=0:00:02
[Track Assign: Read routes] Stage (MB): Used  154  Alloctr  155  Proc    0 
[Track Assign: Read routes] Total (MB): Used  155  Alloctr  156  Proc 1776 

Start initial assignment

Assign Horizontal partitions, iteration 0
Routed partition 1/51      
Routed partition 2/51      
Routed partition 3/51      
Routed partition 4/51      
Routed partition 5/51      
Routed partition 6/51      
Routed partition 7/51      
Routed partition 8/51      
Routed partition 9/51      
Routed partition 10/51     
Routed partition 11/51     
Routed partition 12/51     
Routed partition 13/51     
Routed partition 14/51     
Routed partition 15/51     
Routed partition 16/51     
Routed partition 17/51     
Routed partition 18/51     
Routed partition 19/51     
Routed partition 20/51     
Routed partition 21/51     
Routed partition 22/51     
Routed partition 23/51     
Routed partition 24/51     
Routed partition 25/51     
Routed partition 26/51     
Routed partition 27/51     
Routed partition 28/51     
Routed partition 29/51     
Routed partition 30/51     
Routed partition 31/51     
Routed partition 32/51     
Routed partition 33/51     
Routed partition 34/51     
Routed partition 35/51     
Routed partition 36/51     
Routed partition 37/51     
Routed partition 38/51     
Routed partition 39/51     
Routed partition 40/51     
Routed partition 41/51     
Routed partition 42/51     
Routed partition 43/51     
Routed partition 44/51     
Routed partition 45/51     
Routed partition 46/51     
Routed partition 47/51     
Routed partition 48/51     
Routed partition 49/51     
Routed partition 50/51     
Routed partition 51/51     

Assign Vertical partitions, iteration 0
Routed partition 1/50      
Routed partition 2/50      
Routed partition 3/50      
Routed partition 4/50      
Routed partition 5/50      
Routed partition 6/50      
Routed partition 7/50      
Routed partition 8/50      
Routed partition 9/50      
Routed partition 10/50     
Routed partition 11/50     
Routed partition 12/50     
Routed partition 13/50     
Routed partition 14/50     
Routed partition 15/50     
Routed partition 16/50     
Routed partition 17/50     
Routed partition 18/50     
Routed partition 19/50     
Routed partition 20/50     
Routed partition 21/50     
Routed partition 22/50     
Routed partition 23/50     
Routed partition 24/50     
Routed partition 25/50     
Routed partition 26/50     
Routed partition 27/50     
Routed partition 28/50     
Routed partition 29/50     
Routed partition 30/50     
Routed partition 31/50     
Routed partition 32/50     
Routed partition 33/50     
Routed partition 34/50     
Routed partition 35/50     
Routed partition 36/50     
Routed partition 37/50     
Routed partition 38/50     
Routed partition 39/50     
Routed partition 40/50     
Routed partition 41/50     
Routed partition 42/50     
Routed partition 43/50     
Routed partition 44/50     
Routed partition 45/50     
Routed partition 46/50     
Routed partition 47/50     
Routed partition 48/50     
Routed partition 49/50     
Routed partition 50/50     

Number of wires with overlap after iteration 0 = 77024 of 104530


[Track Assign: Iteration 0] Elapsed real time: 0:00:01 
[Track Assign: Iteration 0] Elapsed cpu  time: sys=0:00:00 usr=0:00:05 total=0:00:06
[Track Assign: Iteration 0] Stage (MB): Used  155  Alloctr  158  Proc  247 
[Track Assign: Iteration 0] Total (MB): Used  156  Alloctr  159  Proc 2023 

Reroute to fix overlaps

Assign Horizontal partitions, iteration 1
Routed partition 1/51      
Routed partition 2/51      
Routed partition 3/51      
Routed partition 4/51      
Routed partition 5/51      
Routed partition 6/51      
Routed partition 7/51      
Routed partition 8/51      
Routed partition 9/51      
Routed partition 10/51     
Routed partition 11/51     
Routed partition 12/51     
Routed partition 13/51     
Routed partition 14/51     
Routed partition 15/51     
Routed partition 16/51     
Routed partition 17/51     
Routed partition 18/51     
Routed partition 19/51     
Routed partition 20/51     
Routed partition 21/51     
Routed partition 22/51     
Routed partition 23/51     
Routed partition 24/51     
Routed partition 25/51     
Routed partition 26/51     
Routed partition 27/51     
Routed partition 28/51     
Routed partition 29/51     
Routed partition 30/51     
Routed partition 31/51     
Routed partition 32/51     
Routed partition 33/51     
Routed partition 34/51     
Routed partition 35/51     
Routed partition 36/51     
Routed partition 37/51     
Routed partition 38/51     
Routed partition 39/51     
Routed partition 40/51     
Routed partition 41/51     
Routed partition 42/51     
Routed partition 43/51     
Routed partition 44/51     
Routed partition 45/51     
Routed partition 46/51     
Routed partition 47/51     
Routed partition 48/51     
Routed partition 49/51     
Routed partition 50/51     
Routed partition 51/51     

Assign Vertical partitions, iteration 1
Routed partition 1/50      
Routed partition 2/50      
Routed partition 3/50      
Routed partition 4/50      
Routed partition 5/50      
Routed partition 6/50      
Routed partition 7/50      
Routed partition 8/50      
Routed partition 9/50      
Routed partition 10/50     
Routed partition 11/50     
Routed partition 12/50     
Routed partition 13/50     
Routed partition 14/50     
Routed partition 15/50     
Routed partition 16/50     
Routed partition 17/50     
Routed partition 18/50     
Routed partition 19/50     
Routed partition 20/50     
Routed partition 21/50     
Routed partition 22/50     
Routed partition 23/50     
Routed partition 24/50     
Routed partition 25/50     
Routed partition 26/50     
Routed partition 27/50     
Routed partition 28/50     
Routed partition 29/50     
Routed partition 30/50     
Routed partition 31/50     
Routed partition 32/50     
Routed partition 33/50     
Routed partition 34/50     
Routed partition 35/50     
Routed partition 36/50     
Routed partition 37/50     
Routed partition 38/50     
Routed partition 39/50     
Routed partition 40/50     
Routed partition 41/50     
Routed partition 42/50     
Routed partition 43/50     
Routed partition 44/50     
Routed partition 45/50     
Routed partition 46/50     
Routed partition 47/50     
Routed partition 48/50     
Routed partition 49/50     
Routed partition 50/50     

[Track Assign: Iteration 1] Elapsed real time: 0:00:01 
[Track Assign: Iteration 1] Elapsed cpu  time: sys=0:00:00 usr=0:00:10 total=0:00:10
[Track Assign: Iteration 1] Stage (MB): Used  155  Alloctr  158  Proc  285 
[Track Assign: Iteration 1] Total (MB): Used  156  Alloctr  160  Proc 2061 

Number of wires with overlap after iteration 1 = 35935 of 59741


Wire length and via report:
---------------------------
Number of M1 wires: 2381 		  : 0
Number of MINT1 wires: 27926 		 V1_0: 29896
Number of MINT2 wires: 21018 		 VINT1_0: 30498
Number of MINT3 wires: 4754 		 VINT2_0: 7496
Number of MINT4 wires: 2591 		 VINT3_0: 3592
Number of MINT5 wires: 1071 		 VINT4_0: 1555
Number of MSMG1 wires: 0 		 VINT5_0: 0
Number of MSMG2 wires: 0 		 VSMG1_0: 0
Number of MSMG3 wires: 0 		 VSMG2_0: 0
Number of MSMG4 wires: 0 		 VSMG3_0: 0
Number of MSMG5 wires: 0 		 VSMG4_0: 0
Number of MG1 wires: 0 		 VSMG5_0: 0
Number of MG2 wires: 0 		 VG1_0: 0
Total number of wires: 59741 		 vias: 73037

Total M1 wire length: 231.4
Total MINT1 wire length: 16205.1
Total MINT2 wire length: 17188.8
Total MINT3 wire length: 10880.1
Total MINT4 wire length: 9299.9
Total MINT5 wire length: 3688.8
Total MSMG1 wire length: 0.0
Total MSMG2 wire length: 0.0
Total MSMG3 wire length: 0.0
Total MSMG4 wire length: 0.0
Total MSMG5 wire length: 0.0
Total MG1 wire length: 0.0
Total MG2 wire length: 0.0
Total wire length: 57494.2

Longest M1 wire length: 0.7
Longest MINT1 wire length: 20.7
Longest MINT2 wire length: 18.2
Longest MINT3 wire length: 45.7
Longest MINT4 wire length: 38.2
Longest MINT5 wire length: 33.9
Longest MSMG1 wire length: 0.0
Longest MSMG2 wire length: 0.0
Longest MSMG3 wire length: 0.0
Longest MSMG4 wire length: 0.0
Longest MSMG5 wire length: 0.0
Longest MG1 wire length: 0.0
Longest MG2 wire length: 0.0

Updating the database ...

[Track Assign: Done] Elapsed real time: 0:00:02 
[Track Assign: Done] Elapsed cpu  time: sys=0:00:00 usr=0:00:10 total=0:00:11
[Track Assign: Done] Stage (MB): Used    0  Alloctr    0  Proc  285 
[Track Assign: Done] Total (MB): Used    0  Alloctr    0  Proc 2061 
RM-info: Running update_timing and route_detail
Information: The stitching and editing of coupling caps is turned ON for design 'CORTEXM0DS:CORTEXM0DS/route_auto.design'. (TIM-125)
Begin building search trees for block CORTEXM0DS:CORTEXM0DS/route_auto.design
Done building search trees for block CORTEXM0DS:CORTEXM0DS/route_auto.design (time 0s)
Information: Design CORTEXM0DS has 9011 nets, 0 global routed, 9009 detail routed. (NEX-024)
Information: The RC mode used is DR for design 'CORTEXM0DS'. (NEX-022)
---extraction options---
Corner: mode_norm.slow.RCmax
 late_cap_scale                : 1
 late_res_scale                : 1
 late_ccap_scale               : 1
 late_rde_cap_scale            : 1
 late_rde_res_scale            : 1
 early_cap_scale               : 1
 early_res_scale               : 1
 early_ccap_scale              : 1
 early_rde_cap_scale           : 1
 early_rde_res_scale           : 1
Corner: mode_norm.slow.RCmax_bc
 late_cap_scale                : 1
 late_res_scale                : 1
 late_ccap_scale               : 1
 late_rde_cap_scale            : 1
 late_rde_res_scale            : 1
 early_cap_scale               : 1
 early_res_scale               : 1
 early_ccap_scale              : 1
 early_rde_cap_scale           : 1
 early_rde_res_scale           : 1
Corner: mode_norm.worst_low.RCmax
 late_cap_scale                : 1
 late_res_scale                : 1
 late_ccap_scale               : 1
 late_rde_cap_scale            : 1
 late_rde_res_scale            : 1
 early_cap_scale               : 1
 early_res_scale               : 1
 early_ccap_scale              : 1
 early_rde_cap_scale           : 1
 early_rde_res_scale           : 1
Corner: mode_norm.worst_low.RCmax_bc
 late_cap_scale                : 1
 late_res_scale                : 1
 late_ccap_scale               : 1
 late_rde_cap_scale            : 1
 late_rde_res_scale            : 1
 early_cap_scale               : 1
 early_res_scale               : 1
 early_ccap_scale              : 1
 early_rde_cap_scale           : 1
 early_rde_res_scale           : 1
Corner: mode_norm.fast.RCmin
 late_cap_scale                : 1
 late_res_scale                : 1
 late_ccap_scale               : 1
 late_rde_cap_scale            : 1
 late_rde_res_scale            : 1
 early_cap_scale               : 1
 early_res_scale               : 1
 early_ccap_scale              : 1
 early_rde_cap_scale           : 1
 early_rde_res_scale           : 1
Corner: mode_norm.fast.RCmin_bc
 late_cap_scale                : 1
 late_res_scale                : 1
 late_ccap_scale               : 1
 late_rde_cap_scale            : 1
 late_rde_res_scale            : 1
 early_cap_scale               : 1
 early_res_scale               : 1
 early_ccap_scale              : 1
 early_rde_cap_scale           : 1
 early_rde_res_scale           : 1
Global options:
 late_ccap_threshold       : 31fF
 late_ccap_ratio           : 0.03
 reference_direction       : use_from_tluplus
 real_metalfill_extraction : none
 virtual_shield_extraction : true
---app options---
 host.max_cores                   : 8
 extract.connect_open           : true
 extract.incremental_extraction : true
 extract.enable_coupling_cap    : true
Extracting design: CORTEXM0DS 
Information: coupling capacitance is created explicitly. (NEX-029)
Information: 9009 nets are successfully extracted. (NEX-028)
Warning: Advanced receiver model has not been enabled for detailed routed design. (TIM-204)
Information: Update timing completed net estimation for all the timing graph nets (TIM-111)
Information: Net estimation statistics: timing graph nets = 9009, routed nets = 9009, across physical hierarchy nets = 0, parasitics cached nets = 9009, delay annotated nets = 0, parasitics annotated nets = 0, multi-voltage nets = 0. (TIM-112)
Information: Freeing timing information from routing. (ZRT-574)
Generating Timing information  
Design  Scenario mode_norm.slow.RCmax (Mode mode_norm.slow.RCmax Corner mode_norm.slow.RCmax)
Estimated unitRes/unitCap :
Layer M1 : Res  46.4286 ohm/um Cap  0.148637 ff/um
Layer MINT1 : Res  46.4286 ohm/um Cap  0.154683 ff/um
Layer MINT2 : Res  46.4286 ohm/um Cap  0.154827 ff/um
Layer MINT3 : Res  46.4286 ohm/um Cap  0.154839 ff/um
Layer MINT4 : Res  46.4286 ohm/um Cap  0.154828 ff/um
Layer MINT5 : Res  46.4286 ohm/um Cap  0.154674 ff/um
Layer MSMG1 : Res  8.03571 ohm/um Cap  0.196653 ff/um
Layer MSMG2 : Res  8.03571 ohm/um Cap  0.184306 ff/um
Layer MSMG3 : Res  8.03571 ohm/um Cap  0.18422 ff/um
Layer MSMG4 : Res  8.03571 ohm/um Cap  0.184207 ff/um
Layer MSMG5 : Res  8.03571 ohm/um Cap  0.184091 ff/um
Layer MG1 : Res  0.892857 ohm/um Cap  0.194736 ff/um
Layer MG2 : Res  0.892857 ohm/um Cap  0.177243 ff/um
Generating Timing information  ... Done
Information: The net parasitics of block CORTEXM0DS are cleared. (TIM-123)
Turn off antenna since no rule is specified
Cell Min-Routing-Layer = M1
Cell Max-Routing-Layer = MINT5
Skipping 1 internal pins that are not physical. Set route.common.verbose_level to > 0 and run routing command to get skipped pin names.
Info: number of net_type_blockage: 0 
Loading timing information to the router from design
Timing information loaded to the router.
Printing options for 'route.common.*'
common.debug_remove_extension_floating_shapes           :	 false               
common.post_detail_route_redundant_via_insertion        :	 medium              

Printing options for 'route.detail.*'
detail.antenna                                          :	 true                
detail.eco_max_number_of_iterations                     :	 10                  
detail.force_end_on_preferred_grid                      :	 true                
detail.timing_driven                                    :	 true                

Printing options for 'route.auto_via_ladder.*'

Information: RC layer preference is turned off for this design. (ZRT-613)
[Dr init] Elapsed real time: 0:00:00 
[Dr init] Elapsed cpu  time: sys=0:00:00 usr=0:00:01 total=0:00:02
[Dr init] Stage (MB): Used  162  Alloctr  163  Proc    0 
[Dr init] Total (MB): Used  163  Alloctr  165  Proc 2181 
Total number of nets = 9011, of which 0 are not extracted
Total number of open nets = 0, of which 0 are frozen
Information: Using 8 threads for routing. (ZRT-444)
Start DR iteration 0: uniform partition
Routed	1/100 Partitions, Violations =	0
Routed	8/100 Partitions, Violations =	1
Routed	9/100 Partitions, Violations =	0
Routed	10/100 Partitions, Violations =	8
Routed	12/100 Partitions, Violations =	9
Routed	13/100 Partitions, Violations =	14
Routed	14/100 Partitions, Violations =	18
Routed	15/100 Partitions, Violations =	15
Routed	16/100 Partitions, Violations =	17
Routed	17/100 Partitions, Violations =	13
Routed	18/100 Partitions, Violations =	12
Routed	19/100 Partitions, Violations =	17
Routed	20/100 Partitions, Violations =	9
Routed	21/100 Partitions, Violations =	9
Routed	22/100 Partitions, Violations =	9
Routed	23/100 Partitions, Violations =	29
Routed	24/100 Partitions, Violations =	42
Routed	25/100 Partitions, Violations =	41
Routed	26/100 Partitions, Violations =	30
Routed	27/100 Partitions, Violations =	30
Routed	28/100 Partitions, Violations =	41
Routed	29/100 Partitions, Violations =	41
Routed	30/100 Partitions, Violations =	45
Routed	31/100 Partitions, Violations =	45
Routed	32/100 Partitions, Violations =	34
Routed	33/100 Partitions, Violations =	41
Routed	34/100 Partitions, Violations =	39
Routed	35/100 Partitions, Violations =	40
Routed	36/100 Partitions, Violations =	55
Routed	37/100 Partitions, Violations =	65
Routed	38/100 Partitions, Violations =	59
Routed	39/100 Partitions, Violations =	62
Routed	40/100 Partitions, Violations =	61
Routed	41/100 Partitions, Violations =	61
Routed	42/100 Partitions, Violations =	55
Routed	43/100 Partitions, Violations =	65
Routed	44/100 Partitions, Violations =	64
Routed	45/100 Partitions, Violations =	83
Routed	46/100 Partitions, Violations =	85
Routed	47/100 Partitions, Violations =	93
Routed	48/100 Partitions, Violations =	93
Routed	49/100 Partitions, Violations =	80
Routed	50/100 Partitions, Violations =	86
Routed	51/100 Partitions, Violations =	83
Routed	52/100 Partitions, Violations =	83
Routed	53/100 Partitions, Violations =	88
Routed	54/100 Partitions, Violations =	99
Routed	55/100 Partitions, Violations =	102
Routed	56/100 Partitions, Violations =	103
Routed	57/100 Partitions, Violations =	99
Routed	58/100 Partitions, Violations =	99
Routed	59/100 Partitions, Violations =	94
Routed	60/100 Partitions, Violations =	86
Routed	61/100 Partitions, Violations =	87
Routed	62/100 Partitions, Violations =	79
Routed	63/100 Partitions, Violations =	84
Routed	64/100 Partitions, Violations =	64
Routed	65/100 Partitions, Violations =	66
Routed	66/100 Partitions, Violations =	76
Routed	67/100 Partitions, Violations =	81
Routed	68/100 Partitions, Violations =	90
Routed	69/100 Partitions, Violations =	87
Routed	70/100 Partitions, Violations =	67
Routed	71/100 Partitions, Violations =	62
Routed	72/100 Partitions, Violations =	77
Routed	73/100 Partitions, Violations =	72
Routed	74/100 Partitions, Violations =	73
Routed	75/100 Partitions, Violations =	91
Routed	76/100 Partitions, Violations =	78
Routed	77/100 Partitions, Violations =	78
Routed	78/100 Partitions, Violations =	78
Routed	79/100 Partitions, Violations =	93
Routed	80/100 Partitions, Violations =	94
Routed	81/100 Partitions, Violations =	94
Routed	82/100 Partitions, Violations =	92
Routed	83/100 Partitions, Violations =	102
Routed	84/100 Partitions, Violations =	99
Routed	85/100 Partitions, Violations =	105
Routed	86/100 Partitions, Violations =	113
Routed	87/100 Partitions, Violations =	84
Routed	88/100 Partitions, Violations =	85
Routed	89/100 Partitions, Violations =	74
Routed	90/100 Partitions, Violations =	65
Routed	91/100 Partitions, Violations =	54
Routed	92/100 Partitions, Violations =	60
Routed	93/100 Partitions, Violations =	38
Routed	94/100 Partitions, Violations =	29
Routed	95/100 Partitions, Violations =	29
Routed	96/100 Partitions, Violations =	18
Routed	97/100 Partitions, Violations =	30
Routed	98/100 Partitions, Violations =	28
Routed	99/100 Partitions, Violations =	17
Routed	100/100 Partitions, Violations =	0

DRC-SUMMARY:
	@@@@@@@ TOTAL VIOLATIONS =	0

[Iter 0] Elapsed real time: 0:00:03 
[Iter 0] Elapsed cpu  time: sys=0:00:00 usr=0:00:12 total=0:00:13
[Iter 0] Stage (MB): Used  180  Alloctr  181  Proc  172 
[Iter 0] Total (MB): Used  181  Alloctr  183  Proc 2353 

End DR iteration 0 with 100 parts

Finish DR since reached 0 DRC

[DR] Elapsed real time: 0:00:03 
[DR] Elapsed cpu  time: sys=0:00:00 usr=0:00:12 total=0:00:13
[DR] Stage (MB): Used  153  Alloctr  154  Proc  172 
[DR] Total (MB): Used  154  Alloctr  156  Proc 2353 

DR finished with 0 violations


DRC-SUMMARY:
	@@@@@@@ TOTAL VIOLATIONS =	0


Total Wire Length =                    62270 micron
Total Number of Contacts =             75058
Total Number of Wires =                59507
Total Number of PtConns =              1
Total Number of Routed Wires =       59507
Total Routed Wire Length =           62270 micron
Total Number of Routed Contacts =       75058
	Layer           M1 :        253 micron
	Layer        MINT1 :      16267 micron
	Layer        MINT2 :      19362 micron
	Layer        MINT3 :      13466 micron
	Layer        MINT4 :       9257 micron
	Layer        MINT5 :       3665 micron
	Layer        MSMG1 :          0 micron
	Layer        MSMG2 :          0 micron
	Layer        MSMG3 :          0 micron
	Layer        MSMG4 :          0 micron
	Layer        MSMG5 :          0 micron
	Layer          MG1 :          0 micron
	Layer          MG2 :          0 micron
	Via        VINT4_0 :       1474
	Via        VINT3_0 :       3449
	Via        VINT2_0 :       8637
	Via        VINT1_0 :      30925
	Via   VINT1_0(rot) :          1
	Via           V1_0 :      30475
	Via      V1_0(rot) :         97

 
Redundant via conversion report:
--------------------------------

  Total optimized via conversion rate =  0.00% (0 / 75058 vias)
 
    Layer V1         =  0.00% (0      / 30572   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 100.00% (30572   vias)
    Layer VINT1      =  0.00% (0      / 30926   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 100.00% (30926   vias)
    Layer VINT2      =  0.00% (0      / 8637    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 100.00% (8637    vias)
    Layer VINT3      =  0.00% (0      / 3449    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 100.00% (3449    vias)
    Layer VINT4      =  0.00% (0      / 1474    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 100.00% (1474    vias)
 
  Total double via conversion rate    =  0.00% (0 / 75058 vias)
 
    Layer V1         =  0.00% (0      / 30572   vias)
    Layer VINT1      =  0.00% (0      / 30926   vias)
    Layer VINT2      =  0.00% (0      / 8637    vias)
    Layer VINT3      =  0.00% (0      / 3449    vias)
    Layer VINT4      =  0.00% (0      / 1474    vias)
 
  The optimized via conversion rate based on total routed via count =  0.00% (0 / 75058 vias)
 
    Layer V1         =  0.00% (0      / 30572   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 100.00% (30572   vias)
    Layer VINT1      =  0.00% (0      / 30926   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 100.00% (30926   vias)
    Layer VINT2      =  0.00% (0      / 8637    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 100.00% (8637    vias)
    Layer VINT3      =  0.00% (0      / 3449    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 100.00% (3449    vias)
    Layer VINT4      =  0.00% (0      / 1474    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 100.00% (1474    vias)
 

Printing options for 'route.common.*'
common.debug_remove_extension_floating_shapes           :	 false               
common.post_detail_route_redundant_via_insertion        :	 medium              

Printing options for 'route.detail.*'
detail.antenna                                          :	 true                
detail.eco_max_number_of_iterations                     :	 10                  
detail.force_end_on_preferred_grid                      :	 true                
detail.timing_driven                                    :	 true                

Printing options for 'route.auto_via_ladder.*'

Information: RC layer preference is turned off for this design. (ZRT-613)
[Dr init] Elapsed real time: 0:00:00 
[Dr init] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[Dr init] Stage (MB): Used    9  Alloctr    9  Proc    0 
[Dr init] Total (MB): Used  164  Alloctr  166  Proc 2353 

Redundant via optimization will attempt to replace the following vias: 

        V1_0    ->   V1_0_1x2      V1_0_2x1      V1_0_1x2(r)   V1_0_2x1(r)

        V1_0(r) ->   V1_0_1x2      V1_0_2x1      V1_0_1x2(r)   V1_0_2x1(r)

     VINT1_0    -> VINT1_0_2x1    VINT1_0_1x2    VINT1_0_2x1(r) VINT1_0_1x2(r)

     VINT1_0(r) -> VINT1_0_2x1    VINT1_0_1x2    VINT1_0_2x1(r) VINT1_0_1x2(r)

     VINT2_0    -> VINT2_0_1x2    VINT2_0_2x1    VINT2_0_1x2(r) VINT2_0_2x1(r)

     VINT2_0(r) -> VINT2_0_1x2    VINT2_0_2x1    VINT2_0_1x2(r) VINT2_0_2x1(r)

     VINT3_0    -> VINT3_0_2x1    VINT3_0_1x2    VINT3_0_2x1(r) VINT3_0_1x2(r)

     VINT3_0(r) -> VINT3_0_2x1    VINT3_0_1x2    VINT3_0_2x1(r) VINT3_0_1x2(r)

     VINT4_0    -> VINT4_0_1x2    VINT4_0_2x1    VINT4_0_1x2(r) VINT4_0_2x1(r)

     VINT4_0(r) -> VINT4_0_1x2    VINT4_0_2x1    VINT4_0_1x2(r) VINT4_0_2x1(r)

     VINT5_0    -> VINT5_0_2x1    VINT5_0_1x2    VINT5_0_2x1(r) VINT5_0_1x2(r)

     VINT5_0(r) -> VINT5_0_2x1    VINT5_0_1x2    VINT5_0_2x1(r) VINT5_0_1x2(r)

     VSMG1_0    -> VSMG1_0_1x2    VSMG1_0_1x2(r) VSMG1_0_2x1    VSMG1_0_2x1(r)

     VSMG1_0(r) -> VSMG1_0_1x2    VSMG1_0_1x2(r) VSMG1_0_2x1    VSMG1_0_2x1(r)

     VSMG2_0    -> VSMG2_0_2x1    VSMG2_0_2x1(r) VSMG2_0_1x2    VSMG2_0_1x2(r)

     VSMG2_0(r) -> VSMG2_0_2x1    VSMG2_0_2x1(r) VSMG2_0_1x2    VSMG2_0_1x2(r)

     VSMG3_0    -> VSMG3_0_1x2    VSMG3_0_1x2(r) VSMG3_0_2x1    VSMG3_0_2x1(r)

     VSMG3_0(r) -> VSMG3_0_1x2    VSMG3_0_1x2(r) VSMG3_0_2x1    VSMG3_0_2x1(r)

     VSMG4_0    -> VSMG4_0_2x1    VSMG4_0_2x1(r) VSMG4_0_1x2    VSMG4_0_1x2(r)

     VSMG4_0(r) -> VSMG4_0_2x1    VSMG4_0_2x1(r) VSMG4_0_1x2    VSMG4_0_1x2(r)

     VSMG5_0    -> VSMG5_0_1x2    VSMG5_0_1x2(r) VSMG5_0_2x1    VSMG5_0_2x1(r)

     VSMG5_0(r) -> VSMG5_0_1x2    VSMG5_0_1x2(r) VSMG5_0_2x1    VSMG5_0_2x1(r)

       VG1_0    ->  VG1_0_2x1     VG1_0_2x1(r)  VG1_0_1x2     VG1_0_1x2(r)

       VG1_0(r) ->  VG1_0_2x1     VG1_0_2x1(r)  VG1_0_1x2     VG1_0_1x2(r)



	There were 0 out of 30982 pins with no spots.

[Technology Processing] Elapsed real time: 0:00:00 
[Technology Processing] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[Technology Processing] Stage (MB): Used   10  Alloctr   10  Proc    0 
[Technology Processing] Total (MB): Used  164  Alloctr  166  Proc 2353 

Begin Redundant via insertion ...

Routed	1/9 Partitions, Violations =	0
Routed	2/9 Partitions, Violations =	0
Routed	3/9 Partitions, Violations =	0
Routed	4/9 Partitions, Violations =	0
Routed	5/9 Partitions, Violations =	0
Routed	6/9 Partitions, Violations =	0
Routed	7/9 Partitions, Violations =	0
Routed	8/9 Partitions, Violations =	0
Routed	9/9 Partitions, Violations =	3

RedundantVia finished with 3 violations


DRC-SUMMARY:
	@@@@@@@ TOTAL VIOLATIONS =	3
	Same net spacing : 3


Total Wire Length =                    61730 micron
Total Number of Contacts =             74981
Total Number of Wires =                55170
Total Number of PtConns =              13
Total Number of Routed Wires =       55170
Total Routed Wire Length =           61729 micron
Total Number of Routed Contacts =       74981
	Layer               M1 :        217 micron
	Layer            MINT1 :      15932 micron
	Layer            MINT2 :      19230 micron
	Layer            MINT3 :      13440 micron
	Layer            MINT4 :       9248 micron
	Layer            MINT5 :       3663 micron
	Layer            MSMG1 :          0 micron
	Layer            MSMG2 :          0 micron
	Layer            MSMG3 :          0 micron
	Layer            MSMG4 :          0 micron
	Layer            MSMG5 :          0 micron
	Layer              MG1 :          0 micron
	Layer              MG2 :          0 micron
	Via            VINT4_0 :          3
	Via        VINT4_0_1x2 :       1350
	Via   VINT4_0(rot)_2x1 :          9
	Via   VINT4_0(rot)_1x2 :         21
	Via        VINT4_0_2x1 :         91
	Via            VINT3_0 :         33
	Via        VINT3_0_1x2 :        501
	Via   VINT3_0(rot)_2x1 :          4
	Via   VINT3_0(rot)_1x2 :          3
	Via        VINT3_0_2x1 :       2906
	Via            VINT2_0 :        234
	Via        VINT2_0_1x2 :       6919
	Via   VINT2_0(rot)_2x1 :         10
	Via   VINT2_0(rot)_1x2 :         10
	Via        VINT2_0_2x1 :       1455
	Via            VINT1_0 :       2421
	Via        VINT1_0_1x2 :       8741
	Via   VINT1_0(rot)_2x1 :         88
	Via   VINT1_0(rot)_1x2 :        164
	Via        VINT1_0_2x1 :      19461
	Via               V1_0 :       5494
	Via           V1_0_1x2 :      15992
	Via      V1_0(rot)_2x1 :        192
	Via      V1_0(rot)_1x2 :        119
	Via           V1_0_2x1 :       8760

 
Redundant via conversion report:
--------------------------------

  Total optimized via conversion rate = 89.08% (66796 / 74981 vias)
 
    Layer V1         = 82.02% (25063  / 30557   vias)
        Weight 1     = 82.02% (25063   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 17.98% (5494    vias)
    Layer VINT1      = 92.16% (28454  / 30875   vias)
        Weight 1     = 92.16% (28454   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  7.84% (2421    vias)
    Layer VINT2      = 97.29% (8394   / 8628    vias)
        Weight 1     = 97.29% (8394    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  2.71% (234     vias)
    Layer VINT3      = 99.04% (3414   / 3447    vias)
        Weight 1     = 99.04% (3414    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  0.96% (33      vias)
    Layer VINT4      = 99.80% (1471   / 1474    vias)
        Weight 1     = 99.80% (1471    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  0.20% (3       vias)
 
  Total double via conversion rate    = 89.08% (66796 / 74981 vias)
 
    Layer V1         = 82.02% (25063  / 30557   vias)
    Layer VINT1      = 92.16% (28454  / 30875   vias)
    Layer VINT2      = 97.29% (8394   / 8628    vias)
    Layer VINT3      = 99.04% (3414   / 3447    vias)
    Layer VINT4      = 99.80% (1471   / 1474    vias)
 
  The optimized via conversion rate based on total routed via count = 89.08% (66796 / 74981 vias)
 
    Layer V1         = 82.02% (25063  / 30557   vias)
        Weight 1     = 82.02% (25063   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 17.98% (5494    vias)
    Layer VINT1      = 92.16% (28454  / 30875   vias)
        Weight 1     = 92.16% (28454   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  7.84% (2421    vias)
    Layer VINT2      = 97.29% (8394   / 8628    vias)
        Weight 1     = 97.29% (8394    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  2.71% (234     vias)
    Layer VINT3      = 99.04% (3414   / 3447    vias)
        Weight 1     = 99.04% (3414    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  0.96% (33      vias)
    Layer VINT4      = 99.80% (1471   / 1474    vias)
        Weight 1     = 99.80% (1471    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  0.20% (3       vias)
 

[RedundantVia] Elapsed real time: 0:00:08 
[RedundantVia] Elapsed cpu  time: sys=0:00:00 usr=0:00:14 total=0:00:15
[RedundantVia] Stage (MB): Used   30  Alloctr   33  Proc    0 
[RedundantVia] Total (MB): Used  185  Alloctr  190  Proc 2353 

Begin DRC fixing ...

[Dr init] Elapsed real time: 0:00:12 
[Dr init] Elapsed cpu  time: sys=0:00:01 usr=0:00:27 total=0:00:28
[Dr init] Stage (MB): Used  184  Alloctr  188  Proc  172 
[Dr init] Total (MB): Used  185  Alloctr  190  Proc 2353 
Total number of nets = 9011, of which 0 are not extracted
Total number of open nets = 0, of which 0 are frozen
Information: Using 8 threads for routing. (ZRT-444)
Start DR iteration 1: non-uniform partition
Routed	1/2 Partitions, Violations =	0
Routed	2/2 Partitions, Violations =	0

DRC-SUMMARY:
	@@@@@@@ TOTAL VIOLATIONS =	0

[Iter 1] Elapsed real time: 0:00:12 
[Iter 1] Elapsed cpu  time: sys=0:00:01 usr=0:00:27 total=0:00:29
[Iter 1] Stage (MB): Used  201  Alloctr  206  Proc  172 
[Iter 1] Total (MB): Used  202  Alloctr  207  Proc 2353 

End DR iteration 1 with 2 parts

Finish DR since reached 0 DRC

[DR] Elapsed real time: 0:00:12 
[DR] Elapsed cpu  time: sys=0:00:01 usr=0:00:27 total=0:00:29
[DR] Stage (MB): Used  174  Alloctr  179  Proc  172 
[DR] Total (MB): Used  175  Alloctr  180  Proc 2353 
[DR: Done] Elapsed real time: 0:00:12 
[DR: Done] Elapsed cpu  time: sys=0:00:01 usr=0:00:27 total=0:00:29
[DR: Done] Stage (MB): Used  157  Alloctr  161  Proc  172 
[DR: Done] Total (MB): Used  158  Alloctr  163  Proc 2353 

DR finished with 0 open nets, of which 0 are frozen

DR finished with 0 violations

DRC-SUMMARY:
	@@@@@@@ TOTAL VIOLATIONS =	0



Total Wire Length =                    61729 micron
Total Number of Contacts =             74980
Total Number of Wires =                55170
Total Number of PtConns =              13
Total Number of Routed Wires =       55170
Total Routed Wire Length =           61728 micron
Total Number of Routed Contacts =       74980
	Layer               M1 :        217 micron
	Layer            MINT1 :      15932 micron
	Layer            MINT2 :      19230 micron
	Layer            MINT3 :      13440 micron
	Layer            MINT4 :       9248 micron
	Layer            MINT5 :       3663 micron
	Layer            MSMG1 :          0 micron
	Layer            MSMG2 :          0 micron
	Layer            MSMG3 :          0 micron
	Layer            MSMG4 :          0 micron
	Layer            MSMG5 :          0 micron
	Layer              MG1 :          0 micron
	Layer              MG2 :          0 micron
	Via            VINT4_0 :          3
	Via        VINT4_0_1x2 :       1350
	Via   VINT4_0(rot)_2x1 :          9
	Via   VINT4_0(rot)_1x2 :         21
	Via        VINT4_0_2x1 :         91
	Via            VINT3_0 :         33
	Via        VINT3_0_1x2 :        501
	Via   VINT3_0(rot)_2x1 :          4
	Via   VINT3_0(rot)_1x2 :          3
	Via        VINT3_0_2x1 :       2906
	Via            VINT2_0 :        234
	Via        VINT2_0_1x2 :       6919
	Via   VINT2_0(rot)_2x1 :         10
	Via   VINT2_0(rot)_1x2 :         10
	Via        VINT2_0_2x1 :       1455
	Via            VINT1_0 :       2422
	Via        VINT1_0_1x2 :       8741
	Via   VINT1_0(rot)_2x1 :         88
	Via   VINT1_0(rot)_1x2 :        164
	Via        VINT1_0_2x1 :      19459
	Via               V1_0 :       5495
	Via           V1_0_1x2 :      15991
	Via      V1_0(rot)_2x1 :        192
	Via      V1_0(rot)_1x2 :        119
	Via           V1_0_2x1 :       8760

 
Redundant via conversion report:
--------------------------------

  Total optimized via conversion rate = 89.08% (66793 / 74980 vias)
 
    Layer V1         = 82.02% (25062  / 30557   vias)
        Weight 1     = 82.02% (25062   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 17.98% (5495    vias)
    Layer VINT1      = 92.16% (28452  / 30874   vias)
        Weight 1     = 92.16% (28452   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  7.84% (2422    vias)
    Layer VINT2      = 97.29% (8394   / 8628    vias)
        Weight 1     = 97.29% (8394    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  2.71% (234     vias)
    Layer VINT3      = 99.04% (3414   / 3447    vias)
        Weight 1     = 99.04% (3414    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  0.96% (33      vias)
    Layer VINT4      = 99.80% (1471   / 1474    vias)
        Weight 1     = 99.80% (1471    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  0.20% (3       vias)
 
  Total double via conversion rate    = 89.08% (66793 / 74980 vias)
 
    Layer V1         = 82.02% (25062  / 30557   vias)
    Layer VINT1      = 92.16% (28452  / 30874   vias)
    Layer VINT2      = 97.29% (8394   / 8628    vias)
    Layer VINT3      = 99.04% (3414   / 3447    vias)
    Layer VINT4      = 99.80% (1471   / 1474    vias)
 
  The optimized via conversion rate based on total routed via count = 89.08% (66793 / 74980 vias)
 
    Layer V1         = 82.02% (25062  / 30557   vias)
        Weight 1     = 82.02% (25062   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 17.98% (5495    vias)
    Layer VINT1      = 92.16% (28452  / 30874   vias)
        Weight 1     = 92.16% (28452   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  7.84% (2422    vias)
    Layer VINT2      = 97.29% (8394   / 8628    vias)
        Weight 1     = 97.29% (8394    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  2.71% (234     vias)
    Layer VINT3      = 99.04% (3414   / 3447    vias)
        Weight 1     = 99.04% (3414    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  0.96% (33      vias)
    Layer VINT4      = 99.80% (1471   / 1474    vias)
        Weight 1     = 99.80% (1471    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  0.20% (3       vias)
 

Total number of nets = 9011
0 open nets, of which 0 are frozen
Total number of excluded ports = 0 ports of 0 unplaced cells connected to 0 nets
                                 0 ports without pins of 0 cells connected to 0 nets
                                 0 ports of 0 cover cells connected to 0 non-pg nets
Total number of DRCs = 0
Total number of antenna violations = antenna checking not active
Information: Routes in non-preferred voltage areas = 0 (ZRT-559)

Topology ECO not run, no qualifying violations or in frozen nets.
Updating the database ...
##########################################################################################
## Wire spreading and widening 
##########################################################################################
## Commands below are more for designs with established nodes
## It's recommended to clean up routing DRCs first as these commands may degrade routing DRC if your design is congested
#	spread_wires
#	widen_wires
##########################################################################################
## Redundant via insertion
##########################################################################################
## For designs with advanced nodes where DRC convergence could be a concern, 
## redundant via insertion is recommended to be done after route_auto/route_opt
## Please refer to settings.route_auto.tcl for relevant settings
if {$REDUNDANT_VIA_INSERTION} {
	add_redundant_vias
}
## Create shields after signal routing; recommended if DRC convergence is a concern
if {$ROUTE_AUTO_CREATE_SHIELDS == "after_route_auto"} {
	create_shields ;# without specifying -nets option, all nets with shielding rules will be shielded 
	set_extraction_options -virtual_shield_extraction false
}
##########################################################################################
## Post-route_auto customizations
##########################################################################################
if {[file exists [which $TCL_USER_ROUTE_AUTO_POST_SCRIPT]]} {
	puts "RM-info: Sourcing [which $TCL_USER_ROUTE_AUTO_POST_SCRIPT]"
	source -echo $TCL_USER_ROUTE_AUTO_POST_SCRIPT
} elseif {$TCL_USER_ROUTE_AUTO_POST_SCRIPT != ""} {
	puts "RM-error: TCL_USER_ROUTE_AUTO_POST_SCRIPT($TCL_USER_ROUTE_AUTO_POST_SCRIPT) is invalid. Please correct it."
}
## Example to resolve short violated nets
## Note that remove and reroute nets could potentially degrade timing QoR.
#	set data [open_drc_error_data -name zroute.err]
#	open_drc_error_data -name zroute.err
#	if { [sizeof_collection [get_drc_errors -quiet -error_data zroute.err -filter "type_name==Short"] ] > 0} {
#		set remove_net ""
#		foreach_in_collection net [get_attribute [get_drc_errors -error_data zroute.err -filter "type_name==Short"] objects] {
#			set net_type [get_attribute $net net_type]
#			if {$net_type=="signal"} {append_to_collection remove_net $net}
#		}
#		remove_routes -detail_route -nets $remove_net
#		route_eco
#	}
## If there are remaining routing DRCs, you can use the following :
#	route_detail -incremental true -initial_drc_from_input true
##########################################################################################
## connect_pg_net
##########################################################################################
if {$TCL_USER_CONNECT_PG_NET_SCRIPT != ""} {
	if {[file exists [which $TCL_USER_CONNECT_PG_NET_SCRIPT]]} {
		puts "RM-info: Sourcing [which $TCL_USER_CONNECT_PG_NET_SCRIPT]"
  		source $TCL_USER_CONNECT_PG_NET_SCRIPT
	} else {
		puts "RM-error: TCL_USER_CONNECT_PG_NET_SCRIPT($TCL_USER_CONNECT_PG_NET_SCRIPT) is invalid. Please correct it."
	}
} else {
	connect_pg_net
}
****************************************
Report : Power/Ground Connection Summary
Design : CORTEXM0DS
Version: P-2019.03-SP1
Date   : Thu Sep 26 23:32:14 2019
****************************************
P/G net name                  P/G pin count(previous/current)
--------------------------------------------------------------------------------
Power net VDD                 8943/8943
Unconnected nwell pins        8943
Ground net VSS                8943/8943
Unconnected pwell pins        8943
--------------------------------------------------------------------------------
Information: connections of 0 power/ground pin(s) are created or changed.
## Run check_routes to save updated routing DRC to the block
redirect -tee -file ${REPORTS_DIR}/${REPORT_PREFIX}.check_routes {check_routes}
Turn off antenna since no rule is specified
Cell Min-Routing-Layer = M1
Cell Max-Routing-Layer = MINT5
Skipping 1 internal pins that are not physical. Set route.common.verbose_level to > 0 and run routing command to get skipped pin names.
Info: number of net_type_blockage: 0 


Start checking for open nets ... 

Total number of nets = 9011, of which 0 are not extracted
Total number of open nets = 0, of which 0 are frozen

Check 9011 nets, 0 have Errors

[CHECK OPEN NETS] Elapsed real time: 0:00:00 
[CHECK OPEN NETS] Elapsed cpu  time: sys=0:00:00 usr=0:00:00 total=0:00:00
[CHECK OPEN NETS] Stage (MB): Used    0  Alloctr    0  Proc    0 
[CHECK OPEN NETS] Total (MB): Used  154  Alloctr  155  Proc 2353 
Printing options for 'route.common.*'
common.debug_remove_extension_floating_shapes           :	 false               
common.post_detail_route_redundant_via_insertion        :	 medium              

Printing options for 'route.detail.*'
detail.antenna                                          :	 true                
detail.eco_max_number_of_iterations                     :	 10                  
detail.force_end_on_preferred_grid                      :	 true                
detail.timing_driven                                    :	 true                

Printing options for 'route.auto_via_ladder.*'


Begin full DRC check ...

Information: Using 8 threads for routing. (ZRT-444)
Checked	1/9 Partitions, Violations =	0
Checked	2/9 Partitions, Violations =	0
Checked	3/9 Partitions, Violations =	0
Checked	4/9 Partitions, Violations =	0
Checked	5/9 Partitions, Violations =	0
Checked	6/9 Partitions, Violations =	0
Checked	7/9 Partitions, Violations =	0
Checked	8/9 Partitions, Violations =	0
Checked	9/9 Partitions, Violations =	0
[DRC CHECK] Elapsed real time: 0:00:01 
[DRC CHECK] Elapsed cpu  time: sys=0:00:00 usr=0:00:02 total=0:00:02
[DRC CHECK] Stage (MB): Used    0  Alloctr    0  Proc    0 
[DRC CHECK] Total (MB): Used  182  Alloctr  184  Proc 2353 
Warning: No antenna rules defined, Skip antenna analysis. (ZRT-309)

DRC-SUMMARY:
	@@@@@@@ TOTAL VIOLATIONS =	0


Total Wire Length =                    61730 micron
Total Number of Contacts =             74980
Total Number of Wires =                55166
Total Number of PtConns =              1
Total Number of Routed Wires =       55166
Total Routed Wire Length =           61730 micron
Total Number of Routed Contacts =       74980
	Layer               M1 :        217 micron
	Layer            MINT1 :      15933 micron
	Layer            MINT2 :      19230 micron
	Layer            MINT3 :      13440 micron
	Layer            MINT4 :       9248 micron
	Layer            MINT5 :       3663 micron
	Layer            MSMG1 :          0 micron
	Layer            MSMG2 :          0 micron
	Layer            MSMG3 :          0 micron
	Layer            MSMG4 :          0 micron
	Layer            MSMG5 :          0 micron
	Layer              MG1 :          0 micron
	Layer              MG2 :          0 micron
	Via            VINT4_0 :          3
	Via        VINT4_0_1x2 :       1350
	Via   VINT4_0(rot)_2x1 :          9
	Via   VINT4_0(rot)_1x2 :         21
	Via        VINT4_0_2x1 :         91
	Via            VINT3_0 :         33
	Via        VINT3_0_2x1 :       2906
	Via   VINT3_0(rot)_1x2 :          3
	Via   VINT3_0(rot)_2x1 :          4
	Via        VINT3_0_1x2 :        501
	Via            VINT2_0 :        234
	Via        VINT2_0_1x2 :       6919
	Via        VINT2_0_2x1 :       1455
	Via   VINT2_0(rot)_2x1 :         10
	Via   VINT2_0(rot)_1x2 :         10
	Via            VINT1_0 :       2422
	Via        VINT1_0_1x2 :       8741
	Via   VINT1_0(rot)_2x1 :         88
	Via   VINT1_0(rot)_1x2 :        164
	Via        VINT1_0_2x1 :      19459
	Via               V1_0 :       5495
	Via           V1_0_1x2 :      15991
	Via      V1_0(rot)_2x1 :        192
	Via      V1_0(rot)_1x2 :        119
	Via           V1_0_2x1 :       8760

 
Redundant via conversion report:
--------------------------------

  Total optimized via conversion rate = 89.08% (66793 / 74980 vias)
 
    Layer V1         = 82.02% (25062  / 30557   vias)
        Weight 1     = 82.02% (25062   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 17.98% (5495    vias)
    Layer VINT1      = 92.16% (28452  / 30874   vias)
        Weight 1     = 92.16% (28452   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  7.84% (2422    vias)
    Layer VINT2      = 97.29% (8394   / 8628    vias)
        Weight 1     = 97.29% (8394    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  2.71% (234     vias)
    Layer VINT3      = 99.04% (3414   / 3447    vias)
        Weight 1     = 99.04% (3414    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  0.96% (33      vias)
    Layer VINT4      = 99.80% (1471   / 1474    vias)
        Weight 1     = 99.80% (1471    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  0.20% (3       vias)
 
  Total double via conversion rate    = 89.08% (66793 / 74980 vias)
 
    Layer V1         = 82.02% (25062  / 30557   vias)
    Layer VINT1      = 92.16% (28452  / 30874   vias)
    Layer VINT2      = 97.29% (8394   / 8628    vias)
    Layer VINT3      = 99.04% (3414   / 3447    vias)
    Layer VINT4      = 99.80% (1471   / 1474    vias)
 
  The optimized via conversion rate based on total routed via count = 89.08% (66793 / 74980 vias)
 
    Layer V1         = 82.02% (25062  / 30557   vias)
        Weight 1     = 82.02% (25062   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    = 17.98% (5495    vias)
    Layer VINT1      = 92.16% (28452  / 30874   vias)
        Weight 1     = 92.16% (28452   vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  7.84% (2422    vias)
    Layer VINT2      = 97.29% (8394   / 8628    vias)
        Weight 1     = 97.29% (8394    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  2.71% (234     vias)
    Layer VINT3      = 99.04% (3414   / 3447    vias)
        Weight 1     = 99.04% (3414    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  0.96% (33      vias)
    Layer VINT4      = 99.80% (1471   / 1474    vias)
        Weight 1     = 99.80% (1471    vias)
        Un-optimized =  0.00% (0       vias)
        Un-mapped    =  0.20% (3       vias)
 


Verify Summary:

Total number of nets = 9011, of which 0 are not extracted
Total number of open nets = 0, of which 0 are frozen
Total number of excluded ports = 0 ports of 0 unplaced cells connected to 0 nets
                                 0 ports without pins of 0 cells connected to 0 nets
                                 0 ports of 0 cover cells connected to 0 non-pg nets
Total number of DRCs = 0
Total number of antenna violations = no antenna rules defined
Total number of tie to rail violations = not checked
Total number of tie to rail directly violations = not checked


## Save block
save_block
Information: Saving block 'CORTEXM0DS:CORTEXM0DS/route_auto.design'
1
##########################################################################################
## Create abstract and frame
##########################################################################################
## Enabled for hierarchical designs; for bottom and intermediate levels of physical hierarchy
if {$DESIGN_STYLE == "hier"} {
	if {$USE_ABSTRACTS_FOR_POWER_ANALYSIS == "true"} {
		set_app_options -name abstract.annotate_power -value true
   	}
	if { $PHYSICAL_HIERARCHY_LEVEL == "bottom" } {
		create_abstract -read_only
	        create_frame -block_all true
       	 	derive_hier_antenna_property -design ${DESIGN_NAME}/${ROUTE_AUTO_BLOCK_NAME}

	} elseif { $PHYSICAL_HIERARCHY_LEVEL == "intermediate"} {
            if { $ABSTRACT_TYPE_FOR_MPH_BLOCKS == "nested"} {
                ## Create nested abstract for the intermediate level of physical hierarchy
                create_abstract -read_only
            } elseif { $ABSTRACT_TYPE_FOR_MPH_BLOCKS == "flattened"} {
                ## Create flattened abstract for the intermediate level of physical hierarchy
                create_abstract -read_only -preserve_block_instances false
            }
            create_frame -block_all true
            derive_hier_antenna_property -design ${DESIGN_NAME}/${ROUTE_AUTO_BLOCK_NAME}
	}
}
##########################################################################################
## Report and output
##########################################################################################
## Recommended timing settings for reporting on routed designs (AWP, CCS receiver, and SI timing window)
puts "RM-info: Setting time.delay_calc_waveform_analysis_mode to full_design"
RM-info: Setting time.delay_calc_waveform_analysis_mode to full_design
set_app_options -name time.delay_calc_waveform_analysis_mode -value full_design ;# tool default disabled; enables AWP
time.delay_calc_waveform_analysis_mode full_design
puts "RM-info: Setting time.enable_ccs_rcv_cap to true"
RM-info: Setting time.enable_ccs_rcv_cap to true
set_app_options -name time.enable_ccs_rcv_cap -value true ;# tool default false; enables CCS receiver model; required
time.enable_ccs_rcv_cap true
if {$REPORT_QOR} {source report_qor.tcl}
RM-info: Running script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/rm_icc2_pnr_scripts/report_qor.tcl

RM-info: Reporting clock tree information and QoR ...

 Info: Initializing timer in CLOCK_SYN_REPORT_MODE
Warning: Libraries do not have CCS noise model for accurate waveform analysis in advanced waveform propagation mode. (TIM-207)
Information: Corner mode_norm.fast.RCmin_bc: no PVT mismatches. (PVT-032)
Information: Corner mode_norm.worst_low.RCmax_bc: no PVT mismatches. (PVT-032)
Information: Corner mode_norm.slow.RCmax_bc: no PVT mismatches. (PVT-032)
Information: Corner mode_norm.worst_low.RCmax: no PVT mismatches. (PVT-032)
Information: Corner mode_norm.fast.RCmin: no PVT mismatches. (PVT-032)
Information: Corner mode_norm.slow.RCmax: no PVT mismatches. (PVT-032)
Information: Freeing timing information from routing. (ZRT-574)
Information: The stitching and editing of coupling caps is turned ON for design 'CORTEXM0DS:CORTEXM0DS/route_auto.design'. (TIM-125)
Begin building search trees for block CORTEXM0DS:CORTEXM0DS/route_auto.design
Done building search trees for block CORTEXM0DS:CORTEXM0DS/route_auto.design (time 0s)
Information: Design CORTEXM0DS has 9011 nets, 0 global routed, 8977 detail routed. (NEX-024)
Information: The RC mode used is DR for design 'CORTEXM0DS'. (NEX-022)
---extraction options---
Corner: mode_norm.slow.RCmax
 late_cap_scale                : 1
 late_res_scale                : 1
 late_ccap_scale               : 1
 late_rde_cap_scale            : 1
 late_rde_res_scale            : 1
 early_cap_scale               : 1
 early_res_scale               : 1
 early_ccap_scale              : 1
 early_rde_cap_scale           : 1
 early_rde_res_scale           : 1
Corner: mode_norm.slow.RCmax_bc
 late_cap_scale                : 1
 late_res_scale                : 1
 late_ccap_scale               : 1
 late_rde_cap_scale            : 1
 late_rde_res_scale            : 1
 early_cap_scale               : 1
 early_res_scale               : 1
 early_ccap_scale              : 1
 early_rde_cap_scale           : 1
 early_rde_res_scale           : 1
Corner: mode_norm.worst_low.RCmax
 late_cap_scale                : 1
 late_res_scale                : 1
 late_ccap_scale               : 1
 late_rde_cap_scale            : 1
 late_rde_res_scale            : 1
 early_cap_scale               : 1
 early_res_scale               : 1
 early_ccap_scale              : 1
 early_rde_cap_scale           : 1
 early_rde_res_scale           : 1
Corner: mode_norm.worst_low.RCmax_bc
 late_cap_scale                : 1
 late_res_scale                : 1
 late_ccap_scale               : 1
 late_rde_cap_scale            : 1
 late_rde_res_scale            : 1
 early_cap_scale               : 1
 early_res_scale               : 1
 early_ccap_scale              : 1
 early_rde_cap_scale           : 1
 early_rde_res_scale           : 1
Corner: mode_norm.fast.RCmin
 late_cap_scale                : 1
 late_res_scale                : 1
 late_ccap_scale               : 1
 late_rde_cap_scale            : 1
 late_rde_res_scale            : 1
 early_cap_scale               : 1
 early_res_scale               : 1
 early_ccap_scale              : 1
 early_rde_cap_scale           : 1
 early_rde_res_scale           : 1
Corner: mode_norm.fast.RCmin_bc
 late_cap_scale                : 1
 late_res_scale                : 1
 late_ccap_scale               : 1
 late_rde_cap_scale            : 1
 late_rde_res_scale            : 1
 early_cap_scale               : 1
 early_res_scale               : 1
 early_ccap_scale              : 1
 early_rde_cap_scale           : 1
 early_rde_res_scale           : 1
Global options:
 late_ccap_threshold       : 31fF
 late_ccap_ratio           : 0.03
 reference_direction       : use_from_tluplus
 real_metalfill_extraction : none
 virtual_shield_extraction : true
---app options---
 host.max_cores                   : 8
 extract.connect_open           : true
 extract.incremental_extraction : true
 extract.enable_coupling_cap    : true
Extracting design: CORTEXM0DS 
Information: coupling capacitance is created explicitly. (NEX-029)
Information: 9009 nets are successfully extracted. (NEX-028)
Information: Update timing completed net estimation for all the timing graph nets (TIM-111)
Information: Net estimation statistics: timing graph nets = 9009, routed nets = 9009, across physical hierarchy nets = 0, parasitics cached nets = 9009, delay annotated nets = 0, parasitics annotated nets = 0, multi-voltage nets = 0. (TIM-112)
Information: Update timing is using PrimeTime delay calculation. (TIM-201)
************************************************************
Timer Settings:
Delay Calculation Style:                   primetime
Signal Integrity Analysis:                 enabled
Timing Window Analysis:                    enabled
Advanced Waveform Propagation:             full_design
Variation Type:                            fixed_derate
Clock Reconvergence Pessimism Removal:     enabled
Advanced Receiver Model:                   enabled
************************************************************
Warning: The scenario mode_norm.fast.RCmin has max transition DRC fixing disabled using the set_scenario_status command.  High DRC count may be expected.
Warning: The scenario mode_norm.fast.RCmin has max capacitance DRC fixing disabled using the set_scenario_status command.  High DRC count may be expected.
****************************************
Report : clock qor
        -type summary
        -nosplit
Design : CORTEXM0DS
Version: P-2019.03-SP1
Date   : Thu Sep 26 23:32:19 2019
****************************************

Attributes
===========
M Master Clock
G Generated Clock
& Internal Generated Clock
U User Defined Skew Group
D Default Skew Group
* Generated Clock Balanced Separately

===========================================================
==== Summary Reporting for Corner mode_norm.fast.RCmin ====
===========================================================

========================================== Summary Table for Corner mode_norm.fast.RCmin ===========================================
Clock /                               Attrs     Sinks Levels    Clock     Clock     Clock       Max    Global  Trans DRC  Cap DRC
Skew Group                                                   Repeater  Repeater   Stdcell   Latency      Skew     Count     Count
                                                                Count      Area      Area
------------------------------------------------------------------------------------------------------------------------------------
### Mode: mode_norm.fast.RCmin, Scenario: mode_norm.fast.RCmin
HCLK                                    M,D       841     18      232     86.90    116.98      0.00      0.00         0         0
------------------------------------------------------------------------------------------------------------------------------------
All Clocks                                        841     18      232     86.90    116.98      0.00      0.00         0         0


Warning: The scenario mode_norm.fast.RCmin_bc has max transition DRC fixing disabled using the set_scenario_status command.  High DRC count may be expected.
Warning: The scenario mode_norm.fast.RCmin_bc has max capacitance DRC fixing disabled using the set_scenario_status command.  High DRC count may be expected.
==============================================================
==== Summary Reporting for Corner mode_norm.fast.RCmin_bc ====
==============================================================

========================================= Summary Table for Corner mode_norm.fast.RCmin_bc =========================================
Clock /                               Attrs     Sinks Levels    Clock     Clock     Clock       Max    Global  Trans DRC  Cap DRC
Skew Group                                                   Repeater  Repeater   Stdcell   Latency      Skew     Count     Count
                                                                Count      Area      Area
------------------------------------------------------------------------------------------------------------------------------------
### Mode: mode_norm.fast.RCmin_bc, Scenario: mode_norm.fast.RCmin_bc
HCLK                                    M,D       841     18      232     86.90    116.98     73.34     32.04         0         0
------------------------------------------------------------------------------------------------------------------------------------
All Clocks                                        841     18      232     86.90    116.98     73.34     32.04         0         0


===========================================================
==== Summary Reporting for Corner mode_norm.slow.RCmax ====
===========================================================

========================================== Summary Table for Corner mode_norm.slow.RCmax ===========================================
Clock /                               Attrs     Sinks Levels    Clock     Clock     Clock       Max    Global  Trans DRC  Cap DRC
Skew Group                                                   Repeater  Repeater   Stdcell   Latency      Skew     Count     Count
                                                                Count      Area      Area
------------------------------------------------------------------------------------------------------------------------------------
### Mode: mode_norm.slow.RCmax, Scenario: mode_norm.slow.RCmax
HCLK                                    M,D       841     18      232     86.90    116.98     77.17     34.33        58         0
------------------------------------------------------------------------------------------------------------------------------------
All Clocks                                        841     18      232     86.90    116.98     77.17     34.33        58         0


================================================================
==== Summary Reporting for Corner mode_norm.worst_low.RCmax ====
================================================================

======================================== Summary Table for Corner mode_norm.worst_low.RCmax ========================================
Clock /                               Attrs     Sinks Levels    Clock     Clock     Clock       Max    Global  Trans DRC  Cap DRC
Skew Group                                                   Repeater  Repeater   Stdcell   Latency      Skew     Count     Count
                                                                Count      Area      Area
------------------------------------------------------------------------------------------------------------------------------------
### Mode: mode_norm.worst_low.RCmax, Scenario: mode_norm.worst_low.RCmax
HCLK                                    M,D       841     18      232     86.90    116.98     95.62     43.30        43         0
------------------------------------------------------------------------------------------------------------------------------------
All Clocks                                        841     18      232     86.90    116.98     95.62     43.30        43         0


1
Dispatching command : 'report_clock_qor -type latency -show_paths -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.latency
Dispatching command : 'report_clock_qor -type area -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.cell_area
Dispatching command : 'report_clock_qor -type structure -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.structure
Dispatching command : 'report_clock_qor -type drc_violators -all -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.drc_violators
Dispatching command : 'report_clock_timing -type summary -nosplit -scenarios [get_scenarios]' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_timing
Waiting for all dispatched commands to complete ...
Done.

All command runs are done. Below is the status.

Completed 'report_clock_qor -type latency -show_paths -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.latency'

Completed 'report_clock_qor -type area -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.cell_area'

Completed 'report_clock_qor -type structure -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.structure'

Completed 'report_clock_qor -type drc_violators -all -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_qor.drc_violators'

Completed 'report_clock_timing -type summary -nosplit -scenarios [get_scenarios]' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_clock_timing'

RM-info: Running report_clock_qor -type power ...

RM-info: Reporting timing constraints ...

Dispatching command : 'report_mode -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_mode
Dispatching command : 'report_pvt -nosplit' > ${REPORTS_DIR}/${REPORT_PREFIX}.report_pvt
Waiting for all dispatched commands to complete ...
Done.

All command runs are done. Below is the status.

Completed 'report_mode -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_mode'

Completed 'report_pvt -nosplit' successfully.
Output is in log '${REPORTS_DIR}/${REPORT_PREFIX}.report_pvt'

RM-info: Reporting timing and QoR ...

****************************************
Report : qor
        -summary
Design : CORTEXM0DS
Version: P-2019.03-SP1
Date   : Thu Sep 26 23:32:45 2019
****************************************
Information: Timer using 'PrimeTime Delay Calculation, SI, Timing Window Analysis, AWP, CRPR'. (TIM-050)

Timing
---------------------------------------------------------------------------
Context                                 WNS            TNS            NVE
---------------------------------------------------------------------------
mode_norm.slow.RCmax (Setup)          81.00           0.00              0
mode_norm.worst_low.RCmax (Setup)           2.95           0.00              0
Design             (Setup)             2.95           0.00              0

mode_norm.fast.RCmin_bc (Hold)         -23.66        -959.98            311
Design             (Hold)            -23.66        -959.98            311
---------------------------------------------------------------------------

Miscellaneous
---------------------------------------------------------------------------
Cell Area (netlist):                           3378.81
Cell Area (netlist and physical only):         3378.81
Nets with DRC Violations:       77
1
Information: Timer using 'PrimeTime Delay Calculation, SI, Timing Window Analysis, AWP, CRPR'. (TIM-050)
****************************************
Report : global timing
        -format { narrow }
        -report_by design
Design : CORTEXM0DS
Version: P-2019.03-SP1
Date   : Thu Sep 26 23:32:45 2019
****************************************

No setup violations found.


Hold violations
--------------------------------------------------------------
          Total   reg->reg    in->reg   reg->out    in->out
--------------------------------------------------------------
WNS      -23.66     -23.66       0.00       0.00       0.00
TNS     -959.98    -959.98       0.00       0.00       0.00
NUM         311        311          0          0          0
--------------------------------------------------------------

1
RM-info: Analyzing design violations ...

****************************************
Report : check_mv_design
        -erc_mode
        -voltage_threshold 0
Design : CORTEXM0DS
Version: P-2019.03-SP1
Date   : Thu Sep 26 23:32:45 2019
****************************************

---------- Power domain rule ----------
No errors or warnings.

---------- Supply set rule ----------
No errors or warnings.

---------- Supply net rule ----------
No errors or warnings.

---------- Supply port rule ----------
No errors or warnings.

---------- Isolation strategy rule ----------
No errors or warnings.

---------- Level shifter strategy rule ----------
No errors or warnings.

---------- Retention strategy rule ----------
No errors or warnings.

---------- Power switch strategy rule ----------
No errors or warnings.

---------- Repeater rule ----------
No errors or warnings.

---------- Terminal boundary rule ----------
No errors or warnings.

---------- Isolation cell rule ----------
No errors or warnings.

---------- Level shifter cell rule ----------
No errors or warnings.

---------- Retention cell rule ----------
No errors or warnings.

---------- Switch cell rule ----------
No errors or warnings.

---------- PGMUX rule ----------
No errors or warnings.

---------- Diode cell rule ----------
No errors or warnings.

---------- Model rule ----------
No errors or warnings.

---------- Isolation rule ----------
No errors or warnings.

---------- Voltage shifting rule ----------
No errors or warnings.

---------- Tie-off connection rule ----------
No errors or warnings.

---------- Analog net rule ----------
No errors or warnings.

---------- Physical block pin rule ----------
No errors or warnings.

---------- PG pin rule ----------
No errors or warnings.

---------- Signal pin rule ----------
No errors or warnings.

---------- Summary ----------
Information: Total 0 error(s) and 0 warning(s) from check_mv_design. (MV-082)
1
****************************************
Report : check_mv_design
        -power_connectivity
Design : CORTEXM0DS
Version: P-2019.03-SP1
Date   : Thu Sep 26 23:32:45 2019
****************************************

---------- Power domain rule ----------
No errors or warnings.

---------- Supply set rule ----------
No errors or warnings.

---------- Supply net rule ----------
No errors or warnings.

---------- Supply port rule ----------
No errors or warnings.

---------- Isolation strategy rule ----------
No errors or warnings.

---------- Level shifter strategy rule ----------
No errors or warnings.

---------- Retention strategy rule ----------
No errors or warnings.

---------- Power switch strategy rule ----------
No errors or warnings.

---------- Repeater rule ----------
No errors or warnings.

---------- Terminal boundary rule ----------
No errors or warnings.

---------- Isolation cell rule ----------
No errors or warnings.

---------- Level shifter cell rule ----------
No errors or warnings.

---------- Retention cell rule ----------
No errors or warnings.

---------- Switch cell rule ----------
No errors or warnings.

---------- PGMUX rule ----------
No errors or warnings.

---------- Diode cell rule ----------
No errors or warnings.

---------- Model rule ----------
No errors or warnings.

---------- Isolation rule ----------
No errors or warnings.

---------- Voltage shifting rule ----------
No errors or warnings.

---------- Tie-off connection rule ----------
No errors or warnings.

---------- PG net rule ----------
No errors or warnings.

---------- Analog net rule ----------
No errors or warnings.

---------- Physical block pin rule ----------
No errors or warnings.

---------- PG pin rule ----------
No errors or warnings.

---------- Power connectivity rule ----------
Warning: PG pin 'u_logic_J6i2z4_reg/VPW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_J6i2z4_reg/VNW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Zei2z4_reg/VPW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Zei2z4_reg/VNW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Gji2z4_reg/VPW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Gji2z4_reg/VNW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Tki2z4_reg/VPW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Tki2z4_reg/VNW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Idk2z4_reg/VPW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Idk2z4_reg/VNW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Wbk2z4_reg/VPW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Wbk2z4_reg/VNW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Tdp2z4_reg/VPW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Tdp2z4_reg/VNW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_K3l2z4_reg/VPW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_K3l2z4_reg/VNW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Hzj2z4_reg/VPW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_Hzj2z4_reg/VNW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_A4t2z4_reg/VPW' is unconnected. (MV-005)
Warning: PG pin 'u_logic_A4t2z4_reg/VNW' is unconnected. (MV-005)
Information: Message 'MV-005' limit (20) exceeded. Remainder will be suppressed. The limit can be changed with '-max_message_count' option. (MV-079)
Information: Total 17886 MV-005 violations. (MV-080)

---------- Signal pin rule ----------
No errors or warnings.

---------- Summary ----------
Information: Total 0 error(s) and 17886 warning(s) from check_mv_design. (MV-082)
1
****************************************
Report : check_mv_design
Design : CORTEXM0DS
Version: P-2019.03-SP1
Date   : Thu Sep 26 23:32:45 2019
****************************************

---------- Power domain rule ----------
No errors or warnings.

---------- Supply set rule ----------
No errors or warnings.

---------- Supply net rule ----------
No errors or warnings.

---------- Supply port rule ----------
No errors or warnings.

---------- Isolation strategy rule ----------
No errors or warnings.

---------- Level shifter strategy rule ----------
No errors or warnings.

---------- Retention strategy rule ----------
No errors or warnings.

---------- Power switch strategy rule ----------
No errors or warnings.

---------- Repeater rule ----------
No errors or warnings.

---------- Terminal boundary rule ----------
No errors or warnings.

---------- Isolation cell rule ----------
No errors or warnings.

---------- Level shifter cell rule ----------
No errors or warnings.

---------- Retention cell rule ----------
No errors or warnings.

---------- Switch cell rule ----------
No errors or warnings.

---------- PGMUX rule ----------
No errors or warnings.

---------- Diode cell rule ----------
No errors or warnings.

---------- Model rule ----------
No errors or warnings.

---------- Isolation rule ----------
No errors or warnings.

---------- Voltage shifting rule ----------
No errors or warnings.

---------- Tie-off connection rule ----------
No errors or warnings.

---------- Analog net rule ----------
No errors or warnings.

---------- Physical block pin rule ----------
No errors or warnings.

---------- PG pin rule ----------
No errors or warnings.

---------- Signal pin rule ----------
No errors or warnings.

---------- Summary ----------
Information: Total 0 error(s) and 0 warning(s) from check_mv_design. (MV-082)
1
Loading cell instances...
Number of Standard Cells: 8943
Number of Macro Cells: 0
Number of IO Pad Cells: 0
Number of Blocks: 0
Loading P/G wires and vias...
Number of VDD Wires: 94
Number of VDD Vias: 8667
Number of VDD Terminals: 76
Number of VSS Wires: 89
Number of VSS Vias: 8417
Number of VSS Terminals: 76
**************Verify net VDD connectivity*****************
  Number of floating wires: 13
  Number of floating vias: 0
  Number of floating std cells: 2379
  Number of floating hard macros: 0
  Number of floating I/O pads: 0
  Number of floating terminals: 0
  Number of floating hierarchical blocks: 0
************************************************************
**************Verify net VSS connectivity*****************
  Number of floating wires: 14
  Number of floating vias: 0
  Number of floating std cells: 2468
  Number of floating hard macros: 0
  Number of floating I/O pads: 0
  Number of floating terminals: 0
  Number of floating hierarchical blocks: 0
************************************************************
Overall runtime: 0 seconds.
{PATH_3_2 PATH_3_9 PATH_3_10 PATH_3_12 PATH_3_15 PATH_3_22 PATH_3_23 PATH_3_25 PATH_3_28 PATH_3_35 PATH_3_36 PATH_3_38 PATH_3_41 PATH_3_48 PATH_3_49 PATH_3_51 PATH_3_54 PATH_3_62 PATH_3_64 PATH_3_67 PATH_3_75 PATH_3_77 PATH_3_80 PATH_3_88 PATH_3_90 PATH_3_93 PATH_3_95}
RM-info: Running report_power ...

RM-info: Reporting design information ...

****************************************
Report : report_utilization
Design : CORTEXM0DS
Version: P-2019.03-SP1
Date   : Thu Sep 26 23:32:46 2019
****************************************
Utilization Ratio:			0.5830
Utilization options:
 - Area calculation based on:		site_row of block CORTEXM0DS/route_auto
 - Categories of objects excluded:	hard_macros macro_keepouts soft_macros io_cells hard_blockages 
Total Area:				5795.4632
Total Capacity Area:			5795.4632
Total Area of cells:			3378.8068
Area of excluded objects:
 - hard_macros         :		0.0000
 - macro_keepouts      :		0.0000
 - soft_macros         :		0.0000
 - io_cells            :		0.0000
 - hard_blockages      :		0.0000

Utilization of site-rows with:
 - Site 'unit':				0.5830

0.5830
RM-info: Checking design issues ...

RM-info: Reporting units ...

RM-info: Reporting non-default app option settings ...

RM-info: time.si_enable_analysis is set to false ...

Information: The net parasitics of block CORTEXM0DS are cleared. (TIM-123)
RM-info: Reporting timing and QoR in non-SI mode ...

****************************************
Report : qor
        -summary
Design : CORTEXM0DS
Version: P-2019.03-SP1
Date   : Thu Sep 26 23:32:49 2019
****************************************
Information: Timer using 'PrimeTime Delay Calculation, AWP, CRPR'. (TIM-050)

Timing
---------------------------------------------------------------------------
Context                                 WNS            TNS            NVE
---------------------------------------------------------------------------
mode_norm.slow.RCmax (Setup)          83.43           0.00              0
mode_norm.worst_low.RCmax (Setup)           7.45           0.00              0
Design             (Setup)             7.45           0.00              0

mode_norm.fast.RCmin_bc (Hold)          -7.35         -99.33            139
Design             (Hold)             -7.35         -99.33            139
---------------------------------------------------------------------------

Miscellaneous
---------------------------------------------------------------------------
Cell Area (netlist):                           3378.81
Cell Area (netlist and physical only):         3378.81
Nets with DRC Violations:       63
1
Information: The net parasitics of block CORTEXM0DS are cleared. (TIM-123)
RM-info: Completed script /afs/eos.ncsu.edu/lockers/workspace/ece/ece720/001/zwang79/zwang79/hw03/icc2rm/rm_icc2_pnr_scripts/report_qor.tcl

print_message_info -ids * -summary

Id             Severity         Limit    Occurrences   Suppressed
--------------------------------------------------------------------
FILE-007    Information             0              2            0
LNK-040     Information             0              1            0
MV-005          Warning             0             20            0
MV-079      Information             0              1            0
MV-080      Information             0              1            0
MV-082      Information             0              3            0
NEX-011     Information             0              2            0
NEX-012     Information             0              1            0
NEX-017     Information             0              4            0
NEX-022     Information             0              6            0
NEX-024     Information             0              6            0
NEX-028     Information             0              3            0
NEX-029     Information             0              2            0
NEX-030     Information             0              1            0
POW-005     Information            10              1            0
POW-009         Warning            10              4            0
POW-024     Information            10              2            0
POW-052     Information            10              2            0
PVT-032     Information             0             12            0
TIM-050     Information             0              8            0
TIM-111     Information             0              6            0
TIM-112     Information             0              6            0
TIM-114     Information             0              2            0
TIM-123     Information             0              6            0
TIM-124     Information             0              1            0
TIM-125     Information             0              6            0
TIM-201     Information             0              2            0
TIM-204         Warning             0              1            0
TIM-207         Warning             0              1            0
TIM-214     Information             0              1            0
UIC-058         Warning             0             13            0
ZRT-309         Warning             0              1            0
ZRT-444     Information             0              5            0
ZRT-559     Information             0              1            0
ZRT-574     Information             0              3            0
ZRT-613     Information             0              4            0
ZRT-647         Warning             0              1            0

Diagnostics summary: 41 warnings, 101 informationals
echo [date] > route_auto 
exit
Maximum memory usage for this session: 1098.59 MB
CPU usage for this session:    129 seconds (  0.04 hours)
Elapsed time for this session:     66 seconds (  0.02 hours)
Thank you for using IC Compiler II.
